ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"zaxis.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	Z_axis_state,1,1
  19              		.comm	Z_pos,2,2
  20              		.global	screw_lead
  21              		.data
  22              		.align	1
  23              		.type	screw_lead, %object
  24              		.size	screw_lead, 2
  25              	screw_lead:
  26 0000 5000     		.short	80
  27              		.global	motor_steps_turn
  28              		.align	1
  29              		.type	motor_steps_turn, %object
  30              		.size	motor_steps_turn, 2
  31              	motor_steps_turn:
  32 0002 C800     		.short	200
  33              		.global	f_ustepping
  34              		.align	1
  35              		.type	f_ustepping, %object
  36              		.size	f_ustepping, 2
  37              	f_ustepping:
  38 0004 0400     		.short	4
  39              		.global	motor_direction
  40              		.type	motor_direction, %object
  41              		.size	motor_direction, 1
  42              	motor_direction:
  43 0006 01       		.byte	1
  44              		.global	Z_axis_bumper_count
  45 0007 00       		.bss
  46              		.type	Z_axis_bumper_count, %object
  47              		.size	Z_axis_bumper_count, 1
  48              	Z_axis_bumper_count:
  49 0000 00       		.space	1
  50              		.global	motor_up
  51              		.section	.rodata
  52              		.type	motor_up, %object
  53              		.size	motor_up, 1
  54              	motor_up:
  55 0000 01       		.byte	1
  56              		.global	motor_down
  57              		.type	motor_down, %object
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 2


  58              		.size	motor_down, 1
  59              	motor_down:
  60 0001 00       		.space	1
  61              		.global	max_distance
  62              		.align	1
  63              		.type	max_distance, %object
  64              		.size	max_distance, 2
  65              	max_distance:
  66 0002 A20D     		.short	3490
  67              		.section	.text.Z_Axis_Init,"ax",%progbits
  68              		.align	2
  69              		.global	Z_Axis_Init
  70              		.thumb
  71              		.thumb_func
  72              		.type	Z_Axis_Init, %function
  73              	Z_Axis_Init:
  74              	.LFB56:
  75              		.file 1 ".\\zaxis.c"
   1:.\zaxis.c     **** 
   2:.\zaxis.c     **** #include "zaxis.h"
   3:.\zaxis.c     **** 
   4:.\zaxis.c     **** /*----Private functions declarations----*/
   5:.\zaxis.c     **** CY_ISR(Z_Axis_Bumper_ISR);
   6:.\zaxis.c     **** CY_ISR(Z_Axis_Move_ISR);
   7:.\zaxis.c     **** void Z_Axis_Bumper_Stops();
   8:.\zaxis.c     **** 
   9:.\zaxis.c     **** /*---- State Machine definition ----*/
  10:.\zaxis.c     **** #define WAITING_FOR_BUMPER1 0
  11:.\zaxis.c     **** #define GOING_AWAY 1
  12:.\zaxis.c     **** #define WAITING_FOR_BUMPER2 2
  13:.\zaxis.c     **** #define HOME 3
  14:.\zaxis.c     **** 
  15:.\zaxis.c     **** 
  16:.\zaxis.c     **** /*----Private variables---*/
  17:.\zaxis.c     **** uint8 Z_axis_state;
  18:.\zaxis.c     **** uint16 Z_pos;
  19:.\zaxis.c     **** uint16 screw_lead = 80;           // in hundreds of micrometers/turn
  20:.\zaxis.c     **** uint16 motor_steps_turn = 200;      // steps/turn for motor
  21:.\zaxis.c     **** uint16 f_ustepping = 4;             // microstepping factor (1,2,4,8,16)
  22:.\zaxis.c     **** uint8 motor_direction = 1;          // 1 = up, 0 = down
  23:.\zaxis.c     **** uint8 Z_axis_bumper_count = 0;
  24:.\zaxis.c     **** const uint8 motor_up = 1;
  25:.\zaxis.c     **** const uint8 motor_down = 0;
  26:.\zaxis.c     **** const uint16 max_distance = 3490;   // hundreds of micrometers
  27:.\zaxis.c     **** 
  28:.\zaxis.c     **** void Z_Axis_Init()
  29:.\zaxis.c     **** {
  76              		.loc 1 29 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 3


  30:.\zaxis.c     ****      //*****Init variables******///
  31:.\zaxis.c     ****     Z_Axis_Clock_Start();
  86              		.loc 1 31 0
  87 0004 FFF7FEFF 		bl	Z_Axis_Clock_Start
  32:.\zaxis.c     ****     
  33:.\zaxis.c     ****     //Motor speed init
  34:.\zaxis.c     ****     Z_Motor_Speed_Start();
  88              		.loc 1 34 0
  89 0008 FFF7FEFF 		bl	Z_Motor_Speed_Start
  35:.\zaxis.c     ****     //Distance init
  36:.\zaxis.c     ****     Z_Step_Dist_Start();
  90              		.loc 1 36 0
  91 000c FFF7FEFF 		bl	Z_Step_Dist_Start
  37:.\zaxis.c     ****     //Motor power init
  38:.\zaxis.c     ****     Z_Axis_Power_Start();
  92              		.loc 1 38 0
  93 0010 FFF7FEFF 		bl	Z_Axis_Power_Start
  39:.\zaxis.c     ****     
  40:.\zaxis.c     ****     //Bumper interrupt initialization
  41:.\zaxis.c     ****     //Z_Axis_Bumper_ISR_StartEx(Z_Axis_Bumper_ISR);
  42:.\zaxis.c     ****     //Z_Axis_Bumper_Port_ClearInterrupt();
  43:.\zaxis.c     ****     //Z_Axis_Bumper_ISR_ClearPending();
  44:.\zaxis.c     ****     
  45:.\zaxis.c     ****     //Movement interrupt initialization
  46:.\zaxis.c     ****     Z_Axis_Move_ISR_StartEx(Z_Axis_Move_ISR);
  94              		.loc 1 46 0
  95 0014 2C48     		ldr	r0, .L11
  96 0016 FFF7FEFF 		bl	Z_Axis_Move_ISR_StartEx
  47:.\zaxis.c     ****     Z_Axis_Move_ISR_ClearPending();
  97              		.loc 1 47 0
  98 001a FFF7FEFF 		bl	Z_Axis_Move_ISR_ClearPending
  48:.\zaxis.c     ****     
  49:.\zaxis.c     ****     switch (f_ustepping) {
  99              		.loc 1 49 0
 100 001e 2B4B     		ldr	r3, .L11+4
 101 0020 1B88     		ldrh	r3, [r3]
 102 0022 013B     		subs	r3, r3, #1
 103 0024 0F2B     		cmp	r3, #15
 104 0026 3FD8     		bhi	.L10
 105 0028 01A2     		adr	r2, .L4
 106 002a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 107 002e 00BF     		.p2align 2
 108              	.L4:
 109 0030 71000000 		.word	.L3+1
 110 0034 7F000000 		.word	.L5+1
 111 0038 A9000000 		.word	.L10+1
 112 003c 8D000000 		.word	.L6+1
 113 0040 A9000000 		.word	.L10+1
 114 0044 A9000000 		.word	.L10+1
 115 0048 A9000000 		.word	.L10+1
 116 004c A9000000 		.word	.L10+1
 117 0050 A9000000 		.word	.L10+1
 118 0054 A9000000 		.word	.L10+1
 119 0058 A9000000 		.word	.L10+1
 120 005c A9000000 		.word	.L10+1
 121 0060 A9000000 		.word	.L10+1
 122 0064 A9000000 		.word	.L10+1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 4


 123 0068 A9000000 		.word	.L10+1
 124 006c 9B000000 		.word	.L8+1
 125              		.p2align 1
 126              	.L3:
  50:.\zaxis.c     ****         case 1: // 1 ustepping
  51:.\zaxis.c     ****         {
  52:.\zaxis.c     ****             Z_Axis_StepSizeA_Write(0);
 127              		.loc 1 52 0
 128 0070 0020     		movs	r0, #0
 129 0072 FFF7FEFF 		bl	Z_Axis_StepSizeA_Write
  53:.\zaxis.c     ****             Z_Axis_StepSizeB_Write(0);
 130              		.loc 1 53 0
 131 0076 0020     		movs	r0, #0
 132 0078 FFF7FEFF 		bl	Z_Axis_StepSizeB_Write
  54:.\zaxis.c     ****             break;
 133              		.loc 1 54 0
 134 007c 15E0     		b	.L9
 135              	.L5:
  55:.\zaxis.c     ****         }
  56:.\zaxis.c     ****         
  57:.\zaxis.c     ****         case 2: // 1/2 ustepping
  58:.\zaxis.c     ****         {
  59:.\zaxis.c     ****             Z_Axis_StepSizeA_Write(1);
 136              		.loc 1 59 0
 137 007e 0120     		movs	r0, #1
 138 0080 FFF7FEFF 		bl	Z_Axis_StepSizeA_Write
  60:.\zaxis.c     ****             Z_Axis_StepSizeB_Write(0);
 139              		.loc 1 60 0
 140 0084 0020     		movs	r0, #0
 141 0086 FFF7FEFF 		bl	Z_Axis_StepSizeB_Write
  61:.\zaxis.c     ****             break;
 142              		.loc 1 61 0
 143 008a 0EE0     		b	.L9
 144              	.L6:
  62:.\zaxis.c     ****         }
  63:.\zaxis.c     ****         
  64:.\zaxis.c     ****         case 4: // 1/4 ustepping
  65:.\zaxis.c     ****         {
  66:.\zaxis.c     ****             Z_Axis_StepSizeA_Write(0);
 145              		.loc 1 66 0
 146 008c 0020     		movs	r0, #0
 147 008e FFF7FEFF 		bl	Z_Axis_StepSizeA_Write
  67:.\zaxis.c     ****             Z_Axis_StepSizeB_Write(1);
 148              		.loc 1 67 0
 149 0092 0120     		movs	r0, #1
 150 0094 FFF7FEFF 		bl	Z_Axis_StepSizeB_Write
  68:.\zaxis.c     ****             break;
 151              		.loc 1 68 0
 152 0098 07E0     		b	.L9
 153              	.L8:
  69:.\zaxis.c     ****         }
  70:.\zaxis.c     ****         
  71:.\zaxis.c     ****         case 8: // 1/8 ustepping
  72:.\zaxis.c     ****         {
  73:.\zaxis.c     ****             //Allegro chip can't make 1/8 ustepping
  74:.\zaxis.c     ****             break;
  75:.\zaxis.c     ****         }
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 5


  76:.\zaxis.c     ****         
  77:.\zaxis.c     ****         case 16: // 1/16 ustepping
  78:.\zaxis.c     ****         {
  79:.\zaxis.c     ****             Z_Axis_StepSizeA_Write(1);
 154              		.loc 1 79 0
 155 009a 0120     		movs	r0, #1
 156 009c FFF7FEFF 		bl	Z_Axis_StepSizeA_Write
  80:.\zaxis.c     ****             Z_Axis_StepSizeB_Write(1);
 157              		.loc 1 80 0
 158 00a0 0120     		movs	r0, #1
 159 00a2 FFF7FEFF 		bl	Z_Axis_StepSizeB_Write
  81:.\zaxis.c     ****             break;
 160              		.loc 1 81 0
 161 00a6 00E0     		b	.L9
 162              	.L10:
  82:.\zaxis.c     ****         }
  83:.\zaxis.c     ****         default:
  84:.\zaxis.c     ****         {
  85:.\zaxis.c     ****             break;
 163              		.loc 1 85 0
 164 00a8 00BF     		nop
 165              	.L9:
  86:.\zaxis.c     ****         }
  87:.\zaxis.c     ****     }
  88:.\zaxis.c     ****     
  89:.\zaxis.c     ****     Z_Axis_Direction_Write(motor_direction);
 166              		.loc 1 89 0
 167 00aa 094B     		ldr	r3, .L11+8
 168 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 169 00ae 1846     		mov	r0, r3
 170 00b0 FFF7FEFF 		bl	Z_Axis_Direction_Write
  90:.\zaxis.c     ****     Z_Axis_Enable_Write(0);
 171              		.loc 1 90 0
 172 00b4 0020     		movs	r0, #0
 173 00b6 FFF7FEFF 		bl	Z_Axis_Enable_Write
  91:.\zaxis.c     ****     Z_axis_state = WAITING_FOR_BUMPER1;
 174              		.loc 1 91 0
 175 00ba 064B     		ldr	r3, .L11+12
 176 00bc 0022     		movs	r2, #0
 177 00be 1A70     		strb	r2, [r3]
  92:.\zaxis.c     ****     
  93:.\zaxis.c     ****     Z_Axis_Home();
 178              		.loc 1 93 0
 179 00c0 FFF7FEFF 		bl	Z_Axis_Home
  94:.\zaxis.c     **** }
 180              		.loc 1 94 0
 181 00c4 80BD     		pop	{r7, pc}
 182              	.L12:
 183 00c6 00BF     		.align	2
 184              	.L11:
 185 00c8 00000000 		.word	Z_Axis_Move_ISR
 186 00cc 00000000 		.word	f_ustepping
 187 00d0 00000000 		.word	motor_direction
 188 00d4 00000000 		.word	Z_axis_state
 189              		.cfi_endproc
 190              	.LFE56:
 191              		.size	Z_Axis_Init, .-Z_Axis_Init
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 6


 192              		.section	.text.Z_Axis_Home,"ax",%progbits
 193              		.align	2
 194              		.global	Z_Axis_Home
 195              		.thumb
 196              		.thumb_func
 197              		.type	Z_Axis_Home, %function
 198              	Z_Axis_Home:
 199              	.LFB57:
  95:.\zaxis.c     **** 
  96:.\zaxis.c     **** void Z_Axis_Home() {
 200              		.loc 1 96 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 84B0     		sub	sp, sp, #16
 209              		.cfi_def_cfa_offset 24
 210 0004 04AF     		add	r7, sp, #16
 211              		.cfi_def_cfa 7, 8
  97:.\zaxis.c     ****     //Verifies if already on bumper, otherwise gets to bumper
  98:.\zaxis.c     ****     if (!(Z_Axis_Bumper_Port_Read())){
 212              		.loc 1 98 0
 213 0006 FFF7FEFF 		bl	Z_Axis_Bumper_Port_Read
 214 000a 0346     		mov	r3, r0
 215 000c 002B     		cmp	r3, #0
 216 000e 21D1     		bne	.L14
  99:.\zaxis.c     ****         Z_Axis_Bumper_ISR_StartEx(Z_Axis_Bumper_ISR);
 217              		.loc 1 99 0
 218 0010 1848     		ldr	r0, .L16
 219 0012 FFF7FEFF 		bl	Z_Axis_Bumper_ISR_StartEx
 100:.\zaxis.c     ****         Z_Axis_Bumper_Port_ClearInterrupt();
 220              		.loc 1 100 0
 221 0016 FFF7FEFF 		bl	Z_Axis_Bumper_Port_ClearInterrupt
 101:.\zaxis.c     ****         Z_Axis_Bumper_ISR_ClearPending();
 222              		.loc 1 101 0
 223 001a FFF7FEFF 		bl	Z_Axis_Bumper_ISR_ClearPending
 102:.\zaxis.c     ****         // Activate motor to get to bumper
 103:.\zaxis.c     ****         Z_Axis_Direction_Write(motor_up);
 224              		.loc 1 103 0
 225 001e 0123     		movs	r3, #1
 226 0020 1846     		mov	r0, r3
 227 0022 FFF7FEFF 		bl	Z_Axis_Direction_Write
 104:.\zaxis.c     ****         Z_Step_Dist_WriteCompare(max_distance*((motor_steps_turn*f_ustepping)/screw_lead));
 228              		.loc 1 104 0
 229 0026 40F6A253 		movw	r3, #3490
 230 002a 1946     		mov	r1, r3
 231 002c 124B     		ldr	r3, .L16+4
 232 002e 1B88     		ldrh	r3, [r3]
 233 0030 1A46     		mov	r2, r3
 234 0032 124B     		ldr	r3, .L16+8
 235 0034 1B88     		ldrh	r3, [r3]
 236 0036 03FB02F3 		mul	r3, r3, r2
 237 003a 114A     		ldr	r2, .L16+12
 238 003c 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 7


 239 003e 93FBF2F3 		sdiv	r3, r3, r2
 240 0042 03FB01F3 		mul	r3, r3, r1
 241 0046 1846     		mov	r0, r3
 242 0048 FFF7FEFF 		bl	Z_Step_Dist_WriteCompare
 105:.\zaxis.c     ****         Z_GO_Write(1); //Motor starts
 243              		.loc 1 105 0
 244 004c 0120     		movs	r0, #1
 245 004e FFF7FEFF 		bl	Z_GO_Write
 246 0052 0DE0     		b	.L13
 247              	.L14:
 106:.\zaxis.c     ****     }
 107:.\zaxis.c     ****     else {
 108:.\zaxis.c     ****         sendDataToCAN(CAN_INSTRUCTION_SET_Z_AXIS_HOME, CAN_HARDWARE_FILTER_ID, 0x00, 0x00, 0x00, 0x
 248              		.loc 1 108 0
 249 0054 0023     		movs	r3, #0
 250 0056 0093     		str	r3, [sp]
 251 0058 0023     		movs	r3, #0
 252 005a 0193     		str	r3, [sp, #4]
 253 005c 0023     		movs	r3, #0
 254 005e 0293     		str	r3, [sp, #8]
 255 0060 0023     		movs	r3, #0
 256 0062 0393     		str	r3, [sp, #12]
 257 0064 0020     		movs	r0, #0
 258 0066 3021     		movs	r1, #48
 259 0068 0022     		movs	r2, #0
 260 006a 0023     		movs	r3, #0
 261 006c FFF7FEFF 		bl	sendDataToCAN
 262              	.L13:
 109:.\zaxis.c     ****     }
 110:.\zaxis.c     **** }
 263              		.loc 1 110 0
 264 0070 BD46     		mov	sp, r7
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 0072 80BD     		pop	{r7, pc}
 268              	.L17:
 269              		.align	2
 270              	.L16:
 271 0074 00000000 		.word	Z_Axis_Bumper_ISR
 272 0078 00000000 		.word	motor_steps_turn
 273 007c 00000000 		.word	f_ustepping
 274 0080 00000000 		.word	screw_lead
 275              		.cfi_endproc
 276              	.LFE57:
 277              		.size	Z_Axis_Home, .-Z_Axis_Home
 278              		.section	.text.Z_Axis_Bumper_Stops,"ax",%progbits
 279              		.align	2
 280              		.global	Z_Axis_Bumper_Stops
 281              		.thumb
 282              		.thumb_func
 283              		.type	Z_Axis_Bumper_Stops, %function
 284              	Z_Axis_Bumper_Stops:
 285              	.LFB58:
 111:.\zaxis.c     **** 
 112:.\zaxis.c     **** // Initialization for
 113:.\zaxis.c     **** void Z_Axis_Bumper_Stops()
 114:.\zaxis.c     **** {   
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 8


 286              		.loc 1 114 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290 0000 80B5     		push	{r7, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 84B0     		sub	sp, sp, #16
 295              		.cfi_def_cfa_offset 24
 296 0004 04AF     		add	r7, sp, #16
 297              		.cfi_def_cfa 7, 8
 115:.\zaxis.c     ****     switch (Z_axis_state){
 298              		.loc 1 115 0
 299 0006 264B     		ldr	r3, .L24
 300 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 301 000a 012B     		cmp	r3, #1
 302 000c 13D0     		beq	.L20
 303 000e 022B     		cmp	r3, #2
 304 0010 20D0     		beq	.L21
 305 0012 002B     		cmp	r3, #0
 306 0014 00D0     		beq	.L22
 116:.\zaxis.c     ****         case WAITING_FOR_BUMPER1:
 117:.\zaxis.c     ****         {
 118:.\zaxis.c     ****             Z_Step_Dist_WriteCompare(0);
 119:.\zaxis.c     ****             Z_pos = 0;
 120:.\zaxis.c     ****             Z_Axis_Move_ISR_ClearPending();
 121:.\zaxis.c     ****             Z_Axis_GoTo(200);
 122:.\zaxis.c     ****             Z_axis_state = GOING_AWAY;
 123:.\zaxis.c     ****             break;
 124:.\zaxis.c     ****         }
 125:.\zaxis.c     ****         
 126:.\zaxis.c     ****         case GOING_AWAY:
 127:.\zaxis.c     ****         {
 128:.\zaxis.c     ****             Z_Step_Dist_WriteCompare(0);
 129:.\zaxis.c     ****             Z_pos = 0;
 130:.\zaxis.c     ****             Z_Axis_Move_ISR_ClearPending();
 131:.\zaxis.c     ****             Z_Axis_GoTo(200);
 132:.\zaxis.c     ****             Z_axis_state = GOING_AWAY;
 133:.\zaxis.c     ****             break;
 134:.\zaxis.c     ****         }
 135:.\zaxis.c     ****         
 136:.\zaxis.c     ****         case WAITING_FOR_BUMPER2:
 137:.\zaxis.c     ****         {
 138:.\zaxis.c     ****             Z_axis_state = WAITING_FOR_BUMPER1;
 139:.\zaxis.c     ****             Z_Step_Dist_WriteCompare(0);
 140:.\zaxis.c     ****             Z_pos = 0;
 141:.\zaxis.c     ****             Z_Axis_Move_ISR_ClearPending();
 142:.\zaxis.c     ****             sendDataToCAN(CAN_INSTRUCTION_SET_Z_AXIS_HOME, CAN_HARDWARE_FILTER_ID, 0x00, 0x00, 0x00
 143:.\zaxis.c     ****             CyDelay(200);
 144:.\zaxis.c     ****             Z_Axis_Bumper_ISR_ClearPending();
 145:.\zaxis.c     ****             Z_Axis_Bumper_Port_ClearInterrupt();
 146:.\zaxis.c     ****             Z_Axis_Bumper_ISR_Stop();
 147:.\zaxis.c     ****             break;
 148:.\zaxis.c     ****         }
 149:.\zaxis.c     ****         default:
 150:.\zaxis.c     ****         {
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 9


 151:.\zaxis.c     ****             break;
 307              		.loc 1 151 0
 308 0016 40E0     		b	.L18
 309              	.L22:
 118:.\zaxis.c     ****             Z_pos = 0;
 310              		.loc 1 118 0
 311 0018 0020     		movs	r0, #0
 312 001a FFF7FEFF 		bl	Z_Step_Dist_WriteCompare
 119:.\zaxis.c     ****             Z_Axis_Move_ISR_ClearPending();
 313              		.loc 1 119 0
 314 001e 214B     		ldr	r3, .L24+4
 315 0020 0022     		movs	r2, #0
 316 0022 1A80     		strh	r2, [r3]	@ movhi
 120:.\zaxis.c     ****             Z_Axis_GoTo(200);
 317              		.loc 1 120 0
 318 0024 FFF7FEFF 		bl	Z_Axis_Move_ISR_ClearPending
 121:.\zaxis.c     ****             Z_axis_state = GOING_AWAY;
 319              		.loc 1 121 0
 320 0028 C820     		movs	r0, #200
 321 002a FFF7FEFF 		bl	Z_Axis_GoTo
 122:.\zaxis.c     ****             break;
 322              		.loc 1 122 0
 323 002e 1C4B     		ldr	r3, .L24
 324 0030 0122     		movs	r2, #1
 325 0032 1A70     		strb	r2, [r3]
 123:.\zaxis.c     ****         }
 326              		.loc 1 123 0
 327 0034 31E0     		b	.L18
 328              	.L20:
 128:.\zaxis.c     ****             Z_pos = 0;
 329              		.loc 1 128 0
 330 0036 0020     		movs	r0, #0
 331 0038 FFF7FEFF 		bl	Z_Step_Dist_WriteCompare
 129:.\zaxis.c     ****             Z_Axis_Move_ISR_ClearPending();
 332              		.loc 1 129 0
 333 003c 194B     		ldr	r3, .L24+4
 334 003e 0022     		movs	r2, #0
 335 0040 1A80     		strh	r2, [r3]	@ movhi
 130:.\zaxis.c     ****             Z_Axis_GoTo(200);
 336              		.loc 1 130 0
 337 0042 FFF7FEFF 		bl	Z_Axis_Move_ISR_ClearPending
 131:.\zaxis.c     ****             Z_axis_state = GOING_AWAY;
 338              		.loc 1 131 0
 339 0046 C820     		movs	r0, #200
 340 0048 FFF7FEFF 		bl	Z_Axis_GoTo
 132:.\zaxis.c     ****             break;
 341              		.loc 1 132 0
 342 004c 144B     		ldr	r3, .L24
 343 004e 0122     		movs	r2, #1
 344 0050 1A70     		strb	r2, [r3]
 133:.\zaxis.c     ****         }
 345              		.loc 1 133 0
 346 0052 22E0     		b	.L18
 347              	.L21:
 138:.\zaxis.c     ****             Z_Step_Dist_WriteCompare(0);
 348              		.loc 1 138 0
 349 0054 124B     		ldr	r3, .L24
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 10


 350 0056 0022     		movs	r2, #0
 351 0058 1A70     		strb	r2, [r3]
 139:.\zaxis.c     ****             Z_pos = 0;
 352              		.loc 1 139 0
 353 005a 0020     		movs	r0, #0
 354 005c FFF7FEFF 		bl	Z_Step_Dist_WriteCompare
 140:.\zaxis.c     ****             Z_Axis_Move_ISR_ClearPending();
 355              		.loc 1 140 0
 356 0060 104B     		ldr	r3, .L24+4
 357 0062 0022     		movs	r2, #0
 358 0064 1A80     		strh	r2, [r3]	@ movhi
 141:.\zaxis.c     ****             sendDataToCAN(CAN_INSTRUCTION_SET_Z_AXIS_HOME, CAN_HARDWARE_FILTER_ID, 0x00, 0x00, 0x00
 359              		.loc 1 141 0
 360 0066 FFF7FEFF 		bl	Z_Axis_Move_ISR_ClearPending
 142:.\zaxis.c     ****             CyDelay(200);
 361              		.loc 1 142 0
 362 006a 0023     		movs	r3, #0
 363 006c 0093     		str	r3, [sp]
 364 006e 0023     		movs	r3, #0
 365 0070 0193     		str	r3, [sp, #4]
 366 0072 0023     		movs	r3, #0
 367 0074 0293     		str	r3, [sp, #8]
 368 0076 0023     		movs	r3, #0
 369 0078 0393     		str	r3, [sp, #12]
 370 007a 0020     		movs	r0, #0
 371 007c 3021     		movs	r1, #48
 372 007e 0022     		movs	r2, #0
 373 0080 0023     		movs	r3, #0
 374 0082 FFF7FEFF 		bl	sendDataToCAN
 143:.\zaxis.c     ****             Z_Axis_Bumper_ISR_ClearPending();
 375              		.loc 1 143 0
 376 0086 C820     		movs	r0, #200
 377 0088 FFF7FEFF 		bl	CyDelay
 144:.\zaxis.c     ****             Z_Axis_Bumper_Port_ClearInterrupt();
 378              		.loc 1 144 0
 379 008c FFF7FEFF 		bl	Z_Axis_Bumper_ISR_ClearPending
 145:.\zaxis.c     ****             Z_Axis_Bumper_ISR_Stop();
 380              		.loc 1 145 0
 381 0090 FFF7FEFF 		bl	Z_Axis_Bumper_Port_ClearInterrupt
 146:.\zaxis.c     ****             break;
 382              		.loc 1 146 0
 383 0094 FFF7FEFF 		bl	Z_Axis_Bumper_ISR_Stop
 147:.\zaxis.c     ****         }
 384              		.loc 1 147 0
 385 0098 00BF     		nop
 386              	.L18:
 152:.\zaxis.c     ****         }
 153:.\zaxis.c     ****     }
 154:.\zaxis.c     **** }
 387              		.loc 1 154 0
 388 009a BD46     		mov	sp, r7
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 009c 80BD     		pop	{r7, pc}
 392              	.L25:
 393 009e 00BF     		.align	2
 394              	.L24:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 11


 395 00a0 00000000 		.word	Z_axis_state
 396 00a4 00000000 		.word	Z_pos
 397              		.cfi_endproc
 398              	.LFE58:
 399              		.size	Z_Axis_Bumper_Stops, .-Z_Axis_Bumper_Stops
 400              		.section	.text.Z_Axis_GoTo,"ax",%progbits
 401              		.align	2
 402              		.global	Z_Axis_GoTo
 403              		.thumb
 404              		.thumb_func
 405              		.type	Z_Axis_GoTo, %function
 406              	Z_Axis_GoTo:
 407              	.LFB59:
 155:.\zaxis.c     **** 
 156:.\zaxis.c     **** void Z_Axis_GoTo(uint16 position){
 408              		.loc 1 156 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 16
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412 0000 80B5     		push	{r7, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 88B0     		sub	sp, sp, #32
 417              		.cfi_def_cfa_offset 40
 418 0004 04AF     		add	r7, sp, #16
 419              		.cfi_def_cfa 7, 24
 420 0006 0346     		mov	r3, r0
 421 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 157:.\zaxis.c     ****     uint16 travel;
 158:.\zaxis.c     ****     uint32 steps_to_do;
 159:.\zaxis.c     ****     if (position > max_distance){position = max_distance;}
 422              		.loc 1 159 0
 423 000a 40F6A252 		movw	r2, #3490
 424 000e FB88     		ldrh	r3, [r7, #6]
 425 0010 9342     		cmp	r3, r2
 426 0012 02D9     		bls	.L27
 427              		.loc 1 159 0 is_stmt 0 discriminator 1
 428 0014 40F6A253 		movw	r3, #3490
 429 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 430              	.L27:
 160:.\zaxis.c     ****     if (position < Z_pos) {
 431              		.loc 1 160 0 is_stmt 1
 432 001a 314B     		ldr	r3, .L31
 433 001c 1B88     		ldrh	r3, [r3]
 434 001e FA88     		ldrh	r2, [r7, #6]
 435 0020 9A42     		cmp	r2, r3
 436 0022 17D2     		bcs	.L28
 161:.\zaxis.c     ****         travel = Z_pos - position;
 437              		.loc 1 161 0
 438 0024 2E4B     		ldr	r3, .L31
 439 0026 1A88     		ldrh	r2, [r3]
 440 0028 FB88     		ldrh	r3, [r7, #6]	@ movhi
 441 002a D31A     		subs	r3, r2, r3
 442 002c 7B81     		strh	r3, [r7, #10]	@ movhi
 162:.\zaxis.c     ****         steps_to_do = travel*((motor_steps_turn*f_ustepping)/screw_lead);
 443              		.loc 1 162 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 12


 444 002e 7B89     		ldrh	r3, [r7, #10]
 445 0030 2C4A     		ldr	r2, .L31+4
 446 0032 1288     		ldrh	r2, [r2]
 447 0034 1146     		mov	r1, r2
 448 0036 2C4A     		ldr	r2, .L31+8
 449 0038 1288     		ldrh	r2, [r2]
 450 003a 02FB01F2 		mul	r2, r2, r1
 451 003e 2B49     		ldr	r1, .L31+12
 452 0040 0988     		ldrh	r1, [r1]
 453 0042 92FBF1F2 		sdiv	r2, r2, r1
 454 0046 02FB03F3 		mul	r3, r2, r3
 455 004a FB60     		str	r3, [r7, #12]
 163:.\zaxis.c     ****         motor_direction = motor_up;
 456              		.loc 1 163 0
 457 004c 0122     		movs	r2, #1
 458 004e 284B     		ldr	r3, .L31+16
 459 0050 1A70     		strb	r2, [r3]
 460 0052 34E0     		b	.L29
 461              	.L28:
 164:.\zaxis.c     ****     }
 165:.\zaxis.c     ****     
 166:.\zaxis.c     ****     else if (position > Z_pos) {
 462              		.loc 1 166 0
 463 0054 224B     		ldr	r3, .L31
 464 0056 1B88     		ldrh	r3, [r3]
 465 0058 FA88     		ldrh	r2, [r7, #6]
 466 005a 9A42     		cmp	r2, r3
 467 005c 17D9     		bls	.L30
 167:.\zaxis.c     ****         travel = position - Z_pos;
 468              		.loc 1 167 0
 469 005e 204B     		ldr	r3, .L31
 470 0060 1B88     		ldrh	r3, [r3]
 471 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 472 0064 D31A     		subs	r3, r2, r3
 473 0066 7B81     		strh	r3, [r7, #10]	@ movhi
 168:.\zaxis.c     ****         steps_to_do = travel*((motor_steps_turn*f_ustepping)/screw_lead);
 474              		.loc 1 168 0
 475 0068 7B89     		ldrh	r3, [r7, #10]
 476 006a 1E4A     		ldr	r2, .L31+4
 477 006c 1288     		ldrh	r2, [r2]
 478 006e 1146     		mov	r1, r2
 479 0070 1D4A     		ldr	r2, .L31+8
 480 0072 1288     		ldrh	r2, [r2]
 481 0074 02FB01F2 		mul	r2, r2, r1
 482 0078 1C49     		ldr	r1, .L31+12
 483 007a 0988     		ldrh	r1, [r1]
 484 007c 92FBF1F2 		sdiv	r2, r2, r1
 485 0080 02FB03F3 		mul	r3, r2, r3
 486 0084 FB60     		str	r3, [r7, #12]
 169:.\zaxis.c     ****         motor_direction = motor_down;
 487              		.loc 1 169 0
 488 0086 0022     		movs	r2, #0
 489 0088 194B     		ldr	r3, .L31+16
 490 008a 1A70     		strb	r2, [r3]
 491 008c 17E0     		b	.L29
 492              	.L30:
 170:.\zaxis.c     ****     }
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 13


 171:.\zaxis.c     ****     
 172:.\zaxis.c     ****     else {
 173:.\zaxis.c     ****         travel = 0;
 493              		.loc 1 173 0
 494 008e 0023     		movs	r3, #0
 495 0090 7B81     		strh	r3, [r7, #10]	@ movhi
 174:.\zaxis.c     ****         steps_to_do = 0;
 496              		.loc 1 174 0
 497 0092 0023     		movs	r3, #0
 498 0094 FB60     		str	r3, [r7, #12]
 175:.\zaxis.c     ****         sendDataToCAN(CAN_INSTRUCTION_SET_Z_AXIS_POSITION, CAN_HARDWARE_FILTER_ID, 0x00, 0x00, 0x00
 499              		.loc 1 175 0
 500 0096 124B     		ldr	r3, .L31
 501 0098 1B88     		ldrh	r3, [r3]
 502 009a 1B0A     		lsrs	r3, r3, #8
 503 009c 9BB2     		uxth	r3, r3
 504 009e DAB2     		uxtb	r2, r3
 505 00a0 0F4B     		ldr	r3, .L31
 506 00a2 1B88     		ldrh	r3, [r3]
 507 00a4 DBB2     		uxtb	r3, r3
 508 00a6 0021     		movs	r1, #0
 509 00a8 0091     		str	r1, [sp]
 510 00aa 0021     		movs	r1, #0
 511 00ac 0191     		str	r1, [sp, #4]
 512 00ae 0292     		str	r2, [sp, #8]
 513 00b0 0393     		str	r3, [sp, #12]
 514 00b2 0120     		movs	r0, #1
 515 00b4 3021     		movs	r1, #48
 516 00b6 0022     		movs	r2, #0
 517 00b8 0023     		movs	r3, #0
 518 00ba FFF7FEFF 		bl	sendDataToCAN
 519              	.L29:
 176:.\zaxis.c     ****     }
 177:.\zaxis.c     ****     Z_pos = position;
 520              		.loc 1 177 0
 521 00be 084A     		ldr	r2, .L31
 522 00c0 FB88     		ldrh	r3, [r7, #6]	@ movhi
 523 00c2 1380     		strh	r3, [r2]	@ movhi
 178:.\zaxis.c     ****     // Setting up motor direction
 179:.\zaxis.c     ****     Z_Axis_Direction_Write(motor_direction);
 524              		.loc 1 179 0
 525 00c4 0A4B     		ldr	r3, .L31+16
 526 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 00c8 1846     		mov	r0, r3
 528 00ca FFF7FEFF 		bl	Z_Axis_Direction_Write
 180:.\zaxis.c     ****     Z_Step_Dist_WriteCompare(steps_to_do);
 529              		.loc 1 180 0
 530 00ce F868     		ldr	r0, [r7, #12]
 531 00d0 FFF7FEFF 		bl	Z_Step_Dist_WriteCompare
 181:.\zaxis.c     ****     Z_GO_Write(1);
 532              		.loc 1 181 0
 533 00d4 0120     		movs	r0, #1
 534 00d6 FFF7FEFF 		bl	Z_GO_Write
 182:.\zaxis.c     **** }
 535              		.loc 1 182 0
 536 00da 1037     		adds	r7, r7, #16
 537              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 14


 538 00dc BD46     		mov	sp, r7
 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 00de 80BD     		pop	{r7, pc}
 542              	.L32:
 543              		.align	2
 544              	.L31:
 545 00e0 00000000 		.word	Z_pos
 546 00e4 00000000 		.word	motor_steps_turn
 547 00e8 00000000 		.word	f_ustepping
 548 00ec 00000000 		.word	screw_lead
 549 00f0 00000000 		.word	motor_direction
 550              		.cfi_endproc
 551              	.LFE59:
 552              		.size	Z_Axis_GoTo, .-Z_Axis_GoTo
 553              		.section	.text.Z_Axis_Bumper_ISR,"ax",%progbits
 554              		.align	2
 555              		.global	Z_Axis_Bumper_ISR
 556              		.thumb
 557              		.thumb_func
 558              		.type	Z_Axis_Bumper_ISR, %function
 559              	Z_Axis_Bumper_ISR:
 560              	.LFB60:
 183:.\zaxis.c     **** 
 184:.\zaxis.c     **** CY_ISR(Z_Axis_Bumper_ISR){
 561              		.loc 1 184 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565 0000 80B5     		push	{r7, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 185:.\zaxis.c     ****     Z_Axis_Bumper_ISR_ClearPending();
 571              		.loc 1 185 0
 572 0004 FFF7FEFF 		bl	Z_Axis_Bumper_ISR_ClearPending
 186:.\zaxis.c     ****     Z_Axis_Bumper_Port_ClearInterrupt();
 573              		.loc 1 186 0
 574 0008 FFF7FEFF 		bl	Z_Axis_Bumper_Port_ClearInterrupt
 187:.\zaxis.c     ****     Z_Axis_Bumper_Stops();
 575              		.loc 1 187 0
 576 000c FFF7FEFF 		bl	Z_Axis_Bumper_Stops
 188:.\zaxis.c     **** }
 577              		.loc 1 188 0
 578 0010 80BD     		pop	{r7, pc}
 579              		.cfi_endproc
 580              	.LFE60:
 581              		.size	Z_Axis_Bumper_ISR, .-Z_Axis_Bumper_ISR
 582 0012 00BF     		.section	.text.Z_Axis_Move_ISR,"ax",%progbits
 583              		.align	2
 584              		.global	Z_Axis_Move_ISR
 585              		.thumb
 586              		.thumb_func
 587              		.type	Z_Axis_Move_ISR, %function
 588              	Z_Axis_Move_ISR:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 15


 589              	.LFB61:
 189:.\zaxis.c     **** 
 190:.\zaxis.c     **** CY_ISR(Z_Axis_Move_ISR){
 590              		.loc 1 190 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594 0000 80B5     		push	{r7, lr}
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 7, -8
 597              		.cfi_offset 14, -4
 598 0002 84B0     		sub	sp, sp, #16
 599              		.cfi_def_cfa_offset 24
 600 0004 04AF     		add	r7, sp, #16
 601              		.cfi_def_cfa 7, 8
 191:.\zaxis.c     ****     switch (Z_axis_state){
 602              		.loc 1 191 0
 603 0006 144B     		ldr	r3, .L41
 604 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605 000a 012B     		cmp	r3, #1
 606 000c 19D0     		beq	.L36
 607 000e 022B     		cmp	r3, #2
 608 0010 1DD0     		beq	.L40
 609 0012 002B     		cmp	r3, #0
 610 0014 00D0     		beq	.L38
 192:.\zaxis.c     ****         case WAITING_FOR_BUMPER1:
 193:.\zaxis.c     ****         {
 194:.\zaxis.c     ****             // Send back on CAN that the action is done
 195:.\zaxis.c     ****             sendDataToCAN(CAN_INSTRUCTION_SET_Z_AXIS_POSITION, CAN_HARDWARE_FILTER_ID, 0x00, 0x00, 
 196:.\zaxis.c     ****             break;
 197:.\zaxis.c     ****         }
 198:.\zaxis.c     ****         
 199:.\zaxis.c     ****         case GOING_AWAY:
 200:.\zaxis.c     ****         {
 201:.\zaxis.c     ****             // Calls back for homing
 202:.\zaxis.c     ****             Z_axis_state = WAITING_FOR_BUMPER2;
 203:.\zaxis.c     ****             Z_Axis_Home();
 204:.\zaxis.c     ****             break;
 205:.\zaxis.c     ****         }
 206:.\zaxis.c     ****         
 207:.\zaxis.c     ****         case WAITING_FOR_BUMPER2:
 208:.\zaxis.c     ****         {
 209:.\zaxis.c     ****             break;
 210:.\zaxis.c     ****         }
 211:.\zaxis.c     ****         default:
 212:.\zaxis.c     ****         {
 213:.\zaxis.c     ****             break;
 611              		.loc 1 213 0
 612 0016 1BE0     		b	.L39
 613              	.L38:
 195:.\zaxis.c     ****             break;
 614              		.loc 1 195 0
 615 0018 104B     		ldr	r3, .L41+4
 616 001a 1B88     		ldrh	r3, [r3]
 617 001c 1B0A     		lsrs	r3, r3, #8
 618 001e 9BB2     		uxth	r3, r3
 619 0020 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 16


 620 0022 0E4B     		ldr	r3, .L41+4
 621 0024 1B88     		ldrh	r3, [r3]
 622 0026 DBB2     		uxtb	r3, r3
 623 0028 0021     		movs	r1, #0
 624 002a 0091     		str	r1, [sp]
 625 002c 0021     		movs	r1, #0
 626 002e 0191     		str	r1, [sp, #4]
 627 0030 0292     		str	r2, [sp, #8]
 628 0032 0393     		str	r3, [sp, #12]
 629 0034 0120     		movs	r0, #1
 630 0036 3021     		movs	r1, #48
 631 0038 0022     		movs	r2, #0
 632 003a 0023     		movs	r3, #0
 633 003c FFF7FEFF 		bl	sendDataToCAN
 196:.\zaxis.c     ****         }
 634              		.loc 1 196 0
 635 0040 06E0     		b	.L39
 636              	.L36:
 202:.\zaxis.c     ****             Z_Axis_Home();
 637              		.loc 1 202 0
 638 0042 054B     		ldr	r3, .L41
 639 0044 0222     		movs	r2, #2
 640 0046 1A70     		strb	r2, [r3]
 203:.\zaxis.c     ****             break;
 641              		.loc 1 203 0
 642 0048 FFF7FEFF 		bl	Z_Axis_Home
 204:.\zaxis.c     ****         }
 643              		.loc 1 204 0
 644 004c 00E0     		b	.L39
 645              	.L40:
 209:.\zaxis.c     ****         }
 646              		.loc 1 209 0
 647 004e 00BF     		nop
 648              	.L39:
 214:.\zaxis.c     ****         }
 215:.\zaxis.c     ****     }
 216:.\zaxis.c     ****     Z_Axis_Move_ISR_ClearPending();
 649              		.loc 1 216 0
 650 0050 FFF7FEFF 		bl	Z_Axis_Move_ISR_ClearPending
 217:.\zaxis.c     **** }
 651              		.loc 1 217 0
 652 0054 BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0056 80BD     		pop	{r7, pc}
 656              	.L42:
 657              		.align	2
 658              	.L41:
 659 0058 00000000 		.word	Z_axis_state
 660 005c 00000000 		.word	Z_pos
 661              		.cfi_endproc
 662              	.LFE61:
 663              		.size	Z_Axis_Move_ISR, .-Z_Axis_Move_ISR
 664              		.text
 665              	.Letext0:
 666              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 667              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 17


 668              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 669              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 670              		.section	.debug_info,"",%progbits
 671              	.Ldebug_info0:
 672 0000 15020000 		.4byte	0x215
 673 0004 0400     		.2byte	0x4
 674 0006 00000000 		.4byte	.Ldebug_abbrev0
 675 000a 04       		.byte	0x4
 676 000b 01       		.uleb128 0x1
 677 000c 73000000 		.4byte	.LASF36
 678 0010 01       		.byte	0x1
 679 0011 4E000000 		.4byte	.LASF37
 680 0015 00000000 		.4byte	.LASF38
 681 0019 00000000 		.4byte	.Ldebug_ranges0+0
 682 001d 00000000 		.4byte	0
 683 0021 00000000 		.4byte	.Ldebug_line0
 684 0025 02       		.uleb128 0x2
 685 0026 01       		.byte	0x1
 686 0027 06       		.byte	0x6
 687 0028 8F020000 		.4byte	.LASF0
 688 002c 02       		.uleb128 0x2
 689 002d 01       		.byte	0x1
 690 002e 08       		.byte	0x8
 691 002f 41010000 		.4byte	.LASF1
 692 0033 02       		.uleb128 0x2
 693 0034 02       		.byte	0x2
 694 0035 05       		.byte	0x5
 695 0036 6B020000 		.4byte	.LASF2
 696 003a 02       		.uleb128 0x2
 697 003b 02       		.byte	0x2
 698 003c 07       		.byte	0x7
 699 003d 9B020000 		.4byte	.LASF3
 700 0041 03       		.uleb128 0x3
 701 0042 58000000 		.4byte	.LASF9
 702 0046 02       		.byte	0x2
 703 0047 3F       		.byte	0x3f
 704 0048 4C000000 		.4byte	0x4c
 705 004c 02       		.uleb128 0x2
 706 004d 04       		.byte	0x4
 707 004e 05       		.byte	0x5
 708 004f 86020000 		.4byte	.LASF4
 709 0053 02       		.uleb128 0x2
 710 0054 04       		.byte	0x4
 711 0055 07       		.byte	0x7
 712 0056 6F010000 		.4byte	.LASF5
 713 005a 02       		.uleb128 0x2
 714 005b 08       		.byte	0x8
 715 005c 05       		.byte	0x5
 716 005d 41020000 		.4byte	.LASF6
 717 0061 02       		.uleb128 0x2
 718 0062 08       		.byte	0x8
 719 0063 07       		.byte	0x7
 720 0064 07020000 		.4byte	.LASF7
 721 0068 04       		.uleb128 0x4
 722 0069 04       		.byte	0x4
 723 006a 05       		.byte	0x5
 724 006b 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 18


 725 006f 02       		.uleb128 0x2
 726 0070 04       		.byte	0x4
 727 0071 07       		.byte	0x7
 728 0072 FA010000 		.4byte	.LASF8
 729 0076 03       		.uleb128 0x3
 730 0077 30020000 		.4byte	.LASF10
 731 007b 03       		.byte	0x3
 732 007c 2C       		.byte	0x2c
 733 007d 41000000 		.4byte	0x41
 734 0081 03       		.uleb128 0x3
 735 0082 75020000 		.4byte	.LASF11
 736 0086 04       		.byte	0x4
 737 0087 A1       		.byte	0xa1
 738 0088 2C000000 		.4byte	0x2c
 739 008c 03       		.uleb128 0x3
 740 008d D6010000 		.4byte	.LASF12
 741 0091 04       		.byte	0x4
 742 0092 A2       		.byte	0xa2
 743 0093 3A000000 		.4byte	0x3a
 744 0097 03       		.uleb128 0x3
 745 0098 F3010000 		.4byte	.LASF13
 746 009c 04       		.byte	0x4
 747 009d A3       		.byte	0xa3
 748 009e 53000000 		.4byte	0x53
 749 00a2 02       		.uleb128 0x2
 750 00a3 04       		.byte	0x4
 751 00a4 04       		.byte	0x4
 752 00a5 25010000 		.4byte	.LASF14
 753 00a9 02       		.uleb128 0x2
 754 00aa 08       		.byte	0x8
 755 00ab 04       		.byte	0x4
 756 00ac 9A010000 		.4byte	.LASF15
 757 00b0 02       		.uleb128 0x2
 758 00b1 01       		.byte	0x1
 759 00b2 08       		.byte	0x8
 760 00b3 5B020000 		.4byte	.LASF16
 761 00b7 02       		.uleb128 0x2
 762 00b8 04       		.byte	0x4
 763 00b9 07       		.byte	0x7
 764 00ba 38020000 		.4byte	.LASF17
 765 00be 05       		.uleb128 0x5
 766 00bf CA010000 		.4byte	.LASF18
 767 00c3 01       		.byte	0x1
 768 00c4 1C       		.byte	0x1c
 769 00c5 00000000 		.4byte	.LFB56
 770 00c9 D8000000 		.4byte	.LFE56-.LFB56
 771 00cd 01       		.uleb128 0x1
 772 00ce 9C       		.byte	0x9c
 773 00cf 05       		.uleb128 0x5
 774 00d0 BE010000 		.4byte	.LASF19
 775 00d4 01       		.byte	0x1
 776 00d5 60       		.byte	0x60
 777 00d6 00000000 		.4byte	.LFB57
 778 00da 84000000 		.4byte	.LFE57-.LFB57
 779 00de 01       		.uleb128 0x1
 780 00df 9C       		.byte	0x9c
 781 00e0 05       		.uleb128 0x5
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 19


 782 00e1 0A010000 		.4byte	.LASF20
 783 00e5 01       		.byte	0x1
 784 00e6 71       		.byte	0x71
 785 00e7 00000000 		.4byte	.LFB58
 786 00eb A8000000 		.4byte	.LFE58-.LFB58
 787 00ef 01       		.uleb128 0x1
 788 00f0 9C       		.byte	0x9c
 789 00f1 06       		.uleb128 0x6
 790 00f2 81010000 		.4byte	.LASF39
 791 00f6 01       		.byte	0x1
 792 00f7 9C       		.byte	0x9c
 793 00f8 00000000 		.4byte	.LFB59
 794 00fc F4000000 		.4byte	.LFE59-.LFB59
 795 0100 01       		.uleb128 0x1
 796 0101 9C       		.byte	0x9c
 797 0102 31010000 		.4byte	0x131
 798 0106 07       		.uleb128 0x7
 799 0107 EA010000 		.4byte	.LASF40
 800 010b 01       		.byte	0x1
 801 010c 9C       		.byte	0x9c
 802 010d 8C000000 		.4byte	0x8c
 803 0111 02       		.uleb128 0x2
 804 0112 91       		.byte	0x91
 805 0113 6E       		.sleb128 -18
 806 0114 08       		.uleb128 0x8
 807 0115 1E010000 		.4byte	.LASF21
 808 0119 01       		.byte	0x1
 809 011a 9D       		.byte	0x9d
 810 011b 8C000000 		.4byte	0x8c
 811 011f 02       		.uleb128 0x2
 812 0120 91       		.byte	0x91
 813 0121 72       		.sleb128 -14
 814 0122 08       		.uleb128 0x8
 815 0123 4F010000 		.4byte	.LASF22
 816 0127 01       		.byte	0x1
 817 0128 9E       		.byte	0x9e
 818 0129 97000000 		.4byte	0x97
 819 012d 02       		.uleb128 0x2
 820 012e 91       		.byte	0x91
 821 012f 74       		.sleb128 -12
 822 0130 00       		.byte	0
 823 0131 09       		.uleb128 0x9
 824 0132 1E020000 		.4byte	.LASF23
 825 0136 01       		.byte	0x1
 826 0137 B8       		.byte	0xb8
 827 0138 00000000 		.4byte	.LFB60
 828 013c 12000000 		.4byte	.LFE60-.LFB60
 829 0140 01       		.uleb128 0x1
 830 0141 9C       		.byte	0x9c
 831 0142 09       		.uleb128 0x9
 832 0143 2B010000 		.4byte	.LASF24
 833 0147 01       		.byte	0x1
 834 0148 BE       		.byte	0xbe
 835 0149 00000000 		.4byte	.LFB61
 836 014d 60000000 		.4byte	.LFE61-.LFB61
 837 0151 01       		.uleb128 0x1
 838 0152 9C       		.byte	0x9c
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 20


 839 0153 0A       		.uleb128 0xa
 840 0154 8D010000 		.4byte	.LASF25
 841 0158 05       		.byte	0x5
 842 0159 1606     		.2byte	0x616
 843 015b 5F010000 		.4byte	0x15f
 844 015f 0B       		.uleb128 0xb
 845 0160 76000000 		.4byte	0x76
 846 0164 0C       		.uleb128 0xc
 847 0165 A1010000 		.4byte	.LASF26
 848 0169 01       		.byte	0x1
 849 016a 11       		.byte	0x11
 850 016b 81000000 		.4byte	0x81
 851 016f 05       		.uleb128 0x5
 852 0170 03       		.byte	0x3
 853 0171 00000000 		.4byte	Z_axis_state
 854 0175 0C       		.uleb128 0xc
 855 0176 3B010000 		.4byte	.LASF27
 856 017a 01       		.byte	0x1
 857 017b 12       		.byte	0x12
 858 017c 8C000000 		.4byte	0x8c
 859 0180 05       		.uleb128 0x5
 860 0181 03       		.byte	0x3
 861 0182 00000000 		.4byte	Z_pos
 862 0186 0C       		.uleb128 0xc
 863 0187 7B020000 		.4byte	.LASF28
 864 018b 01       		.byte	0x1
 865 018c 13       		.byte	0x13
 866 018d 8C000000 		.4byte	0x8c
 867 0191 05       		.uleb128 0x5
 868 0192 03       		.byte	0x3
 869 0193 00000000 		.4byte	screw_lead
 870 0197 0C       		.uleb128 0xc
 871 0198 62000000 		.4byte	.LASF29
 872 019c 01       		.byte	0x1
 873 019d 14       		.byte	0x14
 874 019e 8C000000 		.4byte	0x8c
 875 01a2 05       		.uleb128 0x5
 876 01a3 03       		.byte	0x3
 877 01a4 00000000 		.4byte	motor_steps_turn
 878 01a8 0C       		.uleb128 0xc
 879 01a9 4F020000 		.4byte	.LASF30
 880 01ad 01       		.byte	0x1
 881 01ae 15       		.byte	0x15
 882 01af 8C000000 		.4byte	0x8c
 883 01b3 05       		.uleb128 0x5
 884 01b4 03       		.byte	0x3
 885 01b5 00000000 		.4byte	f_ustepping
 886 01b9 0C       		.uleb128 0xc
 887 01ba AE010000 		.4byte	.LASF31
 888 01be 01       		.byte	0x1
 889 01bf 16       		.byte	0x16
 890 01c0 81000000 		.4byte	0x81
 891 01c4 05       		.uleb128 0x5
 892 01c5 03       		.byte	0x3
 893 01c6 00000000 		.4byte	motor_direction
 894 01ca 0C       		.uleb128 0xc
 895 01cb 5B010000 		.4byte	.LASF32
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 21


 896 01cf 01       		.byte	0x1
 897 01d0 17       		.byte	0x17
 898 01d1 81000000 		.4byte	0x81
 899 01d5 05       		.uleb128 0x5
 900 01d6 03       		.byte	0x3
 901 01d7 00000000 		.4byte	Z_axis_bumper_count
 902 01db 0C       		.uleb128 0xc
 903 01dc 01010000 		.4byte	.LASF33
 904 01e0 01       		.byte	0x1
 905 01e1 18       		.byte	0x18
 906 01e2 EC010000 		.4byte	0x1ec
 907 01e6 05       		.uleb128 0x5
 908 01e7 03       		.byte	0x3
 909 01e8 00000000 		.4byte	motor_up
 910 01ec 0D       		.uleb128 0xd
 911 01ed 81000000 		.4byte	0x81
 912 01f1 0C       		.uleb128 0xc
 913 01f2 60020000 		.4byte	.LASF34
 914 01f6 01       		.byte	0x1
 915 01f7 19       		.byte	0x19
 916 01f8 EC010000 		.4byte	0x1ec
 917 01fc 05       		.uleb128 0x5
 918 01fd 03       		.byte	0x3
 919 01fe 00000000 		.4byte	motor_down
 920 0202 0C       		.uleb128 0xc
 921 0203 DD010000 		.4byte	.LASF35
 922 0207 01       		.byte	0x1
 923 0208 1A       		.byte	0x1a
 924 0209 13020000 		.4byte	0x213
 925 020d 05       		.uleb128 0x5
 926 020e 03       		.byte	0x3
 927 020f 00000000 		.4byte	max_distance
 928 0213 0D       		.uleb128 0xd
 929 0214 8C000000 		.4byte	0x8c
 930 0218 00       		.byte	0
 931              		.section	.debug_abbrev,"",%progbits
 932              	.Ldebug_abbrev0:
 933 0000 01       		.uleb128 0x1
 934 0001 11       		.uleb128 0x11
 935 0002 01       		.byte	0x1
 936 0003 25       		.uleb128 0x25
 937 0004 0E       		.uleb128 0xe
 938 0005 13       		.uleb128 0x13
 939 0006 0B       		.uleb128 0xb
 940 0007 03       		.uleb128 0x3
 941 0008 0E       		.uleb128 0xe
 942 0009 1B       		.uleb128 0x1b
 943 000a 0E       		.uleb128 0xe
 944 000b 55       		.uleb128 0x55
 945 000c 17       		.uleb128 0x17
 946 000d 11       		.uleb128 0x11
 947 000e 01       		.uleb128 0x1
 948 000f 10       		.uleb128 0x10
 949 0010 17       		.uleb128 0x17
 950 0011 00       		.byte	0
 951 0012 00       		.byte	0
 952 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 22


 953 0014 24       		.uleb128 0x24
 954 0015 00       		.byte	0
 955 0016 0B       		.uleb128 0xb
 956 0017 0B       		.uleb128 0xb
 957 0018 3E       		.uleb128 0x3e
 958 0019 0B       		.uleb128 0xb
 959 001a 03       		.uleb128 0x3
 960 001b 0E       		.uleb128 0xe
 961 001c 00       		.byte	0
 962 001d 00       		.byte	0
 963 001e 03       		.uleb128 0x3
 964 001f 16       		.uleb128 0x16
 965 0020 00       		.byte	0
 966 0021 03       		.uleb128 0x3
 967 0022 0E       		.uleb128 0xe
 968 0023 3A       		.uleb128 0x3a
 969 0024 0B       		.uleb128 0xb
 970 0025 3B       		.uleb128 0x3b
 971 0026 0B       		.uleb128 0xb
 972 0027 49       		.uleb128 0x49
 973 0028 13       		.uleb128 0x13
 974 0029 00       		.byte	0
 975 002a 00       		.byte	0
 976 002b 04       		.uleb128 0x4
 977 002c 24       		.uleb128 0x24
 978 002d 00       		.byte	0
 979 002e 0B       		.uleb128 0xb
 980 002f 0B       		.uleb128 0xb
 981 0030 3E       		.uleb128 0x3e
 982 0031 0B       		.uleb128 0xb
 983 0032 03       		.uleb128 0x3
 984 0033 08       		.uleb128 0x8
 985 0034 00       		.byte	0
 986 0035 00       		.byte	0
 987 0036 05       		.uleb128 0x5
 988 0037 2E       		.uleb128 0x2e
 989 0038 00       		.byte	0
 990 0039 3F       		.uleb128 0x3f
 991 003a 19       		.uleb128 0x19
 992 003b 03       		.uleb128 0x3
 993 003c 0E       		.uleb128 0xe
 994 003d 3A       		.uleb128 0x3a
 995 003e 0B       		.uleb128 0xb
 996 003f 3B       		.uleb128 0x3b
 997 0040 0B       		.uleb128 0xb
 998 0041 11       		.uleb128 0x11
 999 0042 01       		.uleb128 0x1
 1000 0043 12       		.uleb128 0x12
 1001 0044 06       		.uleb128 0x6
 1002 0045 40       		.uleb128 0x40
 1003 0046 18       		.uleb128 0x18
 1004 0047 9642     		.uleb128 0x2116
 1005 0049 19       		.uleb128 0x19
 1006 004a 00       		.byte	0
 1007 004b 00       		.byte	0
 1008 004c 06       		.uleb128 0x6
 1009 004d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 23


 1010 004e 01       		.byte	0x1
 1011 004f 3F       		.uleb128 0x3f
 1012 0050 19       		.uleb128 0x19
 1013 0051 03       		.uleb128 0x3
 1014 0052 0E       		.uleb128 0xe
 1015 0053 3A       		.uleb128 0x3a
 1016 0054 0B       		.uleb128 0xb
 1017 0055 3B       		.uleb128 0x3b
 1018 0056 0B       		.uleb128 0xb
 1019 0057 27       		.uleb128 0x27
 1020 0058 19       		.uleb128 0x19
 1021 0059 11       		.uleb128 0x11
 1022 005a 01       		.uleb128 0x1
 1023 005b 12       		.uleb128 0x12
 1024 005c 06       		.uleb128 0x6
 1025 005d 40       		.uleb128 0x40
 1026 005e 18       		.uleb128 0x18
 1027 005f 9642     		.uleb128 0x2116
 1028 0061 19       		.uleb128 0x19
 1029 0062 01       		.uleb128 0x1
 1030 0063 13       		.uleb128 0x13
 1031 0064 00       		.byte	0
 1032 0065 00       		.byte	0
 1033 0066 07       		.uleb128 0x7
 1034 0067 05       		.uleb128 0x5
 1035 0068 00       		.byte	0
 1036 0069 03       		.uleb128 0x3
 1037 006a 0E       		.uleb128 0xe
 1038 006b 3A       		.uleb128 0x3a
 1039 006c 0B       		.uleb128 0xb
 1040 006d 3B       		.uleb128 0x3b
 1041 006e 0B       		.uleb128 0xb
 1042 006f 49       		.uleb128 0x49
 1043 0070 13       		.uleb128 0x13
 1044 0071 02       		.uleb128 0x2
 1045 0072 18       		.uleb128 0x18
 1046 0073 00       		.byte	0
 1047 0074 00       		.byte	0
 1048 0075 08       		.uleb128 0x8
 1049 0076 34       		.uleb128 0x34
 1050 0077 00       		.byte	0
 1051 0078 03       		.uleb128 0x3
 1052 0079 0E       		.uleb128 0xe
 1053 007a 3A       		.uleb128 0x3a
 1054 007b 0B       		.uleb128 0xb
 1055 007c 3B       		.uleb128 0x3b
 1056 007d 0B       		.uleb128 0xb
 1057 007e 49       		.uleb128 0x49
 1058 007f 13       		.uleb128 0x13
 1059 0080 02       		.uleb128 0x2
 1060 0081 18       		.uleb128 0x18
 1061 0082 00       		.byte	0
 1062 0083 00       		.byte	0
 1063 0084 09       		.uleb128 0x9
 1064 0085 2E       		.uleb128 0x2e
 1065 0086 00       		.byte	0
 1066 0087 3F       		.uleb128 0x3f
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 24


 1067 0088 19       		.uleb128 0x19
 1068 0089 03       		.uleb128 0x3
 1069 008a 0E       		.uleb128 0xe
 1070 008b 3A       		.uleb128 0x3a
 1071 008c 0B       		.uleb128 0xb
 1072 008d 3B       		.uleb128 0x3b
 1073 008e 0B       		.uleb128 0xb
 1074 008f 27       		.uleb128 0x27
 1075 0090 19       		.uleb128 0x19
 1076 0091 11       		.uleb128 0x11
 1077 0092 01       		.uleb128 0x1
 1078 0093 12       		.uleb128 0x12
 1079 0094 06       		.uleb128 0x6
 1080 0095 40       		.uleb128 0x40
 1081 0096 18       		.uleb128 0x18
 1082 0097 9642     		.uleb128 0x2116
 1083 0099 19       		.uleb128 0x19
 1084 009a 00       		.byte	0
 1085 009b 00       		.byte	0
 1086 009c 0A       		.uleb128 0xa
 1087 009d 34       		.uleb128 0x34
 1088 009e 00       		.byte	0
 1089 009f 03       		.uleb128 0x3
 1090 00a0 0E       		.uleb128 0xe
 1091 00a1 3A       		.uleb128 0x3a
 1092 00a2 0B       		.uleb128 0xb
 1093 00a3 3B       		.uleb128 0x3b
 1094 00a4 05       		.uleb128 0x5
 1095 00a5 49       		.uleb128 0x49
 1096 00a6 13       		.uleb128 0x13
 1097 00a7 3F       		.uleb128 0x3f
 1098 00a8 19       		.uleb128 0x19
 1099 00a9 3C       		.uleb128 0x3c
 1100 00aa 19       		.uleb128 0x19
 1101 00ab 00       		.byte	0
 1102 00ac 00       		.byte	0
 1103 00ad 0B       		.uleb128 0xb
 1104 00ae 35       		.uleb128 0x35
 1105 00af 00       		.byte	0
 1106 00b0 49       		.uleb128 0x49
 1107 00b1 13       		.uleb128 0x13
 1108 00b2 00       		.byte	0
 1109 00b3 00       		.byte	0
 1110 00b4 0C       		.uleb128 0xc
 1111 00b5 34       		.uleb128 0x34
 1112 00b6 00       		.byte	0
 1113 00b7 03       		.uleb128 0x3
 1114 00b8 0E       		.uleb128 0xe
 1115 00b9 3A       		.uleb128 0x3a
 1116 00ba 0B       		.uleb128 0xb
 1117 00bb 3B       		.uleb128 0x3b
 1118 00bc 0B       		.uleb128 0xb
 1119 00bd 49       		.uleb128 0x49
 1120 00be 13       		.uleb128 0x13
 1121 00bf 3F       		.uleb128 0x3f
 1122 00c0 19       		.uleb128 0x19
 1123 00c1 02       		.uleb128 0x2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 25


 1124 00c2 18       		.uleb128 0x18
 1125 00c3 00       		.byte	0
 1126 00c4 00       		.byte	0
 1127 00c5 0D       		.uleb128 0xd
 1128 00c6 26       		.uleb128 0x26
 1129 00c7 00       		.byte	0
 1130 00c8 49       		.uleb128 0x49
 1131 00c9 13       		.uleb128 0x13
 1132 00ca 00       		.byte	0
 1133 00cb 00       		.byte	0
 1134 00cc 00       		.byte	0
 1135              		.section	.debug_aranges,"",%progbits
 1136 0000 44000000 		.4byte	0x44
 1137 0004 0200     		.2byte	0x2
 1138 0006 00000000 		.4byte	.Ldebug_info0
 1139 000a 04       		.byte	0x4
 1140 000b 00       		.byte	0
 1141 000c 0000     		.2byte	0
 1142 000e 0000     		.2byte	0
 1143 0010 00000000 		.4byte	.LFB56
 1144 0014 D8000000 		.4byte	.LFE56-.LFB56
 1145 0018 00000000 		.4byte	.LFB57
 1146 001c 84000000 		.4byte	.LFE57-.LFB57
 1147 0020 00000000 		.4byte	.LFB58
 1148 0024 A8000000 		.4byte	.LFE58-.LFB58
 1149 0028 00000000 		.4byte	.LFB59
 1150 002c F4000000 		.4byte	.LFE59-.LFB59
 1151 0030 00000000 		.4byte	.LFB60
 1152 0034 12000000 		.4byte	.LFE60-.LFB60
 1153 0038 00000000 		.4byte	.LFB61
 1154 003c 60000000 		.4byte	.LFE61-.LFB61
 1155 0040 00000000 		.4byte	0
 1156 0044 00000000 		.4byte	0
 1157              		.section	.debug_ranges,"",%progbits
 1158              	.Ldebug_ranges0:
 1159 0000 00000000 		.4byte	.LFB56
 1160 0004 D8000000 		.4byte	.LFE56
 1161 0008 00000000 		.4byte	.LFB57
 1162 000c 84000000 		.4byte	.LFE57
 1163 0010 00000000 		.4byte	.LFB58
 1164 0014 A8000000 		.4byte	.LFE58
 1165 0018 00000000 		.4byte	.LFB59
 1166 001c F4000000 		.4byte	.LFE59
 1167 0020 00000000 		.4byte	.LFB60
 1168 0024 12000000 		.4byte	.LFE60
 1169 0028 00000000 		.4byte	.LFB61
 1170 002c 60000000 		.4byte	.LFE61
 1171 0030 00000000 		.4byte	0
 1172 0034 00000000 		.4byte	0
 1173              		.section	.debug_line,"",%progbits
 1174              	.Ldebug_line0:
 1175 0000 1F020000 		.section	.debug_str,"MS",%progbits,1
 1175      02004A01 
 1175      00000201 
 1175      FB0E0D00 
 1175      01010101 
 1176              	.LASF38:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 26


 1177 0000 433A5C55 		.ascii	"C:\\Users\\plod1602\\Documents\\git\\module-gripper"
 1177      73657273 
 1177      5C706C6F 
 1177      64313630 
 1177      325C446F 
 1178 002e 2D70736F 		.ascii	"-psoc\\module-gripper-psoc.cydsn\000"
 1178      635C6D6F 
 1178      64756C65 
 1178      2D677269 
 1178      70706572 
 1179              	.LASF37:
 1180 004e 2E5C7A61 		.ascii	".\\zaxis.c\000"
 1180      7869732E 
 1180      6300
 1181              	.LASF9:
 1182 0058 5F5F696E 		.ascii	"__int32_t\000"
 1182      7433325F 
 1182      7400
 1183              	.LASF29:
 1184 0062 6D6F746F 		.ascii	"motor_steps_turn\000"
 1184      725F7374 
 1184      6570735F 
 1184      7475726E 
 1184      00
 1185              	.LASF36:
 1186 0073 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1186      4320342E 
 1186      392E3320 
 1186      32303135 
 1186      30333033 
 1187 00a6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1187      20726576 
 1187      6973696F 
 1187      6E203232 
 1187      31323230 
 1188 00d9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1188      66756E63 
 1188      74696F6E 
 1188      2D736563 
 1188      74696F6E 
 1189              	.LASF33:
 1190 0101 6D6F746F 		.ascii	"motor_up\000"
 1190      725F7570 
 1190      00
 1191              	.LASF20:
 1192 010a 5A5F4178 		.ascii	"Z_Axis_Bumper_Stops\000"
 1192      69735F42 
 1192      756D7065 
 1192      725F5374 
 1192      6F707300 
 1193              	.LASF21:
 1194 011e 74726176 		.ascii	"travel\000"
 1194      656C00
 1195              	.LASF14:
 1196 0125 666C6F61 		.ascii	"float\000"
 1196      7400
 1197              	.LASF24:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 27


 1198 012b 5A5F4178 		.ascii	"Z_Axis_Move_ISR\000"
 1198      69735F4D 
 1198      6F76655F 
 1198      49535200 
 1199              	.LASF27:
 1200 013b 5A5F706F 		.ascii	"Z_pos\000"
 1200      7300
 1201              	.LASF1:
 1202 0141 756E7369 		.ascii	"unsigned char\000"
 1202      676E6564 
 1202      20636861 
 1202      7200
 1203              	.LASF22:
 1204 014f 73746570 		.ascii	"steps_to_do\000"
 1204      735F746F 
 1204      5F646F00 
 1205              	.LASF32:
 1206 015b 5A5F6178 		.ascii	"Z_axis_bumper_count\000"
 1206      69735F62 
 1206      756D7065 
 1206      725F636F 
 1206      756E7400 
 1207              	.LASF5:
 1208 016f 6C6F6E67 		.ascii	"long unsigned int\000"
 1208      20756E73 
 1208      69676E65 
 1208      6420696E 
 1208      7400
 1209              	.LASF39:
 1210 0181 5A5F4178 		.ascii	"Z_Axis_GoTo\000"
 1210      69735F47 
 1210      6F546F00 
 1211              	.LASF25:
 1212 018d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1212      52784275 
 1212      66666572 
 1212      00
 1213              	.LASF15:
 1214 019a 646F7562 		.ascii	"double\000"
 1214      6C6500
 1215              	.LASF26:
 1216 01a1 5A5F6178 		.ascii	"Z_axis_state\000"
 1216      69735F73 
 1216      74617465 
 1216      00
 1217              	.LASF31:
 1218 01ae 6D6F746F 		.ascii	"motor_direction\000"
 1218      725F6469 
 1218      72656374 
 1218      696F6E00 
 1219              	.LASF19:
 1220 01be 5A5F4178 		.ascii	"Z_Axis_Home\000"
 1220      69735F48 
 1220      6F6D6500 
 1221              	.LASF18:
 1222 01ca 5A5F4178 		.ascii	"Z_Axis_Init\000"
 1222      69735F49 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 28


 1222      6E697400 
 1223              	.LASF12:
 1224 01d6 75696E74 		.ascii	"uint16\000"
 1224      313600
 1225              	.LASF35:
 1226 01dd 6D61785F 		.ascii	"max_distance\000"
 1226      64697374 
 1226      616E6365 
 1226      00
 1227              	.LASF40:
 1228 01ea 706F7369 		.ascii	"position\000"
 1228      74696F6E 
 1228      00
 1229              	.LASF13:
 1230 01f3 75696E74 		.ascii	"uint32\000"
 1230      333200
 1231              	.LASF8:
 1232 01fa 756E7369 		.ascii	"unsigned int\000"
 1232      676E6564 
 1232      20696E74 
 1232      00
 1233              	.LASF7:
 1234 0207 6C6F6E67 		.ascii	"long long unsigned int\000"
 1234      206C6F6E 
 1234      6720756E 
 1234      7369676E 
 1234      65642069 
 1235              	.LASF23:
 1236 021e 5A5F4178 		.ascii	"Z_Axis_Bumper_ISR\000"
 1236      69735F42 
 1236      756D7065 
 1236      725F4953 
 1236      5200
 1237              	.LASF10:
 1238 0230 696E7433 		.ascii	"int32_t\000"
 1238      325F7400 
 1239              	.LASF17:
 1240 0238 73697A65 		.ascii	"sizetype\000"
 1240      74797065 
 1240      00
 1241              	.LASF6:
 1242 0241 6C6F6E67 		.ascii	"long long int\000"
 1242      206C6F6E 
 1242      6720696E 
 1242      7400
 1243              	.LASF30:
 1244 024f 665F7573 		.ascii	"f_ustepping\000"
 1244      74657070 
 1244      696E6700 
 1245              	.LASF16:
 1246 025b 63686172 		.ascii	"char\000"
 1246      00
 1247              	.LASF34:
 1248 0260 6D6F746F 		.ascii	"motor_down\000"
 1248      725F646F 
 1248      776E00
 1249              	.LASF2:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccJDNIbY.s 			page 29


 1250 026b 73686F72 		.ascii	"short int\000"
 1250      7420696E 
 1250      7400
 1251              	.LASF11:
 1252 0275 75696E74 		.ascii	"uint8\000"
 1252      3800
 1253              	.LASF28:
 1254 027b 73637265 		.ascii	"screw_lead\000"
 1254      775F6C65 
 1254      616400
 1255              	.LASF4:
 1256 0286 6C6F6E67 		.ascii	"long int\000"
 1256      20696E74 
 1256      00
 1257              	.LASF0:
 1258 028f 7369676E 		.ascii	"signed char\000"
 1258      65642063 
 1258      68617200 
 1259              	.LASF3:
 1260 029b 73686F72 		.ascii	"short unsigned int\000"
 1260      7420756E 
 1260      7369676E 
 1260      65642069 
 1260      6E7400
 1261              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
