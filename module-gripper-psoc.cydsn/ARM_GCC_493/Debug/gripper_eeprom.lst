ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"gripper_eeprom.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	motorType
  19              		.bss
  20              		.align	2
  21              		.type	motorType, %object
  22              		.size	motorType, 5
  23              	motorType:
  24 0000 00000000 		.space	5
  24      00
  25              		.global	motorMargin
  26 0005 000000   		.align	2
  27              		.type	motorMargin, %object
  28              		.size	motorMargin, 8
  29              	motorMargin:
  30 0008 00000000 		.space	8
  30      00000000 
  31              		.section	.text.init_eeprom,"ax",%progbits
  32              		.align	2
  33              		.global	init_eeprom
  34              		.thumb
  35              		.thumb_func
  36              		.type	init_eeprom, %function
  37              	init_eeprom:
  38              	.LFB56:
  39              		.file 1 ".\\gripper_eeprom.c"
   1:.\gripper_eeprom.c **** /* ========================================
   2:.\gripper_eeprom.c ****  *
   3:.\gripper_eeprom.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\gripper_eeprom.c ****  * All Rights Reserved
   5:.\gripper_eeprom.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\gripper_eeprom.c ****  *
   7:.\gripper_eeprom.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\gripper_eeprom.c ****  * WHICH IS THE PROPERTY OF your company.
   9:.\gripper_eeprom.c ****  *
  10:.\gripper_eeprom.c ****  * ========================================
  11:.\gripper_eeprom.c **** */
  12:.\gripper_eeprom.c **** 
  13:.\gripper_eeprom.c **** #include "gripper_eeprom.h"
  14:.\gripper_eeprom.c **** 
  15:.\gripper_eeprom.c **** uint8 motorType[] = {0, 0, 0, 0, 0};
  16:.\gripper_eeprom.c **** uint16 motorMargin[] = {0, 0, 0, 0};
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 2


  17:.\gripper_eeprom.c **** 
  18:.\gripper_eeprom.c **** void init_eeprom()
  19:.\gripper_eeprom.c **** {
  40              		.loc 1 19 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  20:.\gripper_eeprom.c ****     EEPROM_Start();
  50              		.loc 1 20 0
  51 0004 FFF7FEFF 		bl	EEPROM_Start
  21:.\gripper_eeprom.c ****     CyDelayUs(5); // the EEPROM needs 5 μS to start
  52              		.loc 1 21 0
  53 0008 0520     		movs	r0, #5
  54 000a FFF7FEFF 		bl	CyDelayUs
  22:.\gripper_eeprom.c ****     
  23:.\gripper_eeprom.c ****     /*
  24:.\gripper_eeprom.c ****     It is necessary to acquire the die temperature by calling the EEPROM_UpdateTemperature() 
  25:.\gripper_eeprom.c ****     function before a series of EEPROM write operations. The EEPROM_UpdateTemperature() 
  26:.\gripper_eeprom.c ****     function queries SPC for the die temperature and stores it in a global variable, 
  27:.\gripper_eeprom.c ****     which is used while performing EEPROM write operations. If the application is used 
  28:.\gripper_eeprom.c ****     in an environment where the die temperature changes 10° C or more, the temperature 
  29:.\gripper_eeprom.c ****     should be refreshed to adjust the write times for the optimal performance.
  30:.\gripper_eeprom.c ****     */
  31:.\gripper_eeprom.c ****     EEPROM_UpdateTemperature();
  55              		.loc 1 31 0
  56 000e FFF7FEFF 		bl	EEPROM_UpdateTemperature
  32:.\gripper_eeprom.c ****     
  33:.\gripper_eeprom.c ****     /*
  34:.\gripper_eeprom.c ****     EEPROM_WriteByte(1,EEPROM_ADDR_GRIPPER_ROTATE_MOTOR_ID);
  35:.\gripper_eeprom.c ****     EEPROM_WriteByte(2,EEPROM_ADDR_GRIPPER_TILT_MOTOR_ID);
  36:.\gripper_eeprom.c ****     EEPROM_WriteByte(3,EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_ID);
  37:.\gripper_eeprom.c ****     EEPROM_WriteByte(4,EEPROM_ADDR_GRIPPER_LEFT_MOTOR_ID);
  38:.\gripper_eeprom.c ****    
  39:.\gripper_eeprom.c ****     EEPROM_WriteByte(17,EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CW_MARGIN_L);
  40:.\gripper_eeprom.c ****     EEPROM_WriteByte(0,EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CW_MARGIN_H);
  41:.\gripper_eeprom.c ****     EEPROM_WriteByte(235,EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CCW_MARGIN_L);
  42:.\gripper_eeprom.c ****     EEPROM_WriteByte(0,EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CCW_MARGIN_H);
  43:.\gripper_eeprom.c ****     
  44:.\gripper_eeprom.c ****     EEPROM_WriteByte((uint8)500,EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CW_MARGIN_L);
  45:.\gripper_eeprom.c ****     EEPROM_WriteByte((uint8)(500>>8),EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CW_MARGIN_H);
  46:.\gripper_eeprom.c ****     EEPROM_WriteByte((uint8)721,EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CCW_MARGIN_L);
  47:.\gripper_eeprom.c ****     EEPROM_WriteByte((uint8)(721>>8),EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CCW_MARGIN_H);
  48:.\gripper_eeprom.c ****     //*/
  49:.\gripper_eeprom.c **** }
  57              		.loc 1 49 0
  58 0012 80BD     		pop	{r7, pc}
  59              		.cfi_endproc
  60              	.LFE56:
  61              		.size	init_eeprom, .-init_eeprom
  62              		.section	.text.readEeprom,"ax",%progbits
  63              		.align	2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 3


  64              		.global	readEeprom
  65              		.thumb
  66              		.thumb_func
  67              		.type	readEeprom, %function
  68              	readEeprom:
  69              	.LFB57:
  50:.\gripper_eeprom.c **** 
  51:.\gripper_eeprom.c **** 
  52:.\gripper_eeprom.c **** void readEeprom() 
  53:.\gripper_eeprom.c **** {
  70              		.loc 1 53 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  54:.\gripper_eeprom.c ****     uint8 L, H;
  55:.\gripper_eeprom.c ****     motorType[MOTOR_TYPE_ROTATE] = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_ROTATE_MOTOR_ID);
  82              		.loc 1 55 0
  83 0006 0120     		movs	r0, #1
  84 0008 FFF7FEFF 		bl	EEPROM_ReadByte
  85 000c 0346     		mov	r3, r0
  86 000e 1A46     		mov	r2, r3
  87 0010 344B     		ldr	r3, .L3
  88 0012 5A70     		strb	r2, [r3, #1]
  56:.\gripper_eeprom.c ****     motorType[MOTOR_TYPE_TILT]   = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_TILT_MOTOR_ID);
  89              		.loc 1 56 0
  90 0014 0220     		movs	r0, #2
  91 0016 FFF7FEFF 		bl	EEPROM_ReadByte
  92 001a 0346     		mov	r3, r0
  93 001c 1A46     		mov	r2, r3
  94 001e 314B     		ldr	r3, .L3
  95 0020 9A70     		strb	r2, [r3, #2]
  57:.\gripper_eeprom.c ****     motorType[MOTOR_TYPE_RIGHT]  = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_ID);
  96              		.loc 1 57 0
  97 0022 0320     		movs	r0, #3
  98 0024 FFF7FEFF 		bl	EEPROM_ReadByte
  99 0028 0346     		mov	r3, r0
 100 002a 1A46     		mov	r2, r3
 101 002c 2D4B     		ldr	r3, .L3
 102 002e DA70     		strb	r2, [r3, #3]
  58:.\gripper_eeprom.c ****     motorType[MOTOR_TYPE_LEFT]   = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_LEFT_MOTOR_ID);
 103              		.loc 1 58 0
 104 0030 0420     		movs	r0, #4
 105 0032 FFF7FEFF 		bl	EEPROM_ReadByte
 106 0036 0346     		mov	r3, r0
 107 0038 1A46     		mov	r2, r3
 108 003a 2A4B     		ldr	r3, .L3
 109 003c 1A71     		strb	r2, [r3, #4]
  59:.\gripper_eeprom.c ****     
  60:.\gripper_eeprom.c ****     L = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CW_MARGIN_L);
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 4


 110              		.loc 1 60 0
 111 003e 0520     		movs	r0, #5
 112 0040 FFF7FEFF 		bl	EEPROM_ReadByte
 113 0044 0346     		mov	r3, r0
 114 0046 FB71     		strb	r3, [r7, #7]
  61:.\gripper_eeprom.c ****     H = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CW_MARGIN_H);
 115              		.loc 1 61 0
 116 0048 0620     		movs	r0, #6
 117 004a FFF7FEFF 		bl	EEPROM_ReadByte
 118 004e 0346     		mov	r3, r0
 119 0050 BB71     		strb	r3, [r7, #6]
  62:.\gripper_eeprom.c ****     //motorRightMargin.CW = (int16)(((int16)H<<8) | L);
  63:.\gripper_eeprom.c ****     motorMargin[MOTOR_RIGHT_MARGIN_CW] = (int16)(((int16)H<<8) | L);
 120              		.loc 1 63 0
 121 0052 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 122 0054 1B02     		lsls	r3, r3, #8
 123 0056 9AB2     		uxth	r2, r3
 124 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 125 005a 9BB2     		uxth	r3, r3
 126 005c 1343     		orrs	r3, r3, r2
 127 005e 9BB2     		uxth	r3, r3
 128 0060 9AB2     		uxth	r2, r3
 129 0062 214B     		ldr	r3, .L3+4
 130 0064 9A80     		strh	r2, [r3, #4]	@ movhi
  64:.\gripper_eeprom.c ****     
  65:.\gripper_eeprom.c ****     L = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CCW_MARGIN_L);
 131              		.loc 1 65 0
 132 0066 0720     		movs	r0, #7
 133 0068 FFF7FEFF 		bl	EEPROM_ReadByte
 134 006c 0346     		mov	r3, r0
 135 006e FB71     		strb	r3, [r7, #7]
  66:.\gripper_eeprom.c ****     H = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_CCW_MARGIN_H);
 136              		.loc 1 66 0
 137 0070 0820     		movs	r0, #8
 138 0072 FFF7FEFF 		bl	EEPROM_ReadByte
 139 0076 0346     		mov	r3, r0
 140 0078 BB71     		strb	r3, [r7, #6]
  67:.\gripper_eeprom.c ****     //motorRightMargin.CCW = (int16)(((int16)H<<8) | L);
  68:.\gripper_eeprom.c ****     motorMargin[MOTOR_RIGHT_MARGIN_CCW] = (int16)(((int16)H<<8) | L);
 141              		.loc 1 68 0
 142 007a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 143 007c 1B02     		lsls	r3, r3, #8
 144 007e 9AB2     		uxth	r2, r3
 145 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 146 0082 9BB2     		uxth	r3, r3
 147 0084 1343     		orrs	r3, r3, r2
 148 0086 9BB2     		uxth	r3, r3
 149 0088 9AB2     		uxth	r2, r3
 150 008a 174B     		ldr	r3, .L3+4
 151 008c DA80     		strh	r2, [r3, #6]	@ movhi
  69:.\gripper_eeprom.c ****     
  70:.\gripper_eeprom.c ****     L = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CW_MARGIN_L);
 152              		.loc 1 70 0
 153 008e 0920     		movs	r0, #9
 154 0090 FFF7FEFF 		bl	EEPROM_ReadByte
 155 0094 0346     		mov	r3, r0
 156 0096 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 5


  71:.\gripper_eeprom.c ****     H = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CW_MARGIN_H);
 157              		.loc 1 71 0
 158 0098 0A20     		movs	r0, #10
 159 009a FFF7FEFF 		bl	EEPROM_ReadByte
 160 009e 0346     		mov	r3, r0
 161 00a0 BB71     		strb	r3, [r7, #6]
  72:.\gripper_eeprom.c ****     //motorLeftMargin.CW = (int16)(((int16)H<<8) | L);
  73:.\gripper_eeprom.c ****     motorMargin[MOTOR_LEFT_MARGIN_CW] = (int16)(((int16)H<<8) | L);
 162              		.loc 1 73 0
 163 00a2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 164 00a4 1B02     		lsls	r3, r3, #8
 165 00a6 9AB2     		uxth	r2, r3
 166 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 167 00aa 9BB2     		uxth	r3, r3
 168 00ac 1343     		orrs	r3, r3, r2
 169 00ae 9BB2     		uxth	r3, r3
 170 00b0 9AB2     		uxth	r2, r3
 171 00b2 0D4B     		ldr	r3, .L3+4
 172 00b4 1A80     		strh	r2, [r3]	@ movhi
  74:.\gripper_eeprom.c **** 
  75:.\gripper_eeprom.c ****     L = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CCW_MARGIN_L);
 173              		.loc 1 75 0
 174 00b6 0B20     		movs	r0, #11
 175 00b8 FFF7FEFF 		bl	EEPROM_ReadByte
 176 00bc 0346     		mov	r3, r0
 177 00be FB71     		strb	r3, [r7, #7]
  76:.\gripper_eeprom.c ****     H = EEPROM_ReadByte(EEPROM_ADDR_GRIPPER_LEFT_MOTOR_CCW_MARGIN_H);
 178              		.loc 1 76 0
 179 00c0 0C20     		movs	r0, #12
 180 00c2 FFF7FEFF 		bl	EEPROM_ReadByte
 181 00c6 0346     		mov	r3, r0
 182 00c8 BB71     		strb	r3, [r7, #6]
  77:.\gripper_eeprom.c ****     //motorLeftMargin.CCW = (int16)(((int16)H<<8) | L);
  78:.\gripper_eeprom.c ****     motorMargin[MOTOR_LEFT_MARGIN_CCW] = (int16)(((int16)H<<8) | L);
 183              		.loc 1 78 0
 184 00ca BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 185 00cc 1B02     		lsls	r3, r3, #8
 186 00ce 9AB2     		uxth	r2, r3
 187 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 188 00d2 9BB2     		uxth	r3, r3
 189 00d4 1343     		orrs	r3, r3, r2
 190 00d6 9BB2     		uxth	r3, r3
 191 00d8 9AB2     		uxth	r2, r3
 192 00da 034B     		ldr	r3, .L3+4
 193 00dc 5A80     		strh	r2, [r3, #2]	@ movhi
  79:.\gripper_eeprom.c **** }
 194              		.loc 1 79 0
 195 00de 0837     		adds	r7, r7, #8
 196              		.cfi_def_cfa_offset 8
 197 00e0 BD46     		mov	sp, r7
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 00e2 80BD     		pop	{r7, pc}
 201              	.L4:
 202              		.align	2
 203              	.L3:
 204 00e4 00000000 		.word	motorType
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 6


 205 00e8 00000000 		.word	motorMargin
 206              		.cfi_endproc
 207              	.LFE57:
 208              		.size	readEeprom, .-readEeprom
 209              		.section	.text.eraseMotorType,"ax",%progbits
 210              		.align	2
 211              		.global	eraseMotorType
 212              		.thumb
 213              		.thumb_func
 214              		.type	eraseMotorType, %function
 215              	eraseMotorType:
 216              	.LFB58:
  80:.\gripper_eeprom.c **** 
  81:.\gripper_eeprom.c **** 
  82:.\gripper_eeprom.c **** void eraseMotorType(uint8 motorID)
  83:.\gripper_eeprom.c **** {
 217              		.loc 1 83 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 16
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 80B5     		push	{r7, lr}
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 84B0     		sub	sp, sp, #16
 226              		.cfi_def_cfa_offset 24
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 229 0006 0346     		mov	r3, r0
 230 0008 FB71     		strb	r3, [r7, #7]
  84:.\gripper_eeprom.c ****     uint8 type = getMotorType(motorID);
 231              		.loc 1 84 0
 232 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 000c 1846     		mov	r0, r3
 234 000e FFF7FEFF 		bl	getMotorType
 235 0012 0346     		mov	r3, r0
 236 0014 FB73     		strb	r3, [r7, #15]
  85:.\gripper_eeprom.c ****     if(type != MOTOR_TYPE_NONE) {
 237              		.loc 1 85 0
 238 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 239 0018 002B     		cmp	r3, #0
 240 001a 09D0     		beq	.L5
  86:.\gripper_eeprom.c ****         EEPROM_WriteByte(0,type);
 241              		.loc 1 86 0
 242 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 243 001e 9BB2     		uxth	r3, r3
 244 0020 0020     		movs	r0, #0
 245 0022 1946     		mov	r1, r3
 246 0024 FFF7FEFF 		bl	EEPROM_WriteByte
  87:.\gripper_eeprom.c ****         motorType[type] = 0;
 247              		.loc 1 87 0
 248 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 249 002a 034A     		ldr	r2, .L7
 250 002c 0021     		movs	r1, #0
 251 002e D154     		strb	r1, [r2, r3]
 252              	.L5:
  88:.\gripper_eeprom.c ****     }
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 7


  89:.\gripper_eeprom.c **** }
 253              		.loc 1 89 0
 254 0030 1037     		adds	r7, r7, #16
 255              		.cfi_def_cfa_offset 8
 256 0032 BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 0034 80BD     		pop	{r7, pc}
 260              	.L8:
 261 0036 00BF     		.align	2
 262              	.L7:
 263 0038 00000000 		.word	motorType
 264              		.cfi_endproc
 265              	.LFE58:
 266              		.size	eraseMotorType, .-eraseMotorType
 267              		.section	.text.saveMotorType,"ax",%progbits
 268              		.align	2
 269              		.global	saveMotorType
 270              		.thumb
 271              		.thumb_func
 272              		.type	saveMotorType, %function
 273              	saveMotorType:
 274              	.LFB59:
  90:.\gripper_eeprom.c **** 
  91:.\gripper_eeprom.c **** void saveMotorType(uint8 motorID, uint8 type)
  92:.\gripper_eeprom.c **** {
 275              		.loc 1 92 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 287 0006 0346     		mov	r3, r0
 288 0008 0A46     		mov	r2, r1
 289 000a FB71     		strb	r3, [r7, #7]
 290 000c 1346     		mov	r3, r2
 291 000e BB71     		strb	r3, [r7, #6]
  93:.\gripper_eeprom.c ****     if(type != MOTOR_TYPE_NONE)
 292              		.loc 1 93 0
 293 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 294 0012 002B     		cmp	r3, #0
 295 0014 2AD0     		beq	.L9
  94:.\gripper_eeprom.c ****     {
  95:.\gripper_eeprom.c ****         switch(type) 
 296              		.loc 1 95 0
 297 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 298 0018 013B     		subs	r3, r3, #1
 299 001a 032B     		cmp	r3, #3
 300 001c 22D8     		bhi	.L11
 301 001e 01A2     		adr	r2, .L13
 302 0020 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 8


 303              		.p2align 2
 304              	.L13:
 305 0024 35000000 		.word	.L12+1
 306 0028 41000000 		.word	.L14+1
 307 002c 4D000000 		.word	.L15+1
 308 0030 59000000 		.word	.L16+1
 309              		.p2align 1
 310              	.L12:
  96:.\gripper_eeprom.c ****         {
  97:.\gripper_eeprom.c ****             case MOTOR_TYPE_ROTATE:
  98:.\gripper_eeprom.c ****                 EEPROM_WriteByte(motorID, EEPROM_ADDR_GRIPPER_ROTATE_MOTOR_ID);
 311              		.loc 1 98 0
 312 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 313 0036 1846     		mov	r0, r3
 314 0038 0121     		movs	r1, #1
 315 003a FFF7FEFF 		bl	EEPROM_WriteByte
  99:.\gripper_eeprom.c ****                 break;
 316              		.loc 1 99 0
 317 003e 11E0     		b	.L11
 318              	.L14:
 100:.\gripper_eeprom.c ****             case MOTOR_TYPE_TILT:
 101:.\gripper_eeprom.c ****                 EEPROM_WriteByte(motorID, EEPROM_ADDR_GRIPPER_TILT_MOTOR_ID);
 319              		.loc 1 101 0
 320 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 321 0042 1846     		mov	r0, r3
 322 0044 0221     		movs	r1, #2
 323 0046 FFF7FEFF 		bl	EEPROM_WriteByte
 102:.\gripper_eeprom.c ****                 break;
 324              		.loc 1 102 0
 325 004a 0BE0     		b	.L11
 326              	.L15:
 103:.\gripper_eeprom.c ****             case MOTOR_TYPE_RIGHT:
 104:.\gripper_eeprom.c ****                 EEPROM_WriteByte(motorID, EEPROM_ADDR_GRIPPER_RIGHT_MOTOR_ID);
 327              		.loc 1 104 0
 328 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 329 004e 1846     		mov	r0, r3
 330 0050 0321     		movs	r1, #3
 331 0052 FFF7FEFF 		bl	EEPROM_WriteByte
 105:.\gripper_eeprom.c ****                 break;
 332              		.loc 1 105 0
 333 0056 05E0     		b	.L11
 334              	.L16:
 106:.\gripper_eeprom.c ****             case MOTOR_TYPE_LEFT:
 107:.\gripper_eeprom.c ****                 EEPROM_WriteByte(motorID, EEPROM_ADDR_GRIPPER_LEFT_MOTOR_ID);
 335              		.loc 1 107 0
 336 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 337 005a 1846     		mov	r0, r3
 338 005c 0421     		movs	r1, #4
 339 005e FFF7FEFF 		bl	EEPROM_WriteByte
 108:.\gripper_eeprom.c ****                 break;
 340              		.loc 1 108 0
 341 0062 00BF     		nop
 342              	.L11:
 109:.\gripper_eeprom.c ****         }
 110:.\gripper_eeprom.c ****         motorType[type] = motorID;
 343              		.loc 1 110 0
 344 0064 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 9


 345 0066 0349     		ldr	r1, .L17
 346 0068 FA79     		ldrb	r2, [r7, #7]
 347 006a CA54     		strb	r2, [r1, r3]
 348              	.L9:
 111:.\gripper_eeprom.c ****     }
 112:.\gripper_eeprom.c **** }
 349              		.loc 1 112 0
 350 006c 0837     		adds	r7, r7, #8
 351              		.cfi_def_cfa_offset 8
 352 006e BD46     		mov	sp, r7
 353              		.cfi_def_cfa_register 13
 354              		@ sp needed
 355 0070 80BD     		pop	{r7, pc}
 356              	.L18:
 357 0072 00BF     		.align	2
 358              	.L17:
 359 0074 00000000 		.word	motorType
 360              		.cfi_endproc
 361              	.LFE59:
 362              		.size	saveMotorType, .-saveMotorType
 363              		.section	.text.getMotorType,"ax",%progbits
 364              		.align	2
 365              		.global	getMotorType
 366              		.thumb
 367              		.thumb_func
 368              		.type	getMotorType, %function
 369              	getMotorType:
 370              	.LFB60:
 113:.\gripper_eeprom.c **** 
 114:.\gripper_eeprom.c **** uint8 getMotorType(uint8 motorID)
 115:.\gripper_eeprom.c **** {
 371              		.loc 1 115 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 16
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376 0000 80B4     		push	{r7}
 377              		.cfi_def_cfa_offset 4
 378              		.cfi_offset 7, -4
 379 0002 85B0     		sub	sp, sp, #20
 380              		.cfi_def_cfa_offset 24
 381 0004 00AF     		add	r7, sp, #0
 382              		.cfi_def_cfa_register 7
 383 0006 0346     		mov	r3, r0
 384 0008 FB71     		strb	r3, [r7, #7]
 116:.\gripper_eeprom.c ****     int type = 0;
 385              		.loc 1 116 0
 386 000a 0023     		movs	r3, #0
 387 000c FB60     		str	r3, [r7, #12]
 117:.\gripper_eeprom.c ****     for(; type < NB_OF_MOTOR_TYPE; type++)
 388              		.loc 1 117 0
 389 000e 0CE0     		b	.L20
 390              	.L23:
 118:.\gripper_eeprom.c ****     {
 119:.\gripper_eeprom.c ****         if(motorID == motorType[type])
 391              		.loc 1 119 0
 392 0010 0B4A     		ldr	r2, .L24
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 10


 393 0012 FB68     		ldr	r3, [r7, #12]
 394 0014 1344     		add	r3, r3, r2
 395 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 397 001a 9A42     		cmp	r2, r3
 398 001c 02D1     		bne	.L21
 120:.\gripper_eeprom.c ****         {
 121:.\gripper_eeprom.c ****             return type;
 399              		.loc 1 121 0
 400 001e FB68     		ldr	r3, [r7, #12]
 401 0020 DBB2     		uxtb	r3, r3
 402 0022 06E0     		b	.L22
 403              	.L21:
 117:.\gripper_eeprom.c ****     {
 404              		.loc 1 117 0
 405 0024 FB68     		ldr	r3, [r7, #12]
 406 0026 0133     		adds	r3, r3, #1
 407 0028 FB60     		str	r3, [r7, #12]
 408              	.L20:
 117:.\gripper_eeprom.c ****     {
 409              		.loc 1 117 0 is_stmt 0 discriminator 1
 410 002a FB68     		ldr	r3, [r7, #12]
 411 002c 042B     		cmp	r3, #4
 412 002e EFDD     		ble	.L23
 122:.\gripper_eeprom.c ****         }
 123:.\gripper_eeprom.c ****     }
 124:.\gripper_eeprom.c ****     return 0;
 413              		.loc 1 124 0 is_stmt 1
 414 0030 0023     		movs	r3, #0
 415              	.L22:
 125:.\gripper_eeprom.c **** }
 416              		.loc 1 125 0
 417 0032 1846     		mov	r0, r3
 418 0034 1437     		adds	r7, r7, #20
 419              		.cfi_def_cfa_offset 4
 420 0036 BD46     		mov	sp, r7
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 0038 5DF8047B 		ldr	r7, [sp], #4
 424              		.cfi_restore 7
 425              		.cfi_def_cfa_offset 0
 426 003c 7047     		bx	lr
 427              	.L25:
 428 003e 00BF     		.align	2
 429              	.L24:
 430 0040 00000000 		.word	motorType
 431              		.cfi_endproc
 432              	.LFE60:
 433              		.size	getMotorType, .-getMotorType
 434              		.section	.text.updateAngleLimitData,"ax",%progbits
 435              		.align	2
 436              		.global	updateAngleLimitData
 437              		.thumb
 438              		.thumb_func
 439              		.type	updateAngleLimitData, %function
 440              	updateAngleLimitData:
 441              	.LFB61:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 11


 126:.\gripper_eeprom.c **** 
 127:.\gripper_eeprom.c **** 
 128:.\gripper_eeprom.c **** void updateAngleLimitData(uint8 *packet)
 129:.\gripper_eeprom.c **** {
 442              		.loc 1 129 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 82B0     		sub	sp, sp, #8
 451              		.cfi_def_cfa_offset 16
 452 0004 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 454 0006 7860     		str	r0, [r7, #4]
 130:.\gripper_eeprom.c **** 
 131:.\gripper_eeprom.c ****     if(packet[1] == motorType[MOTOR_TYPE_LEFT])
 455              		.loc 1 131 0
 456 0008 7B68     		ldr	r3, [r7, #4]
 457 000a 0133     		adds	r3, r3, #1
 458 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 459 000e 4E4B     		ldr	r3, .L32
 460 0010 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 461 0012 9A42     		cmp	r2, r3
 462 0014 47D1     		bne	.L27
 132:.\gripper_eeprom.c ****     {
 133:.\gripper_eeprom.c ****         if(packet[2] == CW_ANGLE_LIMIT_L)
 463              		.loc 1 133 0
 464 0016 7B68     		ldr	r3, [r7, #4]
 465 0018 0233     		adds	r3, r3, #2
 466 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467 001c 062B     		cmp	r3, #6
 468 001e 1ED1     		bne	.L28
 134:.\gripper_eeprom.c ****         {
 135:.\gripper_eeprom.c ****             motorMargin[MOTOR_LEFT_MARGIN_CW] = (packet[5]<<8) + packet[4];
 469              		.loc 1 135 0
 470 0020 7B68     		ldr	r3, [r7, #4]
 471 0022 0533     		adds	r3, r3, #5
 472 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 473 0026 9BB2     		uxth	r3, r3
 474 0028 1B02     		lsls	r3, r3, #8
 475 002a 9AB2     		uxth	r2, r3
 476 002c 7B68     		ldr	r3, [r7, #4]
 477 002e 0433     		adds	r3, r3, #4
 478 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 0032 9BB2     		uxth	r3, r3
 480 0034 1344     		add	r3, r3, r2
 481 0036 9AB2     		uxth	r2, r3
 482 0038 444B     		ldr	r3, .L32+4
 483 003a 1A80     		strh	r2, [r3]	@ movhi
 136:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)motorMargin[MOTOR_LEFT_MARGIN_CW],EEPROM_ADDR_GRIPPER_LEFT_MOTO
 484              		.loc 1 136 0
 485 003c 434B     		ldr	r3, .L32+4
 486 003e 1B88     		ldrh	r3, [r3]
 487 0040 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 12


 488 0042 1846     		mov	r0, r3
 489 0044 0921     		movs	r1, #9
 490 0046 FFF7FEFF 		bl	EEPROM_WriteByte
 137:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)(motorMargin[MOTOR_LEFT_MARGIN_CW]>>8),EEPROM_ADDR_GRIPPER_LEFT
 491              		.loc 1 137 0
 492 004a 404B     		ldr	r3, .L32+4
 493 004c 1B88     		ldrh	r3, [r3]
 494 004e 1B0A     		lsrs	r3, r3, #8
 495 0050 9BB2     		uxth	r3, r3
 496 0052 DBB2     		uxtb	r3, r3
 497 0054 1846     		mov	r0, r3
 498 0056 0A21     		movs	r1, #10
 499 0058 FFF7FEFF 		bl	EEPROM_WriteByte
 500 005c 70E0     		b	.L26
 501              	.L28:
 138:.\gripper_eeprom.c ****         }
 139:.\gripper_eeprom.c ****         else if(packet[2] == CCW_ANGLE_LIMIT_L)
 502              		.loc 1 139 0
 503 005e 7B68     		ldr	r3, [r7, #4]
 504 0060 0233     		adds	r3, r3, #2
 505 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506 0064 082B     		cmp	r3, #8
 507 0066 6BD1     		bne	.L26
 140:.\gripper_eeprom.c ****         {
 141:.\gripper_eeprom.c ****             motorMargin[MOTOR_LEFT_MARGIN_CCW] = (packet[5]<<8) + packet[4];
 508              		.loc 1 141 0
 509 0068 7B68     		ldr	r3, [r7, #4]
 510 006a 0533     		adds	r3, r3, #5
 511 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 006e 9BB2     		uxth	r3, r3
 513 0070 1B02     		lsls	r3, r3, #8
 514 0072 9AB2     		uxth	r2, r3
 515 0074 7B68     		ldr	r3, [r7, #4]
 516 0076 0433     		adds	r3, r3, #4
 517 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 007a 9BB2     		uxth	r3, r3
 519 007c 1344     		add	r3, r3, r2
 520 007e 9AB2     		uxth	r2, r3
 521 0080 324B     		ldr	r3, .L32+4
 522 0082 5A80     		strh	r2, [r3, #2]	@ movhi
 142:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)motorMargin[MOTOR_LEFT_MARGIN_CCW],EEPROM_ADDR_GRIPPER_LEFT_MOT
 523              		.loc 1 142 0
 524 0084 314B     		ldr	r3, .L32+4
 525 0086 5B88     		ldrh	r3, [r3, #2]
 526 0088 DBB2     		uxtb	r3, r3
 527 008a 1846     		mov	r0, r3
 528 008c 0B21     		movs	r1, #11
 529 008e FFF7FEFF 		bl	EEPROM_WriteByte
 143:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)(motorMargin[MOTOR_LEFT_MARGIN_CCW]>>8),EEPROM_ADDR_GRIPPER_LEF
 530              		.loc 1 143 0
 531 0092 2E4B     		ldr	r3, .L32+4
 532 0094 5B88     		ldrh	r3, [r3, #2]
 533 0096 1B0A     		lsrs	r3, r3, #8
 534 0098 9BB2     		uxth	r3, r3
 535 009a DBB2     		uxtb	r3, r3
 536 009c 1846     		mov	r0, r3
 537 009e 0C21     		movs	r1, #12
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 13


 538 00a0 FFF7FEFF 		bl	EEPROM_WriteByte
 539 00a4 4CE0     		b	.L26
 540              	.L27:
 144:.\gripper_eeprom.c ****         }
 145:.\gripper_eeprom.c ****     }
 146:.\gripper_eeprom.c ****     else if(packet[1] == motorType[MOTOR_TYPE_RIGHT])
 541              		.loc 1 146 0
 542 00a6 7B68     		ldr	r3, [r7, #4]
 543 00a8 0133     		adds	r3, r3, #1
 544 00aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 545 00ac 264B     		ldr	r3, .L32
 546 00ae DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 547 00b0 9A42     		cmp	r2, r3
 548 00b2 45D1     		bne	.L26
 147:.\gripper_eeprom.c ****     {
 148:.\gripper_eeprom.c ****         if(packet[2] == CW_ANGLE_LIMIT_L)
 549              		.loc 1 148 0
 550 00b4 7B68     		ldr	r3, [r7, #4]
 551 00b6 0233     		adds	r3, r3, #2
 552 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 553 00ba 062B     		cmp	r3, #6
 554 00bc 1DD1     		bne	.L31
 149:.\gripper_eeprom.c ****         {
 150:.\gripper_eeprom.c ****             motorMargin[MOTOR_RIGHT_MARGIN_CW] = (packet[5]<<8) + packet[4];
 555              		.loc 1 150 0
 556 00be 7B68     		ldr	r3, [r7, #4]
 557 00c0 0533     		adds	r3, r3, #5
 558 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559 00c4 9BB2     		uxth	r3, r3
 560 00c6 1B02     		lsls	r3, r3, #8
 561 00c8 9AB2     		uxth	r2, r3
 562 00ca 7B68     		ldr	r3, [r7, #4]
 563 00cc 0433     		adds	r3, r3, #4
 564 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 565 00d0 9BB2     		uxth	r3, r3
 566 00d2 1344     		add	r3, r3, r2
 567 00d4 9AB2     		uxth	r2, r3
 568 00d6 1D4B     		ldr	r3, .L32+4
 569 00d8 9A80     		strh	r2, [r3, #4]	@ movhi
 151:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)motorMargin[MOTOR_RIGHT_MARGIN_CW],EEPROM_ADDR_GRIPPER_RIGHT_MO
 570              		.loc 1 151 0
 571 00da 1C4B     		ldr	r3, .L32+4
 572 00dc 9B88     		ldrh	r3, [r3, #4]
 573 00de DBB2     		uxtb	r3, r3
 574 00e0 1846     		mov	r0, r3
 575 00e2 0521     		movs	r1, #5
 576 00e4 FFF7FEFF 		bl	EEPROM_WriteByte
 152:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)(motorMargin[MOTOR_RIGHT_MARGIN_CW]>>8),EEPROM_ADDR_GRIPPER_RIG
 577              		.loc 1 152 0
 578 00e8 184B     		ldr	r3, .L32+4
 579 00ea 9B88     		ldrh	r3, [r3, #4]
 580 00ec 1B0A     		lsrs	r3, r3, #8
 581 00ee 9BB2     		uxth	r3, r3
 582 00f0 DBB2     		uxtb	r3, r3
 583 00f2 1846     		mov	r0, r3
 584 00f4 0621     		movs	r1, #6
 585 00f6 FFF7FEFF 		bl	EEPROM_WriteByte
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 14


 586              	.L31:
 153:.\gripper_eeprom.c ****         }
 154:.\gripper_eeprom.c ****         if(packet[2] == CCW_ANGLE_LIMIT_L)
 587              		.loc 1 154 0
 588 00fa 7B68     		ldr	r3, [r7, #4]
 589 00fc 0233     		adds	r3, r3, #2
 590 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 591 0100 082B     		cmp	r3, #8
 592 0102 1DD1     		bne	.L26
 155:.\gripper_eeprom.c ****         {
 156:.\gripper_eeprom.c ****             motorMargin[MOTOR_RIGHT_MARGIN_CCW] = (packet[5]<<8) + packet[4];
 593              		.loc 1 156 0
 594 0104 7B68     		ldr	r3, [r7, #4]
 595 0106 0533     		adds	r3, r3, #5
 596 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 597 010a 9BB2     		uxth	r3, r3
 598 010c 1B02     		lsls	r3, r3, #8
 599 010e 9AB2     		uxth	r2, r3
 600 0110 7B68     		ldr	r3, [r7, #4]
 601 0112 0433     		adds	r3, r3, #4
 602 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 603 0116 9BB2     		uxth	r3, r3
 604 0118 1344     		add	r3, r3, r2
 605 011a 9AB2     		uxth	r2, r3
 606 011c 0B4B     		ldr	r3, .L32+4
 607 011e DA80     		strh	r2, [r3, #6]	@ movhi
 157:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)motorMargin[MOTOR_RIGHT_MARGIN_CCW],EEPROM_ADDR_GRIPPER_RIGHT_M
 608              		.loc 1 157 0
 609 0120 0A4B     		ldr	r3, .L32+4
 610 0122 DB88     		ldrh	r3, [r3, #6]
 611 0124 DBB2     		uxtb	r3, r3
 612 0126 1846     		mov	r0, r3
 613 0128 0721     		movs	r1, #7
 614 012a FFF7FEFF 		bl	EEPROM_WriteByte
 158:.\gripper_eeprom.c ****             EEPROM_WriteByte((uint8)(motorMargin[MOTOR_RIGHT_MARGIN_CCW]>>8),EEPROM_ADDR_GRIPPER_RI
 615              		.loc 1 158 0
 616 012e 074B     		ldr	r3, .L32+4
 617 0130 DB88     		ldrh	r3, [r3, #6]
 618 0132 1B0A     		lsrs	r3, r3, #8
 619 0134 9BB2     		uxth	r3, r3
 620 0136 DBB2     		uxtb	r3, r3
 621 0138 1846     		mov	r0, r3
 622 013a 0821     		movs	r1, #8
 623 013c FFF7FEFF 		bl	EEPROM_WriteByte
 624              	.L26:
 159:.\gripper_eeprom.c ****         }
 160:.\gripper_eeprom.c ****     }
 161:.\gripper_eeprom.c **** }
 625              		.loc 1 161 0
 626 0140 0837     		adds	r7, r7, #8
 627              		.cfi_def_cfa_offset 8
 628 0142 BD46     		mov	sp, r7
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 0144 80BD     		pop	{r7, pc}
 632              	.L33:
 633 0146 00BF     		.align	2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 15


 634              	.L32:
 635 0148 00000000 		.word	motorType
 636 014c 00000000 		.word	motorMargin
 637              		.cfi_endproc
 638              	.LFE61:
 639              		.size	updateAngleLimitData, .-updateAngleLimitData
 640              		.text
 641              	.Letext0:
 642              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 643              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 644              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 645              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 646              		.section	.debug_info,"",%progbits
 647              	.Ldebug_info0:
 648 0000 11020000 		.4byte	0x211
 649 0004 0400     		.2byte	0x4
 650 0006 00000000 		.4byte	.Ldebug_abbrev0
 651 000a 04       		.byte	0x4
 652 000b 01       		.uleb128 0x1
 653 000c 64000000 		.4byte	.LASF27
 654 0010 01       		.byte	0x1
 655 0011 21020000 		.4byte	.LASF28
 656 0015 0C000000 		.4byte	.LASF29
 657 0019 00000000 		.4byte	.Ldebug_ranges0+0
 658 001d 00000000 		.4byte	0
 659 0021 00000000 		.4byte	.Ldebug_line0
 660 0025 02       		.uleb128 0x2
 661 0026 01       		.byte	0x1
 662 0027 06       		.byte	0x6
 663 0028 34020000 		.4byte	.LASF0
 664 002c 02       		.uleb128 0x2
 665 002d 01       		.byte	0x1
 666 002e 08       		.byte	0x8
 667 002f 0D010000 		.4byte	.LASF1
 668 0033 02       		.uleb128 0x2
 669 0034 02       		.byte	0x2
 670 0035 05       		.byte	0x5
 671 0036 71010000 		.4byte	.LASF2
 672 003a 02       		.uleb128 0x2
 673 003b 02       		.byte	0x2
 674 003c 07       		.byte	0x7
 675 003d 33010000 		.4byte	.LASF3
 676 0041 03       		.uleb128 0x3
 677 0042 5A000000 		.4byte	.LASF9
 678 0046 02       		.byte	0x2
 679 0047 3F       		.byte	0x3f
 680 0048 4C000000 		.4byte	0x4c
 681 004c 02       		.uleb128 0x2
 682 004d 04       		.byte	0x4
 683 004e 05       		.byte	0x5
 684 004f 18020000 		.4byte	.LASF4
 685 0053 02       		.uleb128 0x2
 686 0054 04       		.byte	0x4
 687 0055 07       		.byte	0x7
 688 0056 21010000 		.4byte	.LASF5
 689 005a 02       		.uleb128 0x2
 690 005b 08       		.byte	0x8
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 16


 691 005c 05       		.byte	0x5
 692 005d CD010000 		.4byte	.LASF6
 693 0061 02       		.uleb128 0x2
 694 0062 08       		.byte	0x8
 695 0063 07       		.byte	0x7
 696 0064 A5010000 		.4byte	.LASF7
 697 0068 04       		.uleb128 0x4
 698 0069 04       		.byte	0x4
 699 006a 05       		.byte	0x5
 700 006b 696E7400 		.ascii	"int\000"
 701 006f 02       		.uleb128 0x2
 702 0070 04       		.byte	0x4
 703 0071 07       		.byte	0x7
 704 0072 98010000 		.4byte	.LASF8
 705 0076 03       		.uleb128 0x3
 706 0077 BC010000 		.4byte	.LASF10
 707 007b 03       		.byte	0x3
 708 007c 2C       		.byte	0x2c
 709 007d 41000000 		.4byte	0x41
 710 0081 03       		.uleb128 0x3
 711 0082 EF010000 		.4byte	.LASF11
 712 0086 04       		.byte	0x4
 713 0087 A1       		.byte	0xa1
 714 0088 2C000000 		.4byte	0x2c
 715 008c 03       		.uleb128 0x3
 716 008d 82010000 		.4byte	.LASF12
 717 0091 04       		.byte	0x4
 718 0092 A2       		.byte	0xa2
 719 0093 3A000000 		.4byte	0x3a
 720 0097 03       		.uleb128 0x3
 721 0098 1B010000 		.4byte	.LASF13
 722 009c 04       		.byte	0x4
 723 009d A5       		.byte	0xa5
 724 009e 33000000 		.4byte	0x33
 725 00a2 02       		.uleb128 0x2
 726 00a3 04       		.byte	0x4
 727 00a4 04       		.byte	0x4
 728 00a5 07010000 		.4byte	.LASF14
 729 00a9 02       		.uleb128 0x2
 730 00aa 08       		.byte	0x8
 731 00ab 04       		.byte	0x4
 732 00ac 6A010000 		.4byte	.LASF15
 733 00b0 02       		.uleb128 0x2
 734 00b1 01       		.byte	0x1
 735 00b2 08       		.byte	0x8
 736 00b3 E5010000 		.4byte	.LASF16
 737 00b7 02       		.uleb128 0x2
 738 00b8 04       		.byte	0x4
 739 00b9 07       		.byte	0x7
 740 00ba C4010000 		.4byte	.LASF17
 741 00be 05       		.uleb128 0x5
 742 00bf 00000000 		.4byte	.LASF30
 743 00c3 01       		.byte	0x1
 744 00c4 12       		.byte	0x12
 745 00c5 00000000 		.4byte	.LFB56
 746 00c9 14000000 		.4byte	.LFE56-.LFB56
 747 00cd 01       		.uleb128 0x1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 17


 748 00ce 9C       		.byte	0x9c
 749 00cf 06       		.uleb128 0x6
 750 00d0 53010000 		.4byte	.LASF31
 751 00d4 01       		.byte	0x1
 752 00d5 34       		.byte	0x34
 753 00d6 00000000 		.4byte	.LFB57
 754 00da EC000000 		.4byte	.LFE57-.LFB57
 755 00de 01       		.uleb128 0x1
 756 00df 9C       		.byte	0x9c
 757 00e0 FD000000 		.4byte	0xfd
 758 00e4 07       		.uleb128 0x7
 759 00e5 4C00     		.ascii	"L\000"
 760 00e7 01       		.byte	0x1
 761 00e8 36       		.byte	0x36
 762 00e9 81000000 		.4byte	0x81
 763 00ed 02       		.uleb128 0x2
 764 00ee 91       		.byte	0x91
 765 00ef 77       		.sleb128 -9
 766 00f0 07       		.uleb128 0x7
 767 00f1 4800     		.ascii	"H\000"
 768 00f3 01       		.byte	0x1
 769 00f4 36       		.byte	0x36
 770 00f5 81000000 		.4byte	0x81
 771 00f9 02       		.uleb128 0x2
 772 00fa 91       		.byte	0x91
 773 00fb 76       		.sleb128 -10
 774 00fc 00       		.byte	0
 775 00fd 08       		.uleb128 0x8
 776 00fe 89010000 		.4byte	.LASF19
 777 0102 01       		.byte	0x1
 778 0103 52       		.byte	0x52
 779 0104 00000000 		.4byte	.LFB58
 780 0108 3C000000 		.4byte	.LFE58-.LFB58
 781 010c 01       		.uleb128 0x1
 782 010d 9C       		.byte	0x9c
 783 010e 2F010000 		.4byte	0x12f
 784 0112 09       		.uleb128 0x9
 785 0113 FF000000 		.4byte	.LASF21
 786 0117 01       		.byte	0x1
 787 0118 52       		.byte	0x52
 788 0119 81000000 		.4byte	0x81
 789 011d 02       		.uleb128 0x2
 790 011e 91       		.byte	0x91
 791 011f 6F       		.sleb128 -17
 792 0120 0A       		.uleb128 0xa
 793 0121 EA010000 		.4byte	.LASF18
 794 0125 01       		.byte	0x1
 795 0126 54       		.byte	0x54
 796 0127 81000000 		.4byte	0x81
 797 012b 02       		.uleb128 0x2
 798 012c 91       		.byte	0x91
 799 012d 77       		.sleb128 -9
 800 012e 00       		.byte	0
 801 012f 08       		.uleb128 0x8
 802 0130 0A020000 		.4byte	.LASF20
 803 0134 01       		.byte	0x1
 804 0135 5B       		.byte	0x5b
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 18


 805 0136 00000000 		.4byte	.LFB59
 806 013a 78000000 		.4byte	.LFE59-.LFB59
 807 013e 01       		.uleb128 0x1
 808 013f 9C       		.byte	0x9c
 809 0140 61010000 		.4byte	0x161
 810 0144 09       		.uleb128 0x9
 811 0145 FF000000 		.4byte	.LASF21
 812 0149 01       		.byte	0x1
 813 014a 5B       		.byte	0x5b
 814 014b 81000000 		.4byte	0x81
 815 014f 02       		.uleb128 0x2
 816 0150 91       		.byte	0x91
 817 0151 77       		.sleb128 -9
 818 0152 09       		.uleb128 0x9
 819 0153 EA010000 		.4byte	.LASF18
 820 0157 01       		.byte	0x1
 821 0158 5B       		.byte	0x5b
 822 0159 81000000 		.4byte	0x81
 823 015d 02       		.uleb128 0x2
 824 015e 91       		.byte	0x91
 825 015f 76       		.sleb128 -10
 826 0160 00       		.byte	0
 827 0161 0B       		.uleb128 0xb
 828 0162 F2000000 		.4byte	.LASF32
 829 0166 01       		.byte	0x1
 830 0167 72       		.byte	0x72
 831 0168 81000000 		.4byte	0x81
 832 016c 00000000 		.4byte	.LFB60
 833 0170 44000000 		.4byte	.LFE60-.LFB60
 834 0174 01       		.uleb128 0x1
 835 0175 9C       		.byte	0x9c
 836 0176 97010000 		.4byte	0x197
 837 017a 09       		.uleb128 0x9
 838 017b FF000000 		.4byte	.LASF21
 839 017f 01       		.byte	0x1
 840 0180 72       		.byte	0x72
 841 0181 81000000 		.4byte	0x81
 842 0185 02       		.uleb128 0x2
 843 0186 91       		.byte	0x91
 844 0187 6F       		.sleb128 -17
 845 0188 0A       		.uleb128 0xa
 846 0189 EA010000 		.4byte	.LASF18
 847 018d 01       		.byte	0x1
 848 018e 74       		.byte	0x74
 849 018f 68000000 		.4byte	0x68
 850 0193 02       		.uleb128 0x2
 851 0194 91       		.byte	0x91
 852 0195 74       		.sleb128 -12
 853 0196 00       		.byte	0
 854 0197 08       		.uleb128 0x8
 855 0198 F5010000 		.4byte	.LASF22
 856 019c 01       		.byte	0x1
 857 019d 80       		.byte	0x80
 858 019e 00000000 		.4byte	.LFB61
 859 01a2 50010000 		.4byte	.LFE61-.LFB61
 860 01a6 01       		.uleb128 0x1
 861 01a7 9C       		.byte	0x9c
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 19


 862 01a8 BB010000 		.4byte	0x1bb
 863 01ac 09       		.uleb128 0x9
 864 01ad 7B010000 		.4byte	.LASF23
 865 01b1 01       		.byte	0x1
 866 01b2 80       		.byte	0x80
 867 01b3 BB010000 		.4byte	0x1bb
 868 01b7 02       		.uleb128 0x2
 869 01b8 91       		.byte	0x91
 870 01b9 74       		.sleb128 -12
 871 01ba 00       		.byte	0
 872 01bb 0C       		.uleb128 0xc
 873 01bc 04       		.byte	0x4
 874 01bd 81000000 		.4byte	0x81
 875 01c1 0D       		.uleb128 0xd
 876 01c2 46010000 		.4byte	.LASF24
 877 01c6 05       		.byte	0x5
 878 01c7 1606     		.2byte	0x616
 879 01c9 CD010000 		.4byte	0x1cd
 880 01cd 0E       		.uleb128 0xe
 881 01ce 76000000 		.4byte	0x76
 882 01d2 0F       		.uleb128 0xf
 883 01d3 8C000000 		.4byte	0x8c
 884 01d7 E2010000 		.4byte	0x1e2
 885 01db 10       		.uleb128 0x10
 886 01dc B7000000 		.4byte	0xb7
 887 01e0 03       		.byte	0x3
 888 01e1 00       		.byte	0
 889 01e2 11       		.uleb128 0x11
 890 01e3 5E010000 		.4byte	.LASF25
 891 01e7 01       		.byte	0x1
 892 01e8 10       		.byte	0x10
 893 01e9 D2010000 		.4byte	0x1d2
 894 01ed 05       		.uleb128 0x5
 895 01ee 03       		.byte	0x3
 896 01ef 00000000 		.4byte	motorMargin
 897 01f3 0F       		.uleb128 0xf
 898 01f4 81000000 		.4byte	0x81
 899 01f8 03020000 		.4byte	0x203
 900 01fc 10       		.uleb128 0x10
 901 01fd B7000000 		.4byte	0xb7
 902 0201 04       		.byte	0x4
 903 0202 00       		.byte	0
 904 0203 11       		.uleb128 0x11
 905 0204 DB010000 		.4byte	.LASF26
 906 0208 01       		.byte	0x1
 907 0209 0F       		.byte	0xf
 908 020a F3010000 		.4byte	0x1f3
 909 020e 05       		.uleb128 0x5
 910 020f 03       		.byte	0x3
 911 0210 00000000 		.4byte	motorType
 912 0214 00       		.byte	0
 913              		.section	.debug_abbrev,"",%progbits
 914              	.Ldebug_abbrev0:
 915 0000 01       		.uleb128 0x1
 916 0001 11       		.uleb128 0x11
 917 0002 01       		.byte	0x1
 918 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 20


 919 0004 0E       		.uleb128 0xe
 920 0005 13       		.uleb128 0x13
 921 0006 0B       		.uleb128 0xb
 922 0007 03       		.uleb128 0x3
 923 0008 0E       		.uleb128 0xe
 924 0009 1B       		.uleb128 0x1b
 925 000a 0E       		.uleb128 0xe
 926 000b 55       		.uleb128 0x55
 927 000c 17       		.uleb128 0x17
 928 000d 11       		.uleb128 0x11
 929 000e 01       		.uleb128 0x1
 930 000f 10       		.uleb128 0x10
 931 0010 17       		.uleb128 0x17
 932 0011 00       		.byte	0
 933 0012 00       		.byte	0
 934 0013 02       		.uleb128 0x2
 935 0014 24       		.uleb128 0x24
 936 0015 00       		.byte	0
 937 0016 0B       		.uleb128 0xb
 938 0017 0B       		.uleb128 0xb
 939 0018 3E       		.uleb128 0x3e
 940 0019 0B       		.uleb128 0xb
 941 001a 03       		.uleb128 0x3
 942 001b 0E       		.uleb128 0xe
 943 001c 00       		.byte	0
 944 001d 00       		.byte	0
 945 001e 03       		.uleb128 0x3
 946 001f 16       		.uleb128 0x16
 947 0020 00       		.byte	0
 948 0021 03       		.uleb128 0x3
 949 0022 0E       		.uleb128 0xe
 950 0023 3A       		.uleb128 0x3a
 951 0024 0B       		.uleb128 0xb
 952 0025 3B       		.uleb128 0x3b
 953 0026 0B       		.uleb128 0xb
 954 0027 49       		.uleb128 0x49
 955 0028 13       		.uleb128 0x13
 956 0029 00       		.byte	0
 957 002a 00       		.byte	0
 958 002b 04       		.uleb128 0x4
 959 002c 24       		.uleb128 0x24
 960 002d 00       		.byte	0
 961 002e 0B       		.uleb128 0xb
 962 002f 0B       		.uleb128 0xb
 963 0030 3E       		.uleb128 0x3e
 964 0031 0B       		.uleb128 0xb
 965 0032 03       		.uleb128 0x3
 966 0033 08       		.uleb128 0x8
 967 0034 00       		.byte	0
 968 0035 00       		.byte	0
 969 0036 05       		.uleb128 0x5
 970 0037 2E       		.uleb128 0x2e
 971 0038 00       		.byte	0
 972 0039 3F       		.uleb128 0x3f
 973 003a 19       		.uleb128 0x19
 974 003b 03       		.uleb128 0x3
 975 003c 0E       		.uleb128 0xe
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 21


 976 003d 3A       		.uleb128 0x3a
 977 003e 0B       		.uleb128 0xb
 978 003f 3B       		.uleb128 0x3b
 979 0040 0B       		.uleb128 0xb
 980 0041 11       		.uleb128 0x11
 981 0042 01       		.uleb128 0x1
 982 0043 12       		.uleb128 0x12
 983 0044 06       		.uleb128 0x6
 984 0045 40       		.uleb128 0x40
 985 0046 18       		.uleb128 0x18
 986 0047 9642     		.uleb128 0x2116
 987 0049 19       		.uleb128 0x19
 988 004a 00       		.byte	0
 989 004b 00       		.byte	0
 990 004c 06       		.uleb128 0x6
 991 004d 2E       		.uleb128 0x2e
 992 004e 01       		.byte	0x1
 993 004f 3F       		.uleb128 0x3f
 994 0050 19       		.uleb128 0x19
 995 0051 03       		.uleb128 0x3
 996 0052 0E       		.uleb128 0xe
 997 0053 3A       		.uleb128 0x3a
 998 0054 0B       		.uleb128 0xb
 999 0055 3B       		.uleb128 0x3b
 1000 0056 0B       		.uleb128 0xb
 1001 0057 11       		.uleb128 0x11
 1002 0058 01       		.uleb128 0x1
 1003 0059 12       		.uleb128 0x12
 1004 005a 06       		.uleb128 0x6
 1005 005b 40       		.uleb128 0x40
 1006 005c 18       		.uleb128 0x18
 1007 005d 9642     		.uleb128 0x2116
 1008 005f 19       		.uleb128 0x19
 1009 0060 01       		.uleb128 0x1
 1010 0061 13       		.uleb128 0x13
 1011 0062 00       		.byte	0
 1012 0063 00       		.byte	0
 1013 0064 07       		.uleb128 0x7
 1014 0065 34       		.uleb128 0x34
 1015 0066 00       		.byte	0
 1016 0067 03       		.uleb128 0x3
 1017 0068 08       		.uleb128 0x8
 1018 0069 3A       		.uleb128 0x3a
 1019 006a 0B       		.uleb128 0xb
 1020 006b 3B       		.uleb128 0x3b
 1021 006c 0B       		.uleb128 0xb
 1022 006d 49       		.uleb128 0x49
 1023 006e 13       		.uleb128 0x13
 1024 006f 02       		.uleb128 0x2
 1025 0070 18       		.uleb128 0x18
 1026 0071 00       		.byte	0
 1027 0072 00       		.byte	0
 1028 0073 08       		.uleb128 0x8
 1029 0074 2E       		.uleb128 0x2e
 1030 0075 01       		.byte	0x1
 1031 0076 3F       		.uleb128 0x3f
 1032 0077 19       		.uleb128 0x19
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 22


 1033 0078 03       		.uleb128 0x3
 1034 0079 0E       		.uleb128 0xe
 1035 007a 3A       		.uleb128 0x3a
 1036 007b 0B       		.uleb128 0xb
 1037 007c 3B       		.uleb128 0x3b
 1038 007d 0B       		.uleb128 0xb
 1039 007e 27       		.uleb128 0x27
 1040 007f 19       		.uleb128 0x19
 1041 0080 11       		.uleb128 0x11
 1042 0081 01       		.uleb128 0x1
 1043 0082 12       		.uleb128 0x12
 1044 0083 06       		.uleb128 0x6
 1045 0084 40       		.uleb128 0x40
 1046 0085 18       		.uleb128 0x18
 1047 0086 9642     		.uleb128 0x2116
 1048 0088 19       		.uleb128 0x19
 1049 0089 01       		.uleb128 0x1
 1050 008a 13       		.uleb128 0x13
 1051 008b 00       		.byte	0
 1052 008c 00       		.byte	0
 1053 008d 09       		.uleb128 0x9
 1054 008e 05       		.uleb128 0x5
 1055 008f 00       		.byte	0
 1056 0090 03       		.uleb128 0x3
 1057 0091 0E       		.uleb128 0xe
 1058 0092 3A       		.uleb128 0x3a
 1059 0093 0B       		.uleb128 0xb
 1060 0094 3B       		.uleb128 0x3b
 1061 0095 0B       		.uleb128 0xb
 1062 0096 49       		.uleb128 0x49
 1063 0097 13       		.uleb128 0x13
 1064 0098 02       		.uleb128 0x2
 1065 0099 18       		.uleb128 0x18
 1066 009a 00       		.byte	0
 1067 009b 00       		.byte	0
 1068 009c 0A       		.uleb128 0xa
 1069 009d 34       		.uleb128 0x34
 1070 009e 00       		.byte	0
 1071 009f 03       		.uleb128 0x3
 1072 00a0 0E       		.uleb128 0xe
 1073 00a1 3A       		.uleb128 0x3a
 1074 00a2 0B       		.uleb128 0xb
 1075 00a3 3B       		.uleb128 0x3b
 1076 00a4 0B       		.uleb128 0xb
 1077 00a5 49       		.uleb128 0x49
 1078 00a6 13       		.uleb128 0x13
 1079 00a7 02       		.uleb128 0x2
 1080 00a8 18       		.uleb128 0x18
 1081 00a9 00       		.byte	0
 1082 00aa 00       		.byte	0
 1083 00ab 0B       		.uleb128 0xb
 1084 00ac 2E       		.uleb128 0x2e
 1085 00ad 01       		.byte	0x1
 1086 00ae 3F       		.uleb128 0x3f
 1087 00af 19       		.uleb128 0x19
 1088 00b0 03       		.uleb128 0x3
 1089 00b1 0E       		.uleb128 0xe
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 23


 1090 00b2 3A       		.uleb128 0x3a
 1091 00b3 0B       		.uleb128 0xb
 1092 00b4 3B       		.uleb128 0x3b
 1093 00b5 0B       		.uleb128 0xb
 1094 00b6 27       		.uleb128 0x27
 1095 00b7 19       		.uleb128 0x19
 1096 00b8 49       		.uleb128 0x49
 1097 00b9 13       		.uleb128 0x13
 1098 00ba 11       		.uleb128 0x11
 1099 00bb 01       		.uleb128 0x1
 1100 00bc 12       		.uleb128 0x12
 1101 00bd 06       		.uleb128 0x6
 1102 00be 40       		.uleb128 0x40
 1103 00bf 18       		.uleb128 0x18
 1104 00c0 9742     		.uleb128 0x2117
 1105 00c2 19       		.uleb128 0x19
 1106 00c3 01       		.uleb128 0x1
 1107 00c4 13       		.uleb128 0x13
 1108 00c5 00       		.byte	0
 1109 00c6 00       		.byte	0
 1110 00c7 0C       		.uleb128 0xc
 1111 00c8 0F       		.uleb128 0xf
 1112 00c9 00       		.byte	0
 1113 00ca 0B       		.uleb128 0xb
 1114 00cb 0B       		.uleb128 0xb
 1115 00cc 49       		.uleb128 0x49
 1116 00cd 13       		.uleb128 0x13
 1117 00ce 00       		.byte	0
 1118 00cf 00       		.byte	0
 1119 00d0 0D       		.uleb128 0xd
 1120 00d1 34       		.uleb128 0x34
 1121 00d2 00       		.byte	0
 1122 00d3 03       		.uleb128 0x3
 1123 00d4 0E       		.uleb128 0xe
 1124 00d5 3A       		.uleb128 0x3a
 1125 00d6 0B       		.uleb128 0xb
 1126 00d7 3B       		.uleb128 0x3b
 1127 00d8 05       		.uleb128 0x5
 1128 00d9 49       		.uleb128 0x49
 1129 00da 13       		.uleb128 0x13
 1130 00db 3F       		.uleb128 0x3f
 1131 00dc 19       		.uleb128 0x19
 1132 00dd 3C       		.uleb128 0x3c
 1133 00de 19       		.uleb128 0x19
 1134 00df 00       		.byte	0
 1135 00e0 00       		.byte	0
 1136 00e1 0E       		.uleb128 0xe
 1137 00e2 35       		.uleb128 0x35
 1138 00e3 00       		.byte	0
 1139 00e4 49       		.uleb128 0x49
 1140 00e5 13       		.uleb128 0x13
 1141 00e6 00       		.byte	0
 1142 00e7 00       		.byte	0
 1143 00e8 0F       		.uleb128 0xf
 1144 00e9 01       		.uleb128 0x1
 1145 00ea 01       		.byte	0x1
 1146 00eb 49       		.uleb128 0x49
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 24


 1147 00ec 13       		.uleb128 0x13
 1148 00ed 01       		.uleb128 0x1
 1149 00ee 13       		.uleb128 0x13
 1150 00ef 00       		.byte	0
 1151 00f0 00       		.byte	0
 1152 00f1 10       		.uleb128 0x10
 1153 00f2 21       		.uleb128 0x21
 1154 00f3 00       		.byte	0
 1155 00f4 49       		.uleb128 0x49
 1156 00f5 13       		.uleb128 0x13
 1157 00f6 2F       		.uleb128 0x2f
 1158 00f7 0B       		.uleb128 0xb
 1159 00f8 00       		.byte	0
 1160 00f9 00       		.byte	0
 1161 00fa 11       		.uleb128 0x11
 1162 00fb 34       		.uleb128 0x34
 1163 00fc 00       		.byte	0
 1164 00fd 03       		.uleb128 0x3
 1165 00fe 0E       		.uleb128 0xe
 1166 00ff 3A       		.uleb128 0x3a
 1167 0100 0B       		.uleb128 0xb
 1168 0101 3B       		.uleb128 0x3b
 1169 0102 0B       		.uleb128 0xb
 1170 0103 49       		.uleb128 0x49
 1171 0104 13       		.uleb128 0x13
 1172 0105 3F       		.uleb128 0x3f
 1173 0106 19       		.uleb128 0x19
 1174 0107 02       		.uleb128 0x2
 1175 0108 18       		.uleb128 0x18
 1176 0109 00       		.byte	0
 1177 010a 00       		.byte	0
 1178 010b 00       		.byte	0
 1179              		.section	.debug_aranges,"",%progbits
 1180 0000 44000000 		.4byte	0x44
 1181 0004 0200     		.2byte	0x2
 1182 0006 00000000 		.4byte	.Ldebug_info0
 1183 000a 04       		.byte	0x4
 1184 000b 00       		.byte	0
 1185 000c 0000     		.2byte	0
 1186 000e 0000     		.2byte	0
 1187 0010 00000000 		.4byte	.LFB56
 1188 0014 14000000 		.4byte	.LFE56-.LFB56
 1189 0018 00000000 		.4byte	.LFB57
 1190 001c EC000000 		.4byte	.LFE57-.LFB57
 1191 0020 00000000 		.4byte	.LFB58
 1192 0024 3C000000 		.4byte	.LFE58-.LFB58
 1193 0028 00000000 		.4byte	.LFB59
 1194 002c 78000000 		.4byte	.LFE59-.LFB59
 1195 0030 00000000 		.4byte	.LFB60
 1196 0034 44000000 		.4byte	.LFE60-.LFB60
 1197 0038 00000000 		.4byte	.LFB61
 1198 003c 50010000 		.4byte	.LFE61-.LFB61
 1199 0040 00000000 		.4byte	0
 1200 0044 00000000 		.4byte	0
 1201              		.section	.debug_ranges,"",%progbits
 1202              	.Ldebug_ranges0:
 1203 0000 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 25


 1204 0004 14000000 		.4byte	.LFE56
 1205 0008 00000000 		.4byte	.LFB57
 1206 000c EC000000 		.4byte	.LFE57
 1207 0010 00000000 		.4byte	.LFB58
 1208 0014 3C000000 		.4byte	.LFE58
 1209 0018 00000000 		.4byte	.LFB59
 1210 001c 78000000 		.4byte	.LFE59
 1211 0020 00000000 		.4byte	.LFB60
 1212 0024 44000000 		.4byte	.LFE60
 1213 0028 00000000 		.4byte	.LFB61
 1214 002c 50010000 		.4byte	.LFE61
 1215 0030 00000000 		.4byte	0
 1216 0034 00000000 		.4byte	0
 1217              		.section	.debug_line,"",%progbits
 1218              	.Ldebug_line0:
 1219 0000 02020000 		.section	.debug_str,"MS",%progbits,1
 1219      02005301 
 1219      00000201 
 1219      FB0E0D00 
 1219      01010101 
 1220              	.LASF30:
 1221 0000 696E6974 		.ascii	"init_eeprom\000"
 1221      5F656570 
 1221      726F6D00 
 1222              	.LASF29:
 1223 000c 433A5C55 		.ascii	"C:\\Users\\plod1602\\Documents\\git\\module-gripper"
 1223      73657273 
 1223      5C706C6F 
 1223      64313630 
 1223      325C446F 
 1224 003a 2D70736F 		.ascii	"-psoc\\module-gripper-psoc.cydsn\000"
 1224      635C6D6F 
 1224      64756C65 
 1224      2D677269 
 1224      70706572 
 1225              	.LASF9:
 1226 005a 5F5F696E 		.ascii	"__int32_t\000"
 1226      7433325F 
 1226      7400
 1227              	.LASF27:
 1228 0064 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1228      4320342E 
 1228      392E3320 
 1228      32303135 
 1228      30333033 
 1229 0097 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1229      20726576 
 1229      6973696F 
 1229      6E203232 
 1229      31323230 
 1230 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1230      66756E63 
 1230      74696F6E 
 1230      2D736563 
 1230      74696F6E 
 1231              	.LASF32:
 1232 00f2 6765744D 		.ascii	"getMotorType\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 26


 1232      6F746F72 
 1232      54797065 
 1232      00
 1233              	.LASF21:
 1234 00ff 6D6F746F 		.ascii	"motorID\000"
 1234      72494400 
 1235              	.LASF14:
 1236 0107 666C6F61 		.ascii	"float\000"
 1236      7400
 1237              	.LASF1:
 1238 010d 756E7369 		.ascii	"unsigned char\000"
 1238      676E6564 
 1238      20636861 
 1238      7200
 1239              	.LASF13:
 1240 011b 696E7431 		.ascii	"int16\000"
 1240      3600
 1241              	.LASF5:
 1242 0121 6C6F6E67 		.ascii	"long unsigned int\000"
 1242      20756E73 
 1242      69676E65 
 1242      6420696E 
 1242      7400
 1243              	.LASF3:
 1244 0133 73686F72 		.ascii	"short unsigned int\000"
 1244      7420756E 
 1244      7369676E 
 1244      65642069 
 1244      6E7400
 1245              	.LASF24:
 1246 0146 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1246      52784275 
 1246      66666572 
 1246      00
 1247              	.LASF31:
 1248 0153 72656164 		.ascii	"readEeprom\000"
 1248      45657072 
 1248      6F6D00
 1249              	.LASF25:
 1250 015e 6D6F746F 		.ascii	"motorMargin\000"
 1250      724D6172 
 1250      67696E00 
 1251              	.LASF15:
 1252 016a 646F7562 		.ascii	"double\000"
 1252      6C6500
 1253              	.LASF2:
 1254 0171 73686F72 		.ascii	"short int\000"
 1254      7420696E 
 1254      7400
 1255              	.LASF23:
 1256 017b 7061636B 		.ascii	"packet\000"
 1256      657400
 1257              	.LASF12:
 1258 0182 75696E74 		.ascii	"uint16\000"
 1258      313600
 1259              	.LASF19:
 1260 0189 65726173 		.ascii	"eraseMotorType\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 27


 1260      654D6F74 
 1260      6F725479 
 1260      706500
 1261              	.LASF8:
 1262 0198 756E7369 		.ascii	"unsigned int\000"
 1262      676E6564 
 1262      20696E74 
 1262      00
 1263              	.LASF7:
 1264 01a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1264      206C6F6E 
 1264      6720756E 
 1264      7369676E 
 1264      65642069 
 1265              	.LASF10:
 1266 01bc 696E7433 		.ascii	"int32_t\000"
 1266      325F7400 
 1267              	.LASF17:
 1268 01c4 73697A65 		.ascii	"sizetype\000"
 1268      74797065 
 1268      00
 1269              	.LASF6:
 1270 01cd 6C6F6E67 		.ascii	"long long int\000"
 1270      206C6F6E 
 1270      6720696E 
 1270      7400
 1271              	.LASF26:
 1272 01db 6D6F746F 		.ascii	"motorType\000"
 1272      72547970 
 1272      6500
 1273              	.LASF16:
 1274 01e5 63686172 		.ascii	"char\000"
 1274      00
 1275              	.LASF18:
 1276 01ea 74797065 		.ascii	"type\000"
 1276      00
 1277              	.LASF11:
 1278 01ef 75696E74 		.ascii	"uint8\000"
 1278      3800
 1279              	.LASF22:
 1280 01f5 75706461 		.ascii	"updateAngleLimitData\000"
 1280      7465416E 
 1280      676C654C 
 1280      696D6974 
 1280      44617461 
 1281              	.LASF20:
 1282 020a 73617665 		.ascii	"saveMotorType\000"
 1282      4D6F746F 
 1282      72547970 
 1282      6500
 1283              	.LASF4:
 1284 0218 6C6F6E67 		.ascii	"long int\000"
 1284      20696E74 
 1284      00
 1285              	.LASF28:
 1286 0221 2E5C6772 		.ascii	".\\gripper_eeprom.c\000"
 1286      69707065 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccbnpRhm.s 			page 28


 1286      725F6565 
 1286      70726F6D 
 1286      2E6300
 1287              	.LASF0:
 1288 0234 7369676E 		.ascii	"signed char\000"
 1288      65642063 
 1288      68617200 
 1289              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
