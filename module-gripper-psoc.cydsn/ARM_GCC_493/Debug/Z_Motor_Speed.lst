ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Z_Motor_Speed.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Z_Motor_Speed_initVar
  19              		.bss
  20              		.type	Z_Motor_Speed_initVar, %object
  21              		.size	Z_Motor_Speed_initVar, 1
  22              	Z_Motor_Speed_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Z_Motor_Speed_Start,"ax",%progbits
  25              		.align	2
  26              		.global	Z_Motor_Speed_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	Z_Motor_Speed_Start, %function
  30              	Z_Motor_Speed_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\Z_Motor_Speed.c"
   1:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * File Name: Z_Motor_Speed.c
   3:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
   5:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Description:
   6:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  15:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Note:
  16:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  17:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  24:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #include "Z_Motor_Speed.h"
  25:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 2


  26:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #ifdef Z_Motor_Speed_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* Z_Motor_Speed_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  32:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** uint8 Z_Motor_Speed_initVar = 0u;
  33:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  34:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  35:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Function Name: Z_Motor_Speed_Start
  37:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  39:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Summary:
  40:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  44:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Parameters:
  45:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
  46:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  47:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Return:
  48:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
  49:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  50:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Global variables:
  51:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  Z_Motor_Speed_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  54:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** void Z_Motor_Speed_Start(void) 
  56:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     if(Z_Motor_Speed_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
  60:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	Z_Motor_Speed_Init
  61:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 3


  54              	.L2:
  62:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
  63:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     Z_Motor_Speed_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	Z_Motor_Speed_Enable
  64:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  65:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	Z_Motor_Speed_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	Z_Motor_Speed_Start, .-Z_Motor_Speed_Start
  66              		.section	.text.Z_Motor_Speed_Init,"ax",%progbits
  67              		.align	2
  68              		.global	Z_Motor_Speed_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	Z_Motor_Speed_Init, %function
  72              	Z_Motor_Speed_Init:
  73              	.LFB1:
  66:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  67:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  68:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Function Name: Z_Motor_Speed_Init
  70:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  72:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Summary:
  73:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  Z_Motor_Speed_Start().
  76:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  77:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Parameters:
  78:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
  79:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  80:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Return:
  81:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
  82:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
  83:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** void Z_Motor_Speed_Init(void) 
  85:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UsingFixedFunction || Z_Motor_Speed_UseControl)
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 4


  87:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UsingFixedFunction || Z_Motor_Speed_UseControl) */
  89:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  90:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if(!Z_Motor_Speed_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(Z_Motor_Speed_UseStatus)
  92:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             uint8 Z_Motor_Speed_interruptState;
  94:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UseStatus) */
  95:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (!Z_Motor_Speed_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
  97:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_CONTROL |= Z_Motor_Speed_CFG0_MODE;
 100:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if (Z_Motor_Speed_DeadBand2_4)
 101:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_CONTROL |= Z_Motor_Speed_CFG0_DB;
 102:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 104:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         ctrl = Z_Motor_Speed_CONTROL3 & ((uint8 )(~Z_Motor_Speed_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_CONTROL3 = ctrl | Z_Motor_Speed_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 107:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_RT1 &= ((uint8)(~Z_Motor_Speed_RT1_MASK));
 109:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_RT1 |= Z_Motor_Speed_SYNC;
 110:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 111:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_RT1 &= ((uint8)(~Z_Motor_Speed_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_RT1 |= Z_Motor_Speed_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 115:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #elif (Z_Motor_Speed_UseControl)
 116:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         ctrl = Z_Motor_Speed_CONTROL & ((uint8)(~Z_Motor_Speed_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 154B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 ((uint8)(~Z_Motor_Speed_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_CONTROL = ctrl | Z_Motor_Speed_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 124A     		ldr	r2, .L6
  94 0014 FB79     		ldrb	r3, [r7, #7]
  95 0016 43F00D03 		orr	r3, r3, #13
  96 001a DBB2     		uxtb	r3, r3
  97 001c 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                    Z_Motor_Speed_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 123:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (!Z_Motor_Speed_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if (Z_Motor_Speed_Resolution == 8)
 125:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_AUX_CONTROLDP0 |= (Z_Motor_Speed_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else /* (Z_Motor_Speed_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_AUX_CONTROLDP0 |= (Z_Motor_Speed_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 129 0
  99 001e 104A     		ldr	r2, .L6+4
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 5


 100 0020 0F4B     		ldr	r3, .L6+4
 101 0022 1B78     		ldrb	r3, [r3]
 102 0024 DBB2     		uxtb	r3, r3
 103 0026 43F00103 		orr	r3, r3, #1
 104 002a DBB2     		uxtb	r3, r3
 105 002c 1370     		strb	r3, [r2]
 130:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_AUX_CONTROLDP1 |= (Z_Motor_Speed_AUX_CTRL_FIFO0_CLR);
 106              		.loc 1 130 0
 107 002e 0D4A     		ldr	r2, .L6+8
 108 0030 0C4B     		ldr	r3, .L6+8
 109 0032 1B78     		ldrb	r3, [r3]
 110 0034 DBB2     		uxtb	r3, r3
 111 0036 43F00103 		orr	r3, r3, #1
 112 003a DBB2     		uxtb	r3, r3
 113 003c 1370     		strb	r3, [r2]
 131:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_Resolution == 8) */
 132:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 133:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_WriteCounter(Z_Motor_Speed_INIT_PERIOD_VALUE);
 114              		.loc 1 133 0
 115 003e 40F2DC50 		movw	r0, #1500
 116 0042 FFF7FEFF 		bl	Z_Motor_Speed_WriteCounter
 134:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (!Z_Motor_Speed_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 136:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     Z_Motor_Speed_WritePeriod(Z_Motor_Speed_INIT_PERIOD_VALUE);
 117              		.loc 1 136 0
 118 0046 40F2DC50 		movw	r0, #1500
 119 004a FFF7FEFF 		bl	Z_Motor_Speed_WritePeriod
 137:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 138:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if (Z_Motor_Speed_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_WriteCompare(Z_Motor_Speed_INIT_COMPARE_VALUE1);
 120              		.loc 1 139 0
 121 004e 40F2EE20 		movw	r0, #750
 122 0052 FFF7FEFF 		bl	Z_Motor_Speed_WriteCompare
 140:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 141:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_WriteCompare1(Z_Motor_Speed_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_WriteCompare2(Z_Motor_Speed_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 145:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if (Z_Motor_Speed_KillModeMinTime)
 146:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_WriteKillTime(Z_Motor_Speed_MinimumKillTime);
 147:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 149:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if (Z_Motor_Speed_DeadBandUsed)
 150:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_WriteDeadTime(Z_Motor_Speed_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 153:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UseStatus || Z_Motor_Speed_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_SetInterruptMode(Z_Motor_Speed_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UseStatus || Z_Motor_Speed_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 157:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_GLOBAL_ENABLE |= Z_Motor_Speed_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_CONTROL2 |= Z_Motor_Speed_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #else
 163:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(Z_Motor_Speed_UseStatus)
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 6


 164:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 165:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_STATUS_AUX_CTRL |= Z_Motor_Speed_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 171:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CyExitCriticalSection(Z_Motor_Speed_interruptState);
 173:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 174:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Clear the FIFO to enable the Z_Motor_Speed_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_ClearFIFO();
 177:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UseStatus) */
 178:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** }
 123              		.loc 1 179 0
 124 0056 0837     		adds	r7, r7, #8
 125              		.cfi_def_cfa_offset 8
 126 0058 BD46     		mov	sp, r7
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 005a 80BD     		pop	{r7, pc}
 130              	.L7:
 131              		.align	2
 132              	.L6:
 133 005c 77640040 		.word	1073767543
 134 0060 96640040 		.word	1073767574
 135 0064 97640040 		.word	1073767575
 136              		.cfi_endproc
 137              	.LFE1:
 138              		.size	Z_Motor_Speed_Init, .-Z_Motor_Speed_Init
 139              		.section	.text.Z_Motor_Speed_Enable,"ax",%progbits
 140              		.align	2
 141              		.global	Z_Motor_Speed_Enable
 142              		.thumb
 143              		.thumb_func
 144              		.type	Z_Motor_Speed_Enable, %function
 145              	Z_Motor_Speed_Enable:
 146              	.LFB2:
 180:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 181:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 182:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Function Name: Z_Motor_Speed_Enable
 184:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 186:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Summary:
 187:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 189:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Parameters:
 190:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
 191:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 192:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Return:
 193:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
 194:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 195:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  This works only if software enable mode is chosen
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 7


 197:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 198:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** void Z_Motor_Speed_Enable(void) 
 200:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** {
 147              		.loc 1 200 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              		.cfi_def_cfa_offset 4
 154              		.cfi_offset 7, -4
 155 0002 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_GLOBAL_ENABLE |= Z_Motor_Speed_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_GLOBAL_STBY_ENABLE |= Z_Motor_Speed_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 207:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UseControl || Z_Motor_Speed_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_CONTROL |= Z_Motor_Speed_CTRL_ENABLE;
 157              		.loc 1 209 0
 158 0004 054A     		ldr	r2, .L9
 159 0006 054B     		ldr	r3, .L9
 160 0008 1B78     		ldrb	r3, [r3]
 161 000a DBB2     		uxtb	r3, r3
 162 000c 63F07F03 		orn	r3, r3, #127
 163 0010 DBB2     		uxtb	r3, r3
 164 0012 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UseControl || Z_Motor_Speed_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** }
 165              		.loc 1 211 0
 166 0014 BD46     		mov	sp, r7
 167              		.cfi_def_cfa_register 13
 168              		@ sp needed
 169 0016 5DF8047B 		ldr	r7, [sp], #4
 170              		.cfi_restore 7
 171              		.cfi_def_cfa_offset 0
 172 001a 7047     		bx	lr
 173              	.L10:
 174              		.align	2
 175              	.L9:
 176 001c 77640040 		.word	1073767543
 177              		.cfi_endproc
 178              	.LFE2:
 179              		.size	Z_Motor_Speed_Enable, .-Z_Motor_Speed_Enable
 180              		.section	.text.Z_Motor_Speed_Stop,"ax",%progbits
 181              		.align	2
 182              		.global	Z_Motor_Speed_Stop
 183              		.thumb
 184              		.thumb_func
 185              		.type	Z_Motor_Speed_Stop, %function
 186              	Z_Motor_Speed_Stop:
 187              	.LFB3:
 212:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 8


 213:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 214:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Function Name: Z_Motor_Speed_Stop
 216:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 218:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Summary:
 219:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 222:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Parameters:
 223:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
 224:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 225:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Return:
 226:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
 227:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 228:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 232:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** void Z_Motor_Speed_Stop(void) 
 234:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** {
 188              		.loc 1 234 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0000 80B4     		push	{r7}
 194              		.cfi_def_cfa_offset 4
 195              		.cfi_offset 7, -4
 196 0002 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UseControl || Z_Motor_Speed_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_CONTROL &= ((uint8)(~Z_Motor_Speed_CTRL_ENABLE));
 198              		.loc 1 236 0
 199 0004 054A     		ldr	r2, .L12
 200 0006 054B     		ldr	r3, .L12
 201 0008 1B78     		ldrb	r3, [r3]
 202 000a DBB2     		uxtb	r3, r3
 203 000c 03F07F03 		and	r3, r3, #127
 204 0010 DBB2     		uxtb	r3, r3
 205 0012 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UseControl || Z_Motor_Speed_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 239:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_GLOBAL_ENABLE &= ((uint8)(~Z_Motor_Speed_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         Z_Motor_Speed_GLOBAL_STBY_ENABLE &= ((uint8)(~Z_Motor_Speed_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** }
 206              		.loc 1 244 0
 207 0014 BD46     		mov	sp, r7
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 0016 5DF8047B 		ldr	r7, [sp], #4
 211              		.cfi_restore 7
 212              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 9


 213 001a 7047     		bx	lr
 214              	.L13:
 215              		.align	2
 216              	.L12:
 217 001c 77640040 		.word	1073767543
 218              		.cfi_endproc
 219              	.LFE3:
 220              		.size	Z_Motor_Speed_Stop, .-Z_Motor_Speed_Stop
 221              		.section	.text.Z_Motor_Speed_SetCompareMode,"ax",%progbits
 222              		.align	2
 223              		.global	Z_Motor_Speed_SetCompareMode
 224              		.thumb
 225              		.thumb_func
 226              		.type	Z_Motor_Speed_SetCompareMode, %function
 227              	Z_Motor_Speed_SetCompareMode:
 228              	.LFB4:
 245:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 246:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (Z_Motor_Speed_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_CompareMode1SW)
 248:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 249:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 250:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Function Name: Z_Motor_Speed_SetCompareMode
 252:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 254:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Summary:
 255:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 258:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 262:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Return:
 263:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  None
 264:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 265:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         void Z_Motor_Speed_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         {
 229              		.loc 1 267 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 16
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234 0000 80B4     		push	{r7}
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 7, -4
 237 0002 85B0     		sub	sp, sp, #20
 238              		.cfi_def_cfa_offset 24
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 241 0006 0346     		mov	r3, r0
 242 0008 FB71     		strb	r3, [r7, #7]
 268:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #if(Z_Motor_Speed_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 270:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #if(0 != Z_Motor_Speed_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Z_Motor_Speed_CTRL_CMP
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 10


 272:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #else
 273:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #endif /* (0 != Z_Motor_Speed_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 276:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_CONTROL3 &= ((uint8)(~Z_Motor_Speed_CTRL_CMPMODE1_MASK)); /*Clear Exi
 277:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 279:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #elif (Z_Motor_Speed_UseControl)
 280:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 281:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #if(0 != Z_Motor_Speed_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Z_Motor_Speed_CTRL_CM
 283:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                                 Z_Motor_Speed_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #else
 285:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                     uint8 comparemode1masked = comparemode & Z_Motor_Speed_CTRL_CMPMODE1_MASK;
 243              		.loc 1 285 0
 244 000a FB79     		ldrb	r3, [r7, #7]
 245 000c 03F00703 		and	r3, r3, #7
 246 0010 FB73     		strb	r3, [r7, #15]
 286:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #endif /* (0 != Z_Motor_Speed_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 288:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #if(0 != Z_Motor_Speed_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Z_Motor_Speed_CTRL_CM
 247              		.loc 1 289 0
 248 0012 FB79     		ldrb	r3, [r7, #7]
 249 0014 DB00     		lsls	r3, r3, #3
 250 0016 DBB2     		uxtb	r3, r3
 251 0018 03F03803 		and	r3, r3, #56
 252 001c BB73     		strb	r3, [r7, #14]
 290:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                                Z_Motor_Speed_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #else
 292:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                     uint8 comparemode2masked = comparemode & Z_Motor_Speed_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 #endif /* (0 != Z_Motor_Speed_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 295:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_CONTROL &= ((uint8)(~(Z_Motor_Speed_CTRL_CMPMODE1_MASK |
 253              		.loc 1 296 0
 254 001e 0C4A     		ldr	r2, .L15
 255 0020 0B4B     		ldr	r3, .L15
 256 0022 1B78     		ldrb	r3, [r3]
 257 0024 DBB2     		uxtb	r3, r3
 258 0026 23F03F03 		bic	r3, r3, #63
 259 002a DBB2     		uxtb	r3, r3
 260 002c 1370     		strb	r3, [r2]
 297:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                             Z_Motor_Speed_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_CONTROL |= (comparemode1masked | comparemode2masked);
 261              		.loc 1 298 0
 262 002e 0848     		ldr	r0, .L15
 263 0030 074B     		ldr	r3, .L15
 264 0032 1B78     		ldrb	r3, [r3]
 265 0034 DAB2     		uxtb	r2, r3
 266 0036 F97B     		ldrb	r1, [r7, #15]
 267 0038 BB7B     		ldrb	r3, [r7, #14]
 268 003a 0B43     		orrs	r3, r3, r1
 269 003c DBB2     		uxtb	r3, r3
 270 003e 1343     		orrs	r3, r3, r2
 271 0040 DBB2     		uxtb	r3, r3
 272 0042 0370     		strb	r3, [r0]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 11


 299:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 300:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #else
 301:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         }
 273              		.loc 1 303 0
 274 0044 1437     		adds	r7, r7, #20
 275              		.cfi_def_cfa_offset 4
 276 0046 BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 0048 5DF8047B 		ldr	r7, [sp], #4
 280              		.cfi_restore 7
 281              		.cfi_def_cfa_offset 0
 282 004c 7047     		bx	lr
 283              	.L16:
 284 004e 00BF     		.align	2
 285              	.L15:
 286 0050 77640040 		.word	1073767543
 287              		.cfi_endproc
 288              	.LFE4:
 289              		.size	Z_Motor_Speed_SetCompareMode, .-Z_Motor_Speed_SetCompareMode
 290              		.section	.text.Z_Motor_Speed_WriteCounter,"ax",%progbits
 291              		.align	2
 292              		.global	Z_Motor_Speed_WriteCounter
 293              		.thumb
 294              		.thumb_func
 295              		.type	Z_Motor_Speed_WriteCounter, %function
 296              	Z_Motor_Speed_WriteCounter:
 297              	.LFB5:
 304:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* Z_Motor_Speed_CompareMode1SW */
 305:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 306:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 308:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_CompareMode1SW)
 309:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 310:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 311:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Function Name: Z_Motor_Speed_SetCompareMode1
 313:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 315:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Summary:
 316:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 318:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 322:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Return:
 323:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  None
 324:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 325:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         void Z_Motor_Speed_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         {
 328:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #if(0 != Z_Motor_Speed_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Z_Motor_Speed_CTRL_CMPMODE
 330:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                            Z_Motor_Speed_CTRL_CMPMODE1_MASK;
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 12


 331:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #else
 332:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 uint8 comparemodemasked = comparemode & Z_Motor_Speed_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #endif /* (0 != Z_Motor_Speed_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 335:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #if (Z_Motor_Speed_UseControl)
 336:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_CONTROL &= ((uint8)(~Z_Motor_Speed_CTRL_CMPMODE1_MASK)); /*Clear exis
 337:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #endif /* (Z_Motor_Speed_UseControl) */
 339:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         }
 340:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* Z_Motor_Speed_CompareMode1SW */
 341:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 342:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (Z_Motor_Speed_CompareMode2SW)
 343:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 344:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 345:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_SetCompareMode2
 347:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 349:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 350:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 352:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 356:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 357:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 358:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 359:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 362:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 363:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(0 != Z_Motor_Speed_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Z_Motor_Speed_CTRL_CMPMODE2_SH
 365:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                                  Z_Motor_Speed_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 367:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             uint8 comparemodemasked = comparemode & Z_Motor_Speed_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (0 != Z_Motor_Speed_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 370:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if (Z_Motor_Speed_UseControl)
 371:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_CONTROL &= ((uint8)(~Z_Motor_Speed_CTRL_CMPMODE2_MASK)); /*Clear existing
 372:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UseControl) */
 374:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 375:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /*Z_Motor_Speed_CompareMode2SW */
 376:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 377:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 379:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 380:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (!Z_Motor_Speed_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 382:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 383:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_WriteCounter
 385:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 387:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 13


 388:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 393:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 396:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 397:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 398:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 399:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 402:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                        
 405:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 298              		.loc 1 405 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 7, -4
 306 0002 83B0     		sub	sp, sp, #12
 307              		.cfi_def_cfa_offset 16
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 0346     		mov	r3, r0
 311 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         CY_SET_REG16(Z_Motor_Speed_COUNTER_LSB_PTR, counter);
 312              		.loc 1 406 0
 313 000a 044A     		ldr	r2, .L18
 314 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 315 000e 1380     		strh	r3, [r2]	@ movhi
 407:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 316              		.loc 1 407 0
 317 0010 0C37     		adds	r7, r7, #12
 318              		.cfi_def_cfa_offset 4
 319 0012 BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 0014 5DF8047B 		ldr	r7, [sp], #4
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 0018 7047     		bx	lr
 326              	.L19:
 327 001a 00BF     		.align	2
 328              	.L18:
 329 001c 0C680040 		.word	1073768460
 330              		.cfi_endproc
 331              	.LFE5:
 332              		.size	Z_Motor_Speed_WriteCounter, .-Z_Motor_Speed_WriteCounter
 333              		.section	.text.Z_Motor_Speed_ReadCounter,"ax",%progbits
 334              		.align	2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 14


 335              		.global	Z_Motor_Speed_ReadCounter
 336              		.thumb
 337              		.thumb_func
 338              		.type	Z_Motor_Speed_ReadCounter, %function
 339              	Z_Motor_Speed_ReadCounter:
 340              	.LFB6:
 408:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 409:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 410:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadCounter
 412:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 414:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 415:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 418:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 420:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 421:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 422:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 424:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint16 Z_Motor_Speed_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 341              		.loc 1 426 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****           (void)CY_GET_REG8(Z_Motor_Speed_COUNTERCAP_LSB_PTR_8BIT);
 351              		.loc 1 430 0
 352 0004 044B     		ldr	r3, .L22
 353 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 432:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return (CY_GET_REG16(Z_Motor_Speed_CAPTURE_LSB_PTR));
 354              		.loc 1 433 0
 355 0008 044B     		ldr	r3, .L22+4
 356 000a 1B88     		ldrh	r3, [r3]	@ movhi
 357 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 358              		.loc 1 434 0
 359 000e 1846     		mov	r0, r3
 360 0010 BD46     		mov	sp, r7
 361              		.cfi_def_cfa_register 13
 362              		@ sp needed
 363 0012 5DF8047B 		ldr	r7, [sp], #4
 364              		.cfi_restore 7
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 15


 365              		.cfi_def_cfa_offset 0
 366 0016 7047     		bx	lr
 367              	.L23:
 368              		.align	2
 369              	.L22:
 370 0018 16640040 		.word	1073767446
 371 001c AC680040 		.word	1073768620
 372              		.cfi_endproc
 373              	.LFE6:
 374              		.size	Z_Motor_Speed_ReadCounter, .-Z_Motor_Speed_ReadCounter
 375              		.section	.text.Z_Motor_Speed_WritePeriod,"ax",%progbits
 376              		.align	2
 377              		.global	Z_Motor_Speed_WritePeriod
 378              		.thumb
 379              		.thumb_func
 380              		.type	Z_Motor_Speed_WritePeriod, %function
 381              	Z_Motor_Speed_WritePeriod:
 382              	.LFB7:
 435:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 436:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if (Z_Motor_Speed_UseStatus)
 437:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 438:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 439:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Function Name: Z_Motor_Speed_ClearFIFO
 441:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 443:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Summary:
 444:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 446:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  None
 448:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 449:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         * Return:
 450:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *  None
 451:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *
 452:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         void Z_Motor_Speed_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         {
 455:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             while(0u != (Z_Motor_Speed_ReadStatusRegister() & Z_Motor_Speed_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             {
 457:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 (void)Z_Motor_Speed_ReadCapture();
 458:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             }
 459:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         }
 460:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 461:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* Z_Motor_Speed_UseStatus */
 462:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 463:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* !Z_Motor_Speed_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 465:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 466:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Function Name: Z_Motor_Speed_WritePeriod
 468:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 470:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Summary:
 471:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 16


 474:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Parameters:
 475:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 478:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Return:
 479:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
 480:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 481:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** void Z_Motor_Speed_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** {
 383              		.loc 1 483 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 83B0     		sub	sp, sp, #12
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 0346     		mov	r3, r0
 396 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if(Z_Motor_Speed_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         CY_SET_REG16(Z_Motor_Speed_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #else
 487:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         CY_SET_REG16(Z_Motor_Speed_PERIOD_LSB_PTR, period);
 397              		.loc 1 487 0
 398 000a 044A     		ldr	r2, .L25
 399 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 400 000e 1380     		strh	r3, [r2]	@ movhi
 488:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** }
 401              		.loc 1 489 0
 402 0010 0C37     		adds	r7, r7, #12
 403              		.cfi_def_cfa_offset 4
 404 0012 BD46     		mov	sp, r7
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 0014 5DF8047B 		ldr	r7, [sp], #4
 408              		.cfi_restore 7
 409              		.cfi_def_cfa_offset 0
 410 0018 7047     		bx	lr
 411              	.L26:
 412 001a 00BF     		.align	2
 413              	.L25:
 414 001c 8C680040 		.word	1073768588
 415              		.cfi_endproc
 416              	.LFE7:
 417              		.size	Z_Motor_Speed_WritePeriod, .-Z_Motor_Speed_WritePeriod
 418              		.section	.text.Z_Motor_Speed_WriteCompare,"ax",%progbits
 419              		.align	2
 420              		.global	Z_Motor_Speed_WriteCompare
 421              		.thumb
 422              		.thumb_func
 423              		.type	Z_Motor_Speed_WriteCompare, %function
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 17


 424              	Z_Motor_Speed_WriteCompare:
 425              	.LFB8:
 490:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 491:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (Z_Motor_Speed_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 493:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 494:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_WriteCompare
 496:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 498:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 499:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 505:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 508:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 509:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 510:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 511:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 515:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                        
 518:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 426              		.loc 1 518 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431 0000 80B4     		push	{r7}
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_def_cfa_register 7
 438 0006 0346     		mov	r3, r0
 439 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(Z_Motor_Speed_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CY_SET_REG16(Z_Motor_Speed_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 522:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CY_SET_REG16(Z_Motor_Speed_COMPARE1_LSB_PTR, compare);
 440              		.loc 1 522 0
 441 000a 044A     		ldr	r2, .L28
 442 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 443 000e 1380     		strh	r3, [r2]	@ movhi
 523:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 525:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if (Z_Motor_Speed_PWMMode == Z_Motor_Speed__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #if(Z_Motor_Speed_UsingFixedFunction)
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 18


 527:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 CY_SET_REG16(Z_Motor_Speed_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #else
 529:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 CY_SET_REG16(Z_Motor_Speed_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_PWMMode == Z_Motor_Speed__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 444              		.loc 1 532 0
 445 0010 0C37     		adds	r7, r7, #12
 446              		.cfi_def_cfa_offset 4
 447 0012 BD46     		mov	sp, r7
 448              		.cfi_def_cfa_register 13
 449              		@ sp needed
 450 0014 5DF8047B 		ldr	r7, [sp], #4
 451              		.cfi_restore 7
 452              		.cfi_def_cfa_offset 0
 453 0018 7047     		bx	lr
 454              	.L29:
 455 001a 00BF     		.align	2
 456              	.L28:
 457 001c 4C680040 		.word	1073768524
 458              		.cfi_endproc
 459              	.LFE8:
 460              		.size	Z_Motor_Speed_WriteCompare, .-Z_Motor_Speed_WriteCompare
 461              		.section	.text.Z_Motor_Speed_ReadControlRegister,"ax",%progbits
 462              		.align	2
 463              		.global	Z_Motor_Speed_ReadControlRegister
 464              		.thumb
 465              		.thumb_func
 466              		.type	Z_Motor_Speed_ReadControlRegister, %function
 467              	Z_Motor_Speed_ReadControlRegister:
 468              	.LFB9:
 533:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 534:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 535:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #else
 536:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 537:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 538:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_WriteCompare1
 540:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 542:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 543:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 548:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 551:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 552:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 553:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 554:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                         
 557:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 558:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(Z_Motor_Speed_UsingFixedFunction)
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 19


 559:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CY_SET_REG16(Z_Motor_Speed_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 561:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CY_SET_REG16(Z_Motor_Speed_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 564:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 565:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 566:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_WriteCompare2
 568:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 570:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 571:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  mode.
 576:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 577:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 580:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 581:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 582:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 583:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                         
 586:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 587:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(Z_Motor_Speed_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CY_SET_REG16(Z_Motor_Speed_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 590:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CY_SET_REG16(Z_Motor_Speed_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 593:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 595:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (Z_Motor_Speed_DeadBandUsed)
 596:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 597:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 598:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_WriteDeadTime
 600:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 602:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 603:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 605:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 608:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 609:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 610:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 611:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 614:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(!Z_Motor_Speed_DeadBand2_4)
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 20


 616:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             CY_SET_REG8(Z_Motor_Speed_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 618:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             Z_Motor_Speed_DEADBAND_COUNT &= ((uint8)(~Z_Motor_Speed_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 622:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #if(Z_Motor_Speed_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Z_Motor_Speed_DEADBAND_
 625:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                                     Z_Motor_Speed_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #else
 627:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 Z_Motor_Speed_DEADBAND_COUNT |= deadtime & Z_Motor_Speed_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #endif /* (Z_Motor_Speed_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 630:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (!Z_Motor_Speed_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 632:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 633:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 634:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadDeadTime
 636:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 638:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 639:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 641:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 643:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 644:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 645:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 647:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint8 Z_Motor_Speed_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 650:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(!Z_Motor_Speed_DeadBand2_4)
 652:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             return (CY_GET_REG8(Z_Motor_Speed_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 654:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 655:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #if(Z_Motor_Speed_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 return ((uint8)(((uint8)(Z_Motor_Speed_DEADBAND_COUNT & Z_Motor_Speed_DEADBAND_COUN
 658:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                                                                            Z_Motor_Speed_DEADBAND_C
 659:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #else
 660:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****                 return (Z_Motor_Speed_DEADBAND_COUNT & Z_Motor_Speed_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             #endif /* (Z_Motor_Speed_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (!Z_Motor_Speed_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 664:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 666:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (Z_Motor_Speed_UseStatus || Z_Motor_Speed_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 668:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 669:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_SetInterruptMode
 671:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 21


 673:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 674:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 677:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 680:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 681:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 682:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 683:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 686:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         CY_SET_REG8(Z_Motor_Speed_STATUS_MASK_PTR, interruptMode);
 687:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 688:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 689:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 690:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadStatusRegister
 692:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 694:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 695:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 697:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 699:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 700:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 701:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 710:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint8 Z_Motor_Speed_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 713:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return (CY_GET_REG8(Z_Motor_Speed_STATUS_PTR));
 714:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 715:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 716:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* (Z_Motor_Speed_UseStatus || Z_Motor_Speed_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 718:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 719:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (Z_Motor_Speed_UseControl)
 720:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 721:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 722:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadControlRegister
 724:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 726:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 727:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 22


 730:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 732:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 733:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 734:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 736:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint8 Z_Motor_Speed_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 469              		.loc 1 738 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 474 0000 80B4     		push	{r7}
 475              		.cfi_def_cfa_offset 4
 476              		.cfi_offset 7, -4
 477 0002 83B0     		sub	sp, sp, #12
 478              		.cfi_def_cfa_offset 16
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 741:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         result = CY_GET_REG8(Z_Motor_Speed_CONTROL_PTR);
 481              		.loc 1 741 0
 482 0006 054B     		ldr	r3, .L32
 483 0008 1B78     		ldrb	r3, [r3]
 484 000a FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return (result);
 485              		.loc 1 742 0
 486 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 487              		.loc 1 743 0
 488 000e 1846     		mov	r0, r3
 489 0010 0C37     		adds	r7, r7, #12
 490              		.cfi_def_cfa_offset 4
 491 0012 BD46     		mov	sp, r7
 492              		.cfi_def_cfa_register 13
 493              		@ sp needed
 494 0014 5DF8047B 		ldr	r7, [sp], #4
 495              		.cfi_restore 7
 496              		.cfi_def_cfa_offset 0
 497 0018 7047     		bx	lr
 498              	.L33:
 499 001a 00BF     		.align	2
 500              	.L32:
 501 001c 77640040 		.word	1073767543
 502              		.cfi_endproc
 503              	.LFE9:
 504              		.size	Z_Motor_Speed_ReadControlRegister, .-Z_Motor_Speed_ReadControlRegister
 505              		.section	.text.Z_Motor_Speed_WriteControlRegister,"ax",%progbits
 506              		.align	2
 507              		.global	Z_Motor_Speed_WriteControlRegister
 508              		.thumb
 509              		.thumb_func
 510              		.type	Z_Motor_Speed_WriteControlRegister, %function
 511              	Z_Motor_Speed_WriteControlRegister:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 23


 512              	.LFB10:
 744:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 745:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 746:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_WriteControlRegister
 748:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 750:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 751:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 754:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 761:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 762:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 763:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 764:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     void Z_Motor_Speed_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 513              		.loc 1 766 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 8
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518 0000 80B4     		push	{r7}
 519              		.cfi_def_cfa_offset 4
 520              		.cfi_offset 7, -4
 521 0002 83B0     		sub	sp, sp, #12
 522              		.cfi_def_cfa_offset 16
 523 0004 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 525 0006 0346     		mov	r3, r0
 526 0008 FB71     		strb	r3, [r7, #7]
 767:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         CY_SET_REG8(Z_Motor_Speed_CONTROL_PTR, control);
 527              		.loc 1 767 0
 528 000a 044A     		ldr	r2, .L35
 529 000c FB79     		ldrb	r3, [r7, #7]
 530 000e 1370     		strb	r3, [r2]
 768:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 531              		.loc 1 768 0
 532 0010 0C37     		adds	r7, r7, #12
 533              		.cfi_def_cfa_offset 4
 534 0012 BD46     		mov	sp, r7
 535              		.cfi_def_cfa_register 13
 536              		@ sp needed
 537 0014 5DF8047B 		ldr	r7, [sp], #4
 538              		.cfi_restore 7
 539              		.cfi_def_cfa_offset 0
 540 0018 7047     		bx	lr
 541              	.L36:
 542 001a 00BF     		.align	2
 543              	.L35:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 24


 544 001c 77640040 		.word	1073767543
 545              		.cfi_endproc
 546              	.LFE10:
 547              		.size	Z_Motor_Speed_WriteControlRegister, .-Z_Motor_Speed_WriteControlRegister
 548              		.section	.text.Z_Motor_Speed_ReadCapture,"ax",%progbits
 549              		.align	2
 550              		.global	Z_Motor_Speed_ReadCapture
 551              		.thumb
 552              		.thumb_func
 553              		.type	Z_Motor_Speed_ReadCapture, %function
 554              	Z_Motor_Speed_ReadCapture:
 555              	.LFB11:
 769:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 770:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* (Z_Motor_Speed_UseControl) */
 771:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 772:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 773:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (!Z_Motor_Speed_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 775:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 776:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadCapture
 778:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 780:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 781:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 783:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 785:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 786:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 787:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 789:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint16 Z_Motor_Speed_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 556              		.loc 1 791 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561 0000 80B4     		push	{r7}
 562              		.cfi_def_cfa_offset 4
 563              		.cfi_offset 7, -4
 564 0002 00AF     		add	r7, sp, #0
 565              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return (CY_GET_REG16(Z_Motor_Speed_CAPTURE_LSB_PTR));
 566              		.loc 1 792 0
 567 0004 034B     		ldr	r3, .L39
 568 0006 1B88     		ldrh	r3, [r3]	@ movhi
 569 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 570              		.loc 1 793 0
 571 000a 1846     		mov	r0, r3
 572 000c BD46     		mov	sp, r7
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 000e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 25


 576              		.cfi_restore 7
 577              		.cfi_def_cfa_offset 0
 578 0012 7047     		bx	lr
 579              	.L40:
 580              		.align	2
 581              	.L39:
 582 0014 AC680040 		.word	1073768620
 583              		.cfi_endproc
 584              	.LFE11:
 585              		.size	Z_Motor_Speed_ReadCapture, .-Z_Motor_Speed_ReadCapture
 586              		.section	.text.Z_Motor_Speed_ReadCompare,"ax",%progbits
 587              		.align	2
 588              		.global	Z_Motor_Speed_ReadCompare
 589              		.thumb
 590              		.thumb_func
 591              		.type	Z_Motor_Speed_ReadCompare, %function
 592              	Z_Motor_Speed_ReadCompare:
 593              	.LFB12:
 794:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 795:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* (!Z_Motor_Speed_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 797:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 798:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #if (Z_Motor_Speed_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 800:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 801:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadCompare
 803:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 805:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 806:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 809:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 811:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 812:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 813:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 815:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint16 Z_Motor_Speed_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 594              		.loc 1 817 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 7, -4
 602 0002 00AF     		add	r7, sp, #0
 603              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #if(Z_Motor_Speed_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             return ((uint16)CY_GET_REG16(Z_Motor_Speed_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #else
 821:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****             return (CY_GET_REG16(Z_Motor_Speed_COMPARE1_LSB_PTR));
 604              		.loc 1 821 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 26


 605 0004 034B     		ldr	r3, .L43
 606 0006 1B88     		ldrh	r3, [r3]	@ movhi
 607 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 608              		.loc 1 823 0
 609 000a 1846     		mov	r0, r3
 610 000c BD46     		mov	sp, r7
 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
 613 000e 5DF8047B 		ldr	r7, [sp], #4
 614              		.cfi_restore 7
 615              		.cfi_def_cfa_offset 0
 616 0012 7047     		bx	lr
 617              	.L44:
 618              		.align	2
 619              	.L43:
 620 0014 4C680040 		.word	1073768524
 621              		.cfi_endproc
 622              	.LFE12:
 623              		.size	Z_Motor_Speed_ReadCompare, .-Z_Motor_Speed_ReadCompare
 624              		.section	.text.Z_Motor_Speed_ReadPeriod,"ax",%progbits
 625              		.align	2
 626              		.global	Z_Motor_Speed_ReadPeriod
 627              		.thumb
 628              		.thumb_func
 629              		.type	Z_Motor_Speed_ReadPeriod, %function
 630              	Z_Motor_Speed_ReadPeriod:
 631              	.LFB13:
 824:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 825:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #else
 826:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 827:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 828:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadCompare1
 830:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 832:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 833:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 835:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 837:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 838:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 839:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 841:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint16 Z_Motor_Speed_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 844:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return (CY_GET_REG16(Z_Motor_Speed_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 846:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 847:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 848:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Function Name: Z_Motor_Speed_ReadCompare2
 850:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 27


 852:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Summary:
 853:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 855:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  None
 857:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 858:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     * Return:
 859:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *
 861:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     uint16 Z_Motor_Speed_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     {
 864:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return (CY_GET_REG16(Z_Motor_Speed_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     }
 866:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 867:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** #endif /* (Z_Motor_Speed_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 869:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** 
 870:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Function Name: Z_Motor_Speed_ReadPeriod
 872:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 874:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Summary:
 875:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 877:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Parameters:
 878:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  None
 879:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 880:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** * Return:
 881:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *
 883:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** uint16 Z_Motor_Speed_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** {
 632              		.loc 1 885 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637 0000 80B4     		push	{r7}
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 7, -4
 640 0002 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #if(Z_Motor_Speed_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return ((uint16)CY_GET_REG16(Z_Motor_Speed_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #else
 889:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****         return (CY_GET_REG16(Z_Motor_Speed_PERIOD_LSB_PTR));
 642              		.loc 1 889 0
 643 0004 034B     		ldr	r3, .L47
 644 0006 1B88     		ldrh	r3, [r3]	@ movhi
 645 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC5/Z_Motor_Speed.c ****     #endif /* (Z_Motor_Speed_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/Z_Motor_Speed.c **** }
 646              		.loc 1 891 0
 647 000a 1846     		mov	r0, r3
 648 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 28


 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 000e 5DF8047B 		ldr	r7, [sp], #4
 652              		.cfi_restore 7
 653              		.cfi_def_cfa_offset 0
 654 0012 7047     		bx	lr
 655              	.L48:
 656              		.align	2
 657              	.L47:
 658 0014 8C680040 		.word	1073768588
 659              		.cfi_endproc
 660              	.LFE13:
 661              		.size	Z_Motor_Speed_ReadPeriod, .-Z_Motor_Speed_ReadPeriod
 662              		.text
 663              	.Letext0:
 664              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 665              		.section	.debug_info,"",%progbits
 666              	.Ldebug_info0:
 667 0000 82020000 		.4byte	0x282
 668 0004 0400     		.2byte	0x4
 669 0006 00000000 		.4byte	.Ldebug_abbrev0
 670 000a 04       		.byte	0x4
 671 000b 01       		.uleb128 0x1
 672 000c 07010000 		.4byte	.LASF39
 673 0010 01       		.byte	0x1
 674 0011 CA000000 		.4byte	.LASF40
 675 0015 06000000 		.4byte	.LASF41
 676 0019 00000000 		.4byte	.Ldebug_ranges0+0
 677 001d 00000000 		.4byte	0
 678 0021 00000000 		.4byte	.Ldebug_line0
 679 0025 02       		.uleb128 0x2
 680 0026 01       		.byte	0x1
 681 0027 06       		.byte	0x6
 682 0028 69030000 		.4byte	.LASF0
 683 002c 02       		.uleb128 0x2
 684 002d 01       		.byte	0x1
 685 002e 08       		.byte	0x8
 686 002f 7C000000 		.4byte	.LASF1
 687 0033 02       		.uleb128 0x2
 688 0034 02       		.byte	0x2
 689 0035 05       		.byte	0x5
 690 0036 F4020000 		.4byte	.LASF2
 691 003a 02       		.uleb128 0x2
 692 003b 02       		.byte	0x2
 693 003c 07       		.byte	0x7
 694 003d 5B000000 		.4byte	.LASF3
 695 0041 02       		.uleb128 0x2
 696 0042 04       		.byte	0x4
 697 0043 05       		.byte	0x5
 698 0044 5B030000 		.4byte	.LASF4
 699 0048 02       		.uleb128 0x2
 700 0049 04       		.byte	0x4
 701 004a 07       		.byte	0x7
 702 004b 8F000000 		.4byte	.LASF5
 703 004f 02       		.uleb128 0x2
 704 0050 08       		.byte	0x8
 705 0051 05       		.byte	0x5
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 29


 706 0052 CD020000 		.4byte	.LASF6
 707 0056 02       		.uleb128 0x2
 708 0057 08       		.byte	0x8
 709 0058 07       		.byte	0x7
 710 0059 FE010000 		.4byte	.LASF7
 711 005d 03       		.uleb128 0x3
 712 005e 04       		.byte	0x4
 713 005f 05       		.byte	0x5
 714 0060 696E7400 		.ascii	"int\000"
 715 0064 02       		.uleb128 0x2
 716 0065 04       		.byte	0x4
 717 0066 07       		.byte	0x7
 718 0067 DE010000 		.4byte	.LASF8
 719 006b 04       		.uleb128 0x4
 720 006c A1000000 		.4byte	.LASF9
 721 0070 02       		.byte	0x2
 722 0071 A1       		.byte	0xa1
 723 0072 2C000000 		.4byte	0x2c
 724 0076 04       		.uleb128 0x4
 725 0077 C2010000 		.4byte	.LASF10
 726 007b 02       		.byte	0x2
 727 007c A2       		.byte	0xa2
 728 007d 3A000000 		.4byte	0x3a
 729 0081 02       		.uleb128 0x2
 730 0082 04       		.byte	0x4
 731 0083 04       		.byte	0x4
 732 0084 6E000000 		.4byte	.LASF11
 733 0088 02       		.uleb128 0x2
 734 0089 08       		.byte	0x8
 735 008a 04       		.byte	0x4
 736 008b 95010000 		.4byte	.LASF12
 737 008f 02       		.uleb128 0x2
 738 0090 01       		.byte	0x1
 739 0091 08       		.byte	0x8
 740 0092 64030000 		.4byte	.LASF13
 741 0096 05       		.uleb128 0x5
 742 0097 8A000000 		.4byte	.LASF14
 743 009b 02       		.byte	0x2
 744 009c 4B01     		.2byte	0x14b
 745 009e A2000000 		.4byte	0xa2
 746 00a2 06       		.uleb128 0x6
 747 00a3 6B000000 		.4byte	0x6b
 748 00a7 05       		.uleb128 0x5
 749 00a8 00000000 		.4byte	.LASF15
 750 00ac 02       		.byte	0x2
 751 00ad 4C01     		.2byte	0x14c
 752 00af B3000000 		.4byte	0xb3
 753 00b3 06       		.uleb128 0x6
 754 00b4 76000000 		.4byte	0x76
 755 00b8 02       		.uleb128 0x2
 756 00b9 04       		.byte	0x4
 757 00ba 07       		.byte	0x7
 758 00bb C4020000 		.4byte	.LASF16
 759 00bf 07       		.uleb128 0x7
 760 00c0 F3000000 		.4byte	.LASF17
 761 00c4 01       		.byte	0x1
 762 00c5 37       		.byte	0x37
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 30


 763 00c6 00000000 		.4byte	.LFB0
 764 00ca 20000000 		.4byte	.LFE0-.LFB0
 765 00ce 01       		.uleb128 0x1
 766 00cf 9C       		.byte	0x9c
 767 00d0 08       		.uleb128 0x8
 768 00d1 9C010000 		.4byte	.LASF20
 769 00d5 01       		.byte	0x1
 770 00d6 54       		.byte	0x54
 771 00d7 00000000 		.4byte	.LFB1
 772 00db 68000000 		.4byte	.LFE1-.LFB1
 773 00df 01       		.uleb128 0x1
 774 00e0 9C       		.byte	0x9c
 775 00e1 F4000000 		.4byte	0xf4
 776 00e5 09       		.uleb128 0x9
 777 00e6 11030000 		.4byte	.LASF22
 778 00ea 01       		.byte	0x1
 779 00eb 57       		.byte	0x57
 780 00ec 6B000000 		.4byte	0x6b
 781 00f0 02       		.uleb128 0x2
 782 00f1 91       		.byte	0x91
 783 00f2 77       		.sleb128 -9
 784 00f3 00       		.byte	0
 785 00f4 0A       		.uleb128 0xa
 786 00f5 C9010000 		.4byte	.LASF18
 787 00f9 01       		.byte	0x1
 788 00fa C7       		.byte	0xc7
 789 00fb 00000000 		.4byte	.LFB2
 790 00ff 20000000 		.4byte	.LFE2-.LFB2
 791 0103 01       		.uleb128 0x1
 792 0104 9C       		.byte	0x9c
 793 0105 0A       		.uleb128 0xa
 794 0106 FE020000 		.4byte	.LASF19
 795 010a 01       		.byte	0x1
 796 010b E9       		.byte	0xe9
 797 010c 00000000 		.4byte	.LFB3
 798 0110 20000000 		.4byte	.LFE3-.LFB3
 799 0114 01       		.uleb128 0x1
 800 0115 9C       		.byte	0x9c
 801 0116 0B       		.uleb128 0xb
 802 0117 85020000 		.4byte	.LASF21
 803 011b 01       		.byte	0x1
 804 011c 0A01     		.2byte	0x10a
 805 011e 00000000 		.4byte	.LFB4
 806 0122 54000000 		.4byte	.LFE4-.LFB4
 807 0126 01       		.uleb128 0x1
 808 0127 9C       		.byte	0x9c
 809 0128 5A010000 		.4byte	0x15a
 810 012c 0C       		.uleb128 0xc
 811 012d 2C030000 		.4byte	.LASF26
 812 0131 01       		.byte	0x1
 813 0132 0A01     		.2byte	0x10a
 814 0134 6B000000 		.4byte	0x6b
 815 0138 02       		.uleb128 0x2
 816 0139 91       		.byte	0x91
 817 013a 6F       		.sleb128 -17
 818 013b 0D       		.uleb128 0xd
 819 013c AF010000 		.4byte	.LASF23
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 31


 820 0140 01       		.byte	0x1
 821 0141 1D01     		.2byte	0x11d
 822 0143 6B000000 		.4byte	0x6b
 823 0147 02       		.uleb128 0x2
 824 0148 91       		.byte	0x91
 825 0149 77       		.sleb128 -9
 826 014a 0D       		.uleb128 0xd
 827 014b EB010000 		.4byte	.LASF24
 828 014f 01       		.byte	0x1
 829 0150 2101     		.2byte	0x121
 830 0152 6B000000 		.4byte	0x6b
 831 0156 02       		.uleb128 0x2
 832 0157 91       		.byte	0x91
 833 0158 76       		.sleb128 -10
 834 0159 00       		.byte	0
 835 015a 0B       		.uleb128 0xb
 836 015b 36020000 		.4byte	.LASF25
 837 015f 01       		.byte	0x1
 838 0160 9301     		.2byte	0x193
 839 0162 00000000 		.4byte	.LFB5
 840 0166 20000000 		.4byte	.LFE5-.LFB5
 841 016a 01       		.uleb128 0x1
 842 016b 9C       		.byte	0x9c
 843 016c 80010000 		.4byte	0x180
 844 0170 0C       		.uleb128 0xc
 845 0171 74000000 		.4byte	.LASF27
 846 0175 01       		.byte	0x1
 847 0176 9301     		.2byte	0x193
 848 0178 76000000 		.4byte	0x76
 849 017c 02       		.uleb128 0x2
 850 017d 91       		.byte	0x91
 851 017e 76       		.sleb128 -10
 852 017f 00       		.byte	0
 853 0180 0E       		.uleb128 0xe
 854 0181 7D030000 		.4byte	.LASF35
 855 0185 01       		.byte	0x1
 856 0186 A901     		.2byte	0x1a9
 857 0188 76000000 		.4byte	0x76
 858 018c 00000000 		.4byte	.LFB6
 859 0190 20000000 		.4byte	.LFE6-.LFB6
 860 0194 01       		.uleb128 0x1
 861 0195 9C       		.byte	0x9c
 862 0196 0B       		.uleb128 0xb
 863 0197 51020000 		.4byte	.LASF28
 864 019b 01       		.byte	0x1
 865 019c E201     		.2byte	0x1e2
 866 019e 00000000 		.4byte	.LFB7
 867 01a2 20000000 		.4byte	.LFE7-.LFB7
 868 01a6 01       		.uleb128 0x1
 869 01a7 9C       		.byte	0x9c
 870 01a8 BC010000 		.4byte	0x1bc
 871 01ac 0C       		.uleb128 0xc
 872 01ad 54000000 		.4byte	.LASF29
 873 01b1 01       		.byte	0x1
 874 01b2 E201     		.2byte	0x1e2
 875 01b4 76000000 		.4byte	0x76
 876 01b8 02       		.uleb128 0x2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 32


 877 01b9 91       		.byte	0x91
 878 01ba 76       		.sleb128 -10
 879 01bb 00       		.byte	0
 880 01bc 0B       		.uleb128 0xb
 881 01bd AF000000 		.4byte	.LASF30
 882 01c1 01       		.byte	0x1
 883 01c2 0402     		.2byte	0x204
 884 01c4 00000000 		.4byte	.LFB8
 885 01c8 20000000 		.4byte	.LFE8-.LFB8
 886 01cc 01       		.uleb128 0x1
 887 01cd 9C       		.byte	0x9c
 888 01ce E2010000 		.4byte	0x1e2
 889 01d2 0C       		.uleb128 0xc
 890 01d3 75030000 		.4byte	.LASF31
 891 01d7 01       		.byte	0x1
 892 01d8 0402     		.2byte	0x204
 893 01da 76000000 		.4byte	0x76
 894 01de 02       		.uleb128 0x2
 895 01df 91       		.byte	0x91
 896 01e0 76       		.sleb128 -10
 897 01e1 00       		.byte	0
 898 01e2 0F       		.uleb128 0xf
 899 01e3 A2020000 		.4byte	.LASF42
 900 01e7 01       		.byte	0x1
 901 01e8 E102     		.2byte	0x2e1
 902 01ea 6B000000 		.4byte	0x6b
 903 01ee 00000000 		.4byte	.LFB9
 904 01f2 20000000 		.4byte	.LFE9-.LFB9
 905 01f6 01       		.uleb128 0x1
 906 01f7 9C       		.byte	0x9c
 907 01f8 0C020000 		.4byte	0x20c
 908 01fc 0D       		.uleb128 0xd
 909 01fd 2F020000 		.4byte	.LASF32
 910 0201 01       		.byte	0x1
 911 0202 E302     		.2byte	0x2e3
 912 0204 6B000000 		.4byte	0x6b
 913 0208 02       		.uleb128 0x2
 914 0209 91       		.byte	0x91
 915 020a 77       		.sleb128 -9
 916 020b 00       		.byte	0
 917 020c 0B       		.uleb128 0xb
 918 020d 38030000 		.4byte	.LASF33
 919 0211 01       		.byte	0x1
 920 0212 FD02     		.2byte	0x2fd
 921 0214 00000000 		.4byte	.LFB10
 922 0218 20000000 		.4byte	.LFE10-.LFB10
 923 021c 01       		.uleb128 0x1
 924 021d 9C       		.byte	0x9c
 925 021e 32020000 		.4byte	0x232
 926 0222 0C       		.uleb128 0xc
 927 0223 A7000000 		.4byte	.LASF34
 928 0227 01       		.byte	0x1
 929 0228 FD02     		.2byte	0x2fd
 930 022a 6B000000 		.4byte	0x6b
 931 022e 02       		.uleb128 0x2
 932 022f 91       		.byte	0x91
 933 0230 77       		.sleb128 -9
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 33


 934 0231 00       		.byte	0
 935 0232 0E       		.uleb128 0xe
 936 0233 6B020000 		.4byte	.LASF36
 937 0237 01       		.byte	0x1
 938 0238 1603     		.2byte	0x316
 939 023a 76000000 		.4byte	0x76
 940 023e 00000000 		.4byte	.LFB11
 941 0242 18000000 		.4byte	.LFE11-.LFB11
 942 0246 01       		.uleb128 0x1
 943 0247 9C       		.byte	0x9c
 944 0248 0E       		.uleb128 0xe
 945 0249 15020000 		.4byte	.LASF37
 946 024d 01       		.byte	0x1
 947 024e 3003     		.2byte	0x330
 948 0250 76000000 		.4byte	0x76
 949 0254 00000000 		.4byte	.LFB12
 950 0258 18000000 		.4byte	.LFE12-.LFB12
 951 025c 01       		.uleb128 0x1
 952 025d 9C       		.byte	0x9c
 953 025e 0E       		.uleb128 0xe
 954 025f DB020000 		.4byte	.LASF38
 955 0263 01       		.byte	0x1
 956 0264 7403     		.2byte	0x374
 957 0266 76000000 		.4byte	0x76
 958 026a 00000000 		.4byte	.LFB13
 959 026e 18000000 		.4byte	.LFE13-.LFB13
 960 0272 01       		.uleb128 0x1
 961 0273 9C       		.byte	0x9c
 962 0274 10       		.uleb128 0x10
 963 0275 16030000 		.4byte	.LASF43
 964 0279 01       		.byte	0x1
 965 027a 20       		.byte	0x20
 966 027b 6B000000 		.4byte	0x6b
 967 027f 05       		.uleb128 0x5
 968 0280 03       		.byte	0x3
 969 0281 00000000 		.4byte	Z_Motor_Speed_initVar
 970 0285 00       		.byte	0
 971              		.section	.debug_abbrev,"",%progbits
 972              	.Ldebug_abbrev0:
 973 0000 01       		.uleb128 0x1
 974 0001 11       		.uleb128 0x11
 975 0002 01       		.byte	0x1
 976 0003 25       		.uleb128 0x25
 977 0004 0E       		.uleb128 0xe
 978 0005 13       		.uleb128 0x13
 979 0006 0B       		.uleb128 0xb
 980 0007 03       		.uleb128 0x3
 981 0008 0E       		.uleb128 0xe
 982 0009 1B       		.uleb128 0x1b
 983 000a 0E       		.uleb128 0xe
 984 000b 55       		.uleb128 0x55
 985 000c 17       		.uleb128 0x17
 986 000d 11       		.uleb128 0x11
 987 000e 01       		.uleb128 0x1
 988 000f 10       		.uleb128 0x10
 989 0010 17       		.uleb128 0x17
 990 0011 00       		.byte	0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 34


 991 0012 00       		.byte	0
 992 0013 02       		.uleb128 0x2
 993 0014 24       		.uleb128 0x24
 994 0015 00       		.byte	0
 995 0016 0B       		.uleb128 0xb
 996 0017 0B       		.uleb128 0xb
 997 0018 3E       		.uleb128 0x3e
 998 0019 0B       		.uleb128 0xb
 999 001a 03       		.uleb128 0x3
 1000 001b 0E       		.uleb128 0xe
 1001 001c 00       		.byte	0
 1002 001d 00       		.byte	0
 1003 001e 03       		.uleb128 0x3
 1004 001f 24       		.uleb128 0x24
 1005 0020 00       		.byte	0
 1006 0021 0B       		.uleb128 0xb
 1007 0022 0B       		.uleb128 0xb
 1008 0023 3E       		.uleb128 0x3e
 1009 0024 0B       		.uleb128 0xb
 1010 0025 03       		.uleb128 0x3
 1011 0026 08       		.uleb128 0x8
 1012 0027 00       		.byte	0
 1013 0028 00       		.byte	0
 1014 0029 04       		.uleb128 0x4
 1015 002a 16       		.uleb128 0x16
 1016 002b 00       		.byte	0
 1017 002c 03       		.uleb128 0x3
 1018 002d 0E       		.uleb128 0xe
 1019 002e 3A       		.uleb128 0x3a
 1020 002f 0B       		.uleb128 0xb
 1021 0030 3B       		.uleb128 0x3b
 1022 0031 0B       		.uleb128 0xb
 1023 0032 49       		.uleb128 0x49
 1024 0033 13       		.uleb128 0x13
 1025 0034 00       		.byte	0
 1026 0035 00       		.byte	0
 1027 0036 05       		.uleb128 0x5
 1028 0037 16       		.uleb128 0x16
 1029 0038 00       		.byte	0
 1030 0039 03       		.uleb128 0x3
 1031 003a 0E       		.uleb128 0xe
 1032 003b 3A       		.uleb128 0x3a
 1033 003c 0B       		.uleb128 0xb
 1034 003d 3B       		.uleb128 0x3b
 1035 003e 05       		.uleb128 0x5
 1036 003f 49       		.uleb128 0x49
 1037 0040 13       		.uleb128 0x13
 1038 0041 00       		.byte	0
 1039 0042 00       		.byte	0
 1040 0043 06       		.uleb128 0x6
 1041 0044 35       		.uleb128 0x35
 1042 0045 00       		.byte	0
 1043 0046 49       		.uleb128 0x49
 1044 0047 13       		.uleb128 0x13
 1045 0048 00       		.byte	0
 1046 0049 00       		.byte	0
 1047 004a 07       		.uleb128 0x7
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 35


 1048 004b 2E       		.uleb128 0x2e
 1049 004c 00       		.byte	0
 1050 004d 3F       		.uleb128 0x3f
 1051 004e 19       		.uleb128 0x19
 1052 004f 03       		.uleb128 0x3
 1053 0050 0E       		.uleb128 0xe
 1054 0051 3A       		.uleb128 0x3a
 1055 0052 0B       		.uleb128 0xb
 1056 0053 3B       		.uleb128 0x3b
 1057 0054 0B       		.uleb128 0xb
 1058 0055 27       		.uleb128 0x27
 1059 0056 19       		.uleb128 0x19
 1060 0057 11       		.uleb128 0x11
 1061 0058 01       		.uleb128 0x1
 1062 0059 12       		.uleb128 0x12
 1063 005a 06       		.uleb128 0x6
 1064 005b 40       		.uleb128 0x40
 1065 005c 18       		.uleb128 0x18
 1066 005d 9642     		.uleb128 0x2116
 1067 005f 19       		.uleb128 0x19
 1068 0060 00       		.byte	0
 1069 0061 00       		.byte	0
 1070 0062 08       		.uleb128 0x8
 1071 0063 2E       		.uleb128 0x2e
 1072 0064 01       		.byte	0x1
 1073 0065 3F       		.uleb128 0x3f
 1074 0066 19       		.uleb128 0x19
 1075 0067 03       		.uleb128 0x3
 1076 0068 0E       		.uleb128 0xe
 1077 0069 3A       		.uleb128 0x3a
 1078 006a 0B       		.uleb128 0xb
 1079 006b 3B       		.uleb128 0x3b
 1080 006c 0B       		.uleb128 0xb
 1081 006d 27       		.uleb128 0x27
 1082 006e 19       		.uleb128 0x19
 1083 006f 11       		.uleb128 0x11
 1084 0070 01       		.uleb128 0x1
 1085 0071 12       		.uleb128 0x12
 1086 0072 06       		.uleb128 0x6
 1087 0073 40       		.uleb128 0x40
 1088 0074 18       		.uleb128 0x18
 1089 0075 9642     		.uleb128 0x2116
 1090 0077 19       		.uleb128 0x19
 1091 0078 01       		.uleb128 0x1
 1092 0079 13       		.uleb128 0x13
 1093 007a 00       		.byte	0
 1094 007b 00       		.byte	0
 1095 007c 09       		.uleb128 0x9
 1096 007d 34       		.uleb128 0x34
 1097 007e 00       		.byte	0
 1098 007f 03       		.uleb128 0x3
 1099 0080 0E       		.uleb128 0xe
 1100 0081 3A       		.uleb128 0x3a
 1101 0082 0B       		.uleb128 0xb
 1102 0083 3B       		.uleb128 0x3b
 1103 0084 0B       		.uleb128 0xb
 1104 0085 49       		.uleb128 0x49
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 36


 1105 0086 13       		.uleb128 0x13
 1106 0087 02       		.uleb128 0x2
 1107 0088 18       		.uleb128 0x18
 1108 0089 00       		.byte	0
 1109 008a 00       		.byte	0
 1110 008b 0A       		.uleb128 0xa
 1111 008c 2E       		.uleb128 0x2e
 1112 008d 00       		.byte	0
 1113 008e 3F       		.uleb128 0x3f
 1114 008f 19       		.uleb128 0x19
 1115 0090 03       		.uleb128 0x3
 1116 0091 0E       		.uleb128 0xe
 1117 0092 3A       		.uleb128 0x3a
 1118 0093 0B       		.uleb128 0xb
 1119 0094 3B       		.uleb128 0x3b
 1120 0095 0B       		.uleb128 0xb
 1121 0096 27       		.uleb128 0x27
 1122 0097 19       		.uleb128 0x19
 1123 0098 11       		.uleb128 0x11
 1124 0099 01       		.uleb128 0x1
 1125 009a 12       		.uleb128 0x12
 1126 009b 06       		.uleb128 0x6
 1127 009c 40       		.uleb128 0x40
 1128 009d 18       		.uleb128 0x18
 1129 009e 9742     		.uleb128 0x2117
 1130 00a0 19       		.uleb128 0x19
 1131 00a1 00       		.byte	0
 1132 00a2 00       		.byte	0
 1133 00a3 0B       		.uleb128 0xb
 1134 00a4 2E       		.uleb128 0x2e
 1135 00a5 01       		.byte	0x1
 1136 00a6 3F       		.uleb128 0x3f
 1137 00a7 19       		.uleb128 0x19
 1138 00a8 03       		.uleb128 0x3
 1139 00a9 0E       		.uleb128 0xe
 1140 00aa 3A       		.uleb128 0x3a
 1141 00ab 0B       		.uleb128 0xb
 1142 00ac 3B       		.uleb128 0x3b
 1143 00ad 05       		.uleb128 0x5
 1144 00ae 27       		.uleb128 0x27
 1145 00af 19       		.uleb128 0x19
 1146 00b0 11       		.uleb128 0x11
 1147 00b1 01       		.uleb128 0x1
 1148 00b2 12       		.uleb128 0x12
 1149 00b3 06       		.uleb128 0x6
 1150 00b4 40       		.uleb128 0x40
 1151 00b5 18       		.uleb128 0x18
 1152 00b6 9742     		.uleb128 0x2117
 1153 00b8 19       		.uleb128 0x19
 1154 00b9 01       		.uleb128 0x1
 1155 00ba 13       		.uleb128 0x13
 1156 00bb 00       		.byte	0
 1157 00bc 00       		.byte	0
 1158 00bd 0C       		.uleb128 0xc
 1159 00be 05       		.uleb128 0x5
 1160 00bf 00       		.byte	0
 1161 00c0 03       		.uleb128 0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 37


 1162 00c1 0E       		.uleb128 0xe
 1163 00c2 3A       		.uleb128 0x3a
 1164 00c3 0B       		.uleb128 0xb
 1165 00c4 3B       		.uleb128 0x3b
 1166 00c5 05       		.uleb128 0x5
 1167 00c6 49       		.uleb128 0x49
 1168 00c7 13       		.uleb128 0x13
 1169 00c8 02       		.uleb128 0x2
 1170 00c9 18       		.uleb128 0x18
 1171 00ca 00       		.byte	0
 1172 00cb 00       		.byte	0
 1173 00cc 0D       		.uleb128 0xd
 1174 00cd 34       		.uleb128 0x34
 1175 00ce 00       		.byte	0
 1176 00cf 03       		.uleb128 0x3
 1177 00d0 0E       		.uleb128 0xe
 1178 00d1 3A       		.uleb128 0x3a
 1179 00d2 0B       		.uleb128 0xb
 1180 00d3 3B       		.uleb128 0x3b
 1181 00d4 05       		.uleb128 0x5
 1182 00d5 49       		.uleb128 0x49
 1183 00d6 13       		.uleb128 0x13
 1184 00d7 02       		.uleb128 0x2
 1185 00d8 18       		.uleb128 0x18
 1186 00d9 00       		.byte	0
 1187 00da 00       		.byte	0
 1188 00db 0E       		.uleb128 0xe
 1189 00dc 2E       		.uleb128 0x2e
 1190 00dd 00       		.byte	0
 1191 00de 3F       		.uleb128 0x3f
 1192 00df 19       		.uleb128 0x19
 1193 00e0 03       		.uleb128 0x3
 1194 00e1 0E       		.uleb128 0xe
 1195 00e2 3A       		.uleb128 0x3a
 1196 00e3 0B       		.uleb128 0xb
 1197 00e4 3B       		.uleb128 0x3b
 1198 00e5 05       		.uleb128 0x5
 1199 00e6 27       		.uleb128 0x27
 1200 00e7 19       		.uleb128 0x19
 1201 00e8 49       		.uleb128 0x49
 1202 00e9 13       		.uleb128 0x13
 1203 00ea 11       		.uleb128 0x11
 1204 00eb 01       		.uleb128 0x1
 1205 00ec 12       		.uleb128 0x12
 1206 00ed 06       		.uleb128 0x6
 1207 00ee 40       		.uleb128 0x40
 1208 00ef 18       		.uleb128 0x18
 1209 00f0 9742     		.uleb128 0x2117
 1210 00f2 19       		.uleb128 0x19
 1211 00f3 00       		.byte	0
 1212 00f4 00       		.byte	0
 1213 00f5 0F       		.uleb128 0xf
 1214 00f6 2E       		.uleb128 0x2e
 1215 00f7 01       		.byte	0x1
 1216 00f8 3F       		.uleb128 0x3f
 1217 00f9 19       		.uleb128 0x19
 1218 00fa 03       		.uleb128 0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 38


 1219 00fb 0E       		.uleb128 0xe
 1220 00fc 3A       		.uleb128 0x3a
 1221 00fd 0B       		.uleb128 0xb
 1222 00fe 3B       		.uleb128 0x3b
 1223 00ff 05       		.uleb128 0x5
 1224 0100 27       		.uleb128 0x27
 1225 0101 19       		.uleb128 0x19
 1226 0102 49       		.uleb128 0x49
 1227 0103 13       		.uleb128 0x13
 1228 0104 11       		.uleb128 0x11
 1229 0105 01       		.uleb128 0x1
 1230 0106 12       		.uleb128 0x12
 1231 0107 06       		.uleb128 0x6
 1232 0108 40       		.uleb128 0x40
 1233 0109 18       		.uleb128 0x18
 1234 010a 9742     		.uleb128 0x2117
 1235 010c 19       		.uleb128 0x19
 1236 010d 01       		.uleb128 0x1
 1237 010e 13       		.uleb128 0x13
 1238 010f 00       		.byte	0
 1239 0110 00       		.byte	0
 1240 0111 10       		.uleb128 0x10
 1241 0112 34       		.uleb128 0x34
 1242 0113 00       		.byte	0
 1243 0114 03       		.uleb128 0x3
 1244 0115 0E       		.uleb128 0xe
 1245 0116 3A       		.uleb128 0x3a
 1246 0117 0B       		.uleb128 0xb
 1247 0118 3B       		.uleb128 0x3b
 1248 0119 0B       		.uleb128 0xb
 1249 011a 49       		.uleb128 0x49
 1250 011b 13       		.uleb128 0x13
 1251 011c 3F       		.uleb128 0x3f
 1252 011d 19       		.uleb128 0x19
 1253 011e 02       		.uleb128 0x2
 1254 011f 18       		.uleb128 0x18
 1255 0120 00       		.byte	0
 1256 0121 00       		.byte	0
 1257 0122 00       		.byte	0
 1258              		.section	.debug_aranges,"",%progbits
 1259 0000 84000000 		.4byte	0x84
 1260 0004 0200     		.2byte	0x2
 1261 0006 00000000 		.4byte	.Ldebug_info0
 1262 000a 04       		.byte	0x4
 1263 000b 00       		.byte	0
 1264 000c 0000     		.2byte	0
 1265 000e 0000     		.2byte	0
 1266 0010 00000000 		.4byte	.LFB0
 1267 0014 20000000 		.4byte	.LFE0-.LFB0
 1268 0018 00000000 		.4byte	.LFB1
 1269 001c 68000000 		.4byte	.LFE1-.LFB1
 1270 0020 00000000 		.4byte	.LFB2
 1271 0024 20000000 		.4byte	.LFE2-.LFB2
 1272 0028 00000000 		.4byte	.LFB3
 1273 002c 20000000 		.4byte	.LFE3-.LFB3
 1274 0030 00000000 		.4byte	.LFB4
 1275 0034 54000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 39


 1276 0038 00000000 		.4byte	.LFB5
 1277 003c 20000000 		.4byte	.LFE5-.LFB5
 1278 0040 00000000 		.4byte	.LFB6
 1279 0044 20000000 		.4byte	.LFE6-.LFB6
 1280 0048 00000000 		.4byte	.LFB7
 1281 004c 20000000 		.4byte	.LFE7-.LFB7
 1282 0050 00000000 		.4byte	.LFB8
 1283 0054 20000000 		.4byte	.LFE8-.LFB8
 1284 0058 00000000 		.4byte	.LFB9
 1285 005c 20000000 		.4byte	.LFE9-.LFB9
 1286 0060 00000000 		.4byte	.LFB10
 1287 0064 20000000 		.4byte	.LFE10-.LFB10
 1288 0068 00000000 		.4byte	.LFB11
 1289 006c 18000000 		.4byte	.LFE11-.LFB11
 1290 0070 00000000 		.4byte	.LFB12
 1291 0074 18000000 		.4byte	.LFE12-.LFB12
 1292 0078 00000000 		.4byte	.LFB13
 1293 007c 18000000 		.4byte	.LFE13-.LFB13
 1294 0080 00000000 		.4byte	0
 1295 0084 00000000 		.4byte	0
 1296              		.section	.debug_ranges,"",%progbits
 1297              	.Ldebug_ranges0:
 1298 0000 00000000 		.4byte	.LFB0
 1299 0004 20000000 		.4byte	.LFE0
 1300 0008 00000000 		.4byte	.LFB1
 1301 000c 68000000 		.4byte	.LFE1
 1302 0010 00000000 		.4byte	.LFB2
 1303 0014 20000000 		.4byte	.LFE2
 1304 0018 00000000 		.4byte	.LFB3
 1305 001c 20000000 		.4byte	.LFE3
 1306 0020 00000000 		.4byte	.LFB4
 1307 0024 54000000 		.4byte	.LFE4
 1308 0028 00000000 		.4byte	.LFB5
 1309 002c 20000000 		.4byte	.LFE5
 1310 0030 00000000 		.4byte	.LFB6
 1311 0034 20000000 		.4byte	.LFE6
 1312 0038 00000000 		.4byte	.LFB7
 1313 003c 20000000 		.4byte	.LFE7
 1314 0040 00000000 		.4byte	.LFB8
 1315 0044 20000000 		.4byte	.LFE8
 1316 0048 00000000 		.4byte	.LFB9
 1317 004c 20000000 		.4byte	.LFE9
 1318 0050 00000000 		.4byte	.LFB10
 1319 0054 20000000 		.4byte	.LFE10
 1320 0058 00000000 		.4byte	.LFB11
 1321 005c 18000000 		.4byte	.LFE11
 1322 0060 00000000 		.4byte	.LFB12
 1323 0064 18000000 		.4byte	.LFE12
 1324 0068 00000000 		.4byte	.LFB13
 1325 006c 18000000 		.4byte	.LFE13
 1326 0070 00000000 		.4byte	0
 1327 0074 00000000 		.4byte	0
 1328              		.section	.debug_line,"",%progbits
 1329              	.Ldebug_line0:
 1330 0000 67010000 		.section	.debug_str,"MS",%progbits,1
 1330      02004C00 
 1330      00000201 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 40


 1330      FB0E0D00 
 1330      01010101 
 1331              	.LASF15:
 1332 0000 72656731 		.ascii	"reg16\000"
 1332      3600
 1333              	.LASF41:
 1334 0006 433A5C55 		.ascii	"C:\\Users\\plod1602\\Documents\\git\\module-gripper"
 1334      73657273 
 1334      5C706C6F 
 1334      64313630 
 1334      325C446F 
 1335 0034 2D70736F 		.ascii	"-psoc\\module-gripper-psoc.cydsn\000"
 1335      635C6D6F 
 1335      64756C65 
 1335      2D677269 
 1335      70706572 
 1336              	.LASF29:
 1337 0054 70657269 		.ascii	"period\000"
 1337      6F6400
 1338              	.LASF3:
 1339 005b 73686F72 		.ascii	"short unsigned int\000"
 1339      7420756E 
 1339      7369676E 
 1339      65642069 
 1339      6E7400
 1340              	.LASF11:
 1341 006e 666C6F61 		.ascii	"float\000"
 1341      7400
 1342              	.LASF27:
 1343 0074 636F756E 		.ascii	"counter\000"
 1343      74657200 
 1344              	.LASF1:
 1345 007c 756E7369 		.ascii	"unsigned char\000"
 1345      676E6564 
 1345      20636861 
 1345      7200
 1346              	.LASF14:
 1347 008a 72656738 		.ascii	"reg8\000"
 1347      00
 1348              	.LASF5:
 1349 008f 6C6F6E67 		.ascii	"long unsigned int\000"
 1349      20756E73 
 1349      69676E65 
 1349      6420696E 
 1349      7400
 1350              	.LASF9:
 1351 00a1 75696E74 		.ascii	"uint8\000"
 1351      3800
 1352              	.LASF34:
 1353 00a7 636F6E74 		.ascii	"control\000"
 1353      726F6C00 
 1354              	.LASF30:
 1355 00af 5A5F4D6F 		.ascii	"Z_Motor_Speed_WriteCompare\000"
 1355      746F725F 
 1355      53706565 
 1355      645F5772 
 1355      69746543 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 41


 1356              	.LASF40:
 1357 00ca 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Z_Motor_Speed.c\000"
 1357      6E657261 
 1357      7465645F 
 1357      536F7572 
 1357      63655C50 
 1358              	.LASF17:
 1359 00f3 5A5F4D6F 		.ascii	"Z_Motor_Speed_Start\000"
 1359      746F725F 
 1359      53706565 
 1359      645F5374 
 1359      61727400 
 1360              	.LASF39:
 1361 0107 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1361      4320342E 
 1361      392E3320 
 1361      32303135 
 1361      30333033 
 1362 013a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1362      20726576 
 1362      6973696F 
 1362      6E203232 
 1362      31323230 
 1363 016d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1363      66756E63 
 1363      74696F6E 
 1363      2D736563 
 1363      74696F6E 
 1364              	.LASF12:
 1365 0195 646F7562 		.ascii	"double\000"
 1365      6C6500
 1366              	.LASF20:
 1367 019c 5A5F4D6F 		.ascii	"Z_Motor_Speed_Init\000"
 1367      746F725F 
 1367      53706565 
 1367      645F496E 
 1367      697400
 1368              	.LASF23:
 1369 01af 636F6D70 		.ascii	"comparemode1masked\000"
 1369      6172656D 
 1369      6F646531 
 1369      6D61736B 
 1369      656400
 1370              	.LASF10:
 1371 01c2 75696E74 		.ascii	"uint16\000"
 1371      313600
 1372              	.LASF18:
 1373 01c9 5A5F4D6F 		.ascii	"Z_Motor_Speed_Enable\000"
 1373      746F725F 
 1373      53706565 
 1373      645F456E 
 1373      61626C65 
 1374              	.LASF8:
 1375 01de 756E7369 		.ascii	"unsigned int\000"
 1375      676E6564 
 1375      20696E74 
 1375      00
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 42


 1376              	.LASF24:
 1377 01eb 636F6D70 		.ascii	"comparemode2masked\000"
 1377      6172656D 
 1377      6F646532 
 1377      6D61736B 
 1377      656400
 1378              	.LASF7:
 1379 01fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 1379      206C6F6E 
 1379      6720756E 
 1379      7369676E 
 1379      65642069 
 1380              	.LASF37:
 1381 0215 5A5F4D6F 		.ascii	"Z_Motor_Speed_ReadCompare\000"
 1381      746F725F 
 1381      53706565 
 1381      645F5265 
 1381      6164436F 
 1382              	.LASF32:
 1383 022f 72657375 		.ascii	"result\000"
 1383      6C7400
 1384              	.LASF25:
 1385 0236 5A5F4D6F 		.ascii	"Z_Motor_Speed_WriteCounter\000"
 1385      746F725F 
 1385      53706565 
 1385      645F5772 
 1385      69746543 
 1386              	.LASF28:
 1387 0251 5A5F4D6F 		.ascii	"Z_Motor_Speed_WritePeriod\000"
 1387      746F725F 
 1387      53706565 
 1387      645F5772 
 1387      69746550 
 1388              	.LASF36:
 1389 026b 5A5F4D6F 		.ascii	"Z_Motor_Speed_ReadCapture\000"
 1389      746F725F 
 1389      53706565 
 1389      645F5265 
 1389      61644361 
 1390              	.LASF21:
 1391 0285 5A5F4D6F 		.ascii	"Z_Motor_Speed_SetCompareMode\000"
 1391      746F725F 
 1391      53706565 
 1391      645F5365 
 1391      74436F6D 
 1392              	.LASF42:
 1393 02a2 5A5F4D6F 		.ascii	"Z_Motor_Speed_ReadControlRegister\000"
 1393      746F725F 
 1393      53706565 
 1393      645F5265 
 1393      6164436F 
 1394              	.LASF16:
 1395 02c4 73697A65 		.ascii	"sizetype\000"
 1395      74797065 
 1395      00
 1396              	.LASF6:
 1397 02cd 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 43


 1397      206C6F6E 
 1397      6720696E 
 1397      7400
 1398              	.LASF38:
 1399 02db 5A5F4D6F 		.ascii	"Z_Motor_Speed_ReadPeriod\000"
 1399      746F725F 
 1399      53706565 
 1399      645F5265 
 1399      61645065 
 1400              	.LASF2:
 1401 02f4 73686F72 		.ascii	"short int\000"
 1401      7420696E 
 1401      7400
 1402              	.LASF19:
 1403 02fe 5A5F4D6F 		.ascii	"Z_Motor_Speed_Stop\000"
 1403      746F725F 
 1403      53706565 
 1403      645F5374 
 1403      6F7000
 1404              	.LASF22:
 1405 0311 6374726C 		.ascii	"ctrl\000"
 1405      00
 1406              	.LASF43:
 1407 0316 5A5F4D6F 		.ascii	"Z_Motor_Speed_initVar\000"
 1407      746F725F 
 1407      53706565 
 1407      645F696E 
 1407      69745661 
 1408              	.LASF26:
 1409 032c 636F6D70 		.ascii	"comparemode\000"
 1409      6172656D 
 1409      6F646500 
 1410              	.LASF33:
 1411 0338 5A5F4D6F 		.ascii	"Z_Motor_Speed_WriteControlRegister\000"
 1411      746F725F 
 1411      53706565 
 1411      645F5772 
 1411      69746543 
 1412              	.LASF4:
 1413 035b 6C6F6E67 		.ascii	"long int\000"
 1413      20696E74 
 1413      00
 1414              	.LASF13:
 1415 0364 63686172 		.ascii	"char\000"
 1415      00
 1416              	.LASF0:
 1417 0369 7369676E 		.ascii	"signed char\000"
 1417      65642063 
 1417      68617200 
 1418              	.LASF31:
 1419 0375 636F6D70 		.ascii	"compare\000"
 1419      61726500 
 1420              	.LASF35:
 1421 037d 5A5F4D6F 		.ascii	"Z_Motor_Speed_ReadCounter\000"
 1421      746F725F 
 1421      53706565 
 1421      645F5265 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc9ghWcO.s 			page 44


 1421      6164436F 
 1422              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
