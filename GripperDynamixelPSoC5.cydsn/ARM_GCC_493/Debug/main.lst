ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	messageToBeTreatedCount
  19              		.bss
  20              		.align	2
  21              		.type	messageToBeTreatedCount, %object
  22              		.size	messageToBeTreatedCount, 4
  23              	messageToBeTreatedCount:
  24 0000 00000000 		.space	4
  25              		.global	msgToBeTreatedIndex
  26              		.align	2
  27              		.type	msgToBeTreatedIndex, %object
  28              		.size	msgToBeTreatedIndex, 4
  29              	msgToBeTreatedIndex:
  30 0004 00000000 		.space	4
  31              		.global	msgToBeStoredIndex
  32              		.align	2
  33              		.type	msgToBeStoredIndex, %object
  34              		.size	msgToBeStoredIndex, 4
  35              	msgToBeStoredIndex:
  36 0008 00000000 		.space	4
  37              		.comm	receivedMsgs,800,4
  38              		.global	readCanMessage
  39              		.type	readCanMessage, %object
  40              		.size	readCanMessage, 1
  41              	readCanMessage:
  42 000c 00       		.space	1
  43              		.global	treatingFunction
  44              		.type	treatingFunction, %object
  45              		.size	treatingFunction, 1
  46              	treatingFunction:
  47 000d 00       		.space	1
  48 000e 0000     		.section	.text.treatCanMessage,"ax",%progbits
  49              		.align	2
  50              		.global	treatCanMessage
  51              		.thumb
  52              		.thumb_func
  53              		.type	treatCanMessage, %function
  54              	treatCanMessage:
  55              	.LFB56:
  56              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 2


   2:.\main.c      **** * Project Name:      HW_Fan_Control_with_Alert
   3:.\main.c      **** * Version:           1.20
   4:.\main.c      **** *
   5:.\main.c      **** * Device Used:       PSoC 3 CY8C3866AXI-040 or PSoC 5 CY8C5588AXI-060ES1
   6:.\main.c      **** * Software Used:     PSoC Creator v2.1
   7:.\main.c      **** * Compiler Used:     Keil(C51), ARM GNU CC
   8:.\main.c      **** * Related Hardware:  CY8CKIT-001 PSoC DVK
   9:.\main.c      **** ********************************************************************************
  10:.\main.c      **** * Theory of Operation:
  11:.\main.c      **** *
  12:.\main.c      **** *
  13:.\main.c      **** *******************************************************************************/
  14:.\main.c      **** #include "main.h"
  15:.\main.c      **** 
  16:.\main.c      **** 
  17:.\main.c      **** /* **************************************
  18:.\main.c      ****    MACROS
  19:.\main.c      ****  * *************************************/
  20:.\main.c      **** 
  21:.\main.c      **** #define SETCLOCK_4MHZ ControlReg_Write(ControlReg_Read() | 0x01)
  22:.\main.c      **** #define SETCLOCK_8MHZ ControlReg_Write(ControlReg_Read() & 0xFE)
  23:.\main.c      **** //#define TRIGGER_TIMER1 ControlReg_Write(ControlReg_Read() | 0x02); CyDelay(1); ControlReg_Write(C
  24:.\main.c      **** //#define TIMER1_STOP ControlReg_Write(ControlReg_Read() | 0x02);
  25:.\main.c      **** //#define TIMER1_RUN  ControlReg_Write(ControlReg_Read() & 0xFD)
  26:.\main.c      **** 
  27:.\main.c      **** /* **************************************
  28:.\main.c      ****    VARIABLES
  29:.\main.c      ****  * *************************************/
  30:.\main.c      **** 
  31:.\main.c      **** 
  32:.\main.c      **** 
  33:.\main.c      **** // ------- VARIABLES CAN ---------
  34:.\main.c      **** int messageToBeTreatedCount = 0;
  35:.\main.c      **** int msgToBeTreatedIndex = 0;
  36:.\main.c      **** int msgToBeStoredIndex = 0;
  37:.\main.c      **** CAN_MSG receivedMsgs[MAX_MSG_BUFFER_SIZE];
  38:.\main.c      **** // ----------------------------
  39:.\main.c      **** 
  40:.\main.c      **** volatile uint8 readCanMessage = 0;
  41:.\main.c      **** uint8 treatingFunction = 0;
  42:.\main.c      **** 
  43:.\main.c      **** 
  44:.\main.c      **** 
  45:.\main.c      **** uint8 treatCanMessage(uint8* canPacket)
  46:.\main.c      **** {   
  57              		.loc 1 46 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 16
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 84B0     		sub	sp, sp, #16
  66              		.cfi_def_cfa_offset 24
  67 0004 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 3


  69 0006 7860     		str	r0, [r7, #4]
  47:.\main.c      ****     uint16 rightMotorPosition = 0;
  70              		.loc 1 47 0
  71 0008 0023     		movs	r3, #0
  72 000a FB81     		strh	r3, [r7, #14]	@ movhi
  48:.\main.c      ****     uint16 leftMotorPosition = 0;
  73              		.loc 1 48 0
  74 000c 0023     		movs	r3, #0
  75 000e BB81     		strh	r3, [r7, #12]	@ movhi
  49:.\main.c      ****     int8 canInstruction = canPacket[0];
  76              		.loc 1 49 0
  77 0010 7B68     		ldr	r3, [r7, #4]
  78 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79 0014 FB72     		strb	r3, [r7, #11]
  50:.\main.c      ****     
  51:.\main.c      ****                 
  52:.\main.c      ****     uint8 byte1 = canPacket[1];
  80              		.loc 1 52 0
  81 0016 7B68     		ldr	r3, [r7, #4]
  82 0018 5B78     		ldrb	r3, [r3, #1]
  83 001a BB72     		strb	r3, [r7, #10]
  53:.\main.c      ****     uint8 byte2 = canPacket[2];
  84              		.loc 1 53 0
  85 001c 7B68     		ldr	r3, [r7, #4]
  86 001e 9B78     		ldrb	r3, [r3, #2]
  87 0020 7B72     		strb	r3, [r7, #9]
  54:.\main.c      ****     
  55:.\main.c      ****     switch(canInstruction)
  88              		.loc 1 55 0
  89 0022 97F90B30 		ldrsb	r3, [r7, #11]
  90 0026 0E2B     		cmp	r3, #14
  91 0028 00F28481 		bhi	.L2
  92 002c 01A2     		adr	r2, .L4
  93 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  94 0032 00BF     		.p2align 2
  95              	.L4:
  96 0034 71000000 		.word	.L3+1
  97 0038 77000000 		.word	.L5+1
  98 003c 97000000 		.word	.L6+1
  99 0040 B9010000 		.word	.L7+1
 100 0044 E9010000 		.word	.L8+1
 101 0048 19020000 		.word	.L9+1
 102 004c 5D010000 		.word	.L10+1
 103 0050 8B010000 		.word	.L11+1
 104 0054 2D010000 		.word	.L12+1
 105 0058 37020000 		.word	.L13+1
 106 005c 65020000 		.word	.L14+1
 107 0060 D7020000 		.word	.L15+1
 108 0064 EB020000 		.word	.L16+1
 109 0068 FF020000 		.word	.L17+1
 110 006c 13030000 		.word	.L18+1
 111              		.p2align 1
 112              	.L3:
  56:.\main.c      ****     {
  57:.\main.c      ****         case CAN_INSTRUCTION_SET_Z_AXIS_HOME:
  58:.\main.c      ****             
  59:.\main.c      ****             Z_Axis_Home();
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 4


 113              		.loc 1 59 0
 114 0070 FFF7FEFF 		bl	Z_Axis_Home
  60:.\main.c      ****             break;
 115              		.loc 1 60 0
 116 0074 5EE1     		b	.L2
 117              	.L5:
  61:.\main.c      ****         
  62:.\main.c      ****         case CAN_INSTRUCTION_SET_Z_AXIS_POSITION:
  63:.\main.c      ****             
  64:.\main.c      ****             Z_Axis_GoTo((uint16)(canPacket[6]<<8) | canPacket[7]);
 118              		.loc 1 64 0
 119 0076 7B68     		ldr	r3, [r7, #4]
 120 0078 0633     		adds	r3, r3, #6
 121 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 007c 9BB2     		uxth	r3, r3
 123 007e 1B02     		lsls	r3, r3, #8
 124 0080 9AB2     		uxth	r2, r3
 125 0082 7B68     		ldr	r3, [r7, #4]
 126 0084 0733     		adds	r3, r3, #7
 127 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 128 0088 9BB2     		uxth	r3, r3
 129 008a 1343     		orrs	r3, r3, r2
 130 008c 9BB2     		uxth	r3, r3
 131 008e 1846     		mov	r0, r3
 132 0090 FFF7FEFF 		bl	Z_Axis_GoTo
  65:.\main.c      ****             break;
 133              		.loc 1 65 0
 134 0094 4EE1     		b	.L2
 135              	.L6:
  66:.\main.c      ****             
  67:.\main.c      ****         case CAN_INSTRUCTION_OPEN_GRIPPER:
  68:.\main.c      ****             
  69:.\main.c      ****             // canPacket[1]:
  70:.\main.c      ****             //      pourcentage of the openning
  71:.\main.c      ****             
  72:.\main.c      ****             rightMotorPosition = ((motorMargin[MOTOR_RIGHT_MARGIN_CCW] - motorMargin[MOTOR_RIGHT_MA
 136              		.loc 1 72 0
 137 0096 AA4B     		ldr	r3, .L23
 138 0098 DB88     		ldrh	r3, [r3, #6]
 139 009a 1A46     		mov	r2, r3
 140 009c A84B     		ldr	r3, .L23
 141 009e 9B88     		ldrh	r3, [r3, #4]
 142 00a0 D31A     		subs	r3, r2, r3
 143 00a2 7A68     		ldr	r2, [r7, #4]
 144 00a4 0132     		adds	r2, r2, #1
 145 00a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 146 00a8 02FB03F3 		mul	r3, r2, r3
 147 00ac A54A     		ldr	r2, .L23+4
 148 00ae 82FB0312 		smull	r1, r2, r2, r3
 149 00b2 5211     		asrs	r2, r2, #5
 150 00b4 DB17     		asrs	r3, r3, #31
 151 00b6 D31A     		subs	r3, r2, r3
 152 00b8 9AB2     		uxth	r2, r3
 153 00ba A14B     		ldr	r3, .L23
 154 00bc 9B88     		ldrh	r3, [r3, #4]
 155 00be 1344     		add	r3, r3, r2
 156 00c0 FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 5


  73:.\main.c      ****             leftMotorPosition  = ((motorMargin[MOTOR_LEFT_MARGIN_CCW] - motorMargin[MOTOR_LEFT_MARG
 157              		.loc 1 73 0
 158 00c2 9F4B     		ldr	r3, .L23
 159 00c4 5B88     		ldrh	r3, [r3, #2]
 160 00c6 1A46     		mov	r2, r3
 161 00c8 9D4B     		ldr	r3, .L23
 162 00ca 1B88     		ldrh	r3, [r3]
 163 00cc D31A     		subs	r3, r2, r3
 164 00ce 7A68     		ldr	r2, [r7, #4]
 165 00d0 0132     		adds	r2, r2, #1
 166 00d2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 167 00d4 C2F16402 		rsb	r2, r2, #100
 168 00d8 02FB03F3 		mul	r3, r2, r3
 169 00dc 994A     		ldr	r2, .L23+4
 170 00de 82FB0312 		smull	r1, r2, r2, r3
 171 00e2 5211     		asrs	r2, r2, #5
 172 00e4 DB17     		asrs	r3, r3, #31
 173 00e6 D31A     		subs	r3, r2, r3
 174 00e8 9AB2     		uxth	r2, r3
 175 00ea 954B     		ldr	r3, .L23
 176 00ec 1B88     		ldrh	r3, [r3]
 177 00ee 1344     		add	r3, r3, r2
 178 00f0 BB81     		strh	r3, [r7, #12]	@ movhi
  74:.\main.c      ****             
  75:.\main.c      ****             sendPacketToDynamixel(dynamixel_setPositionRegPacket(motorType[MOTOR_TYPE_RIGHT], right
 179              		.loc 1 75 0
 180 00f2 954B     		ldr	r3, .L23+8
 181 00f4 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 182 00f6 FB89     		ldrh	r3, [r7, #14]
 183 00f8 1046     		mov	r0, r2
 184 00fa 1946     		mov	r1, r3
 185 00fc FFF7FEFF 		bl	dynamixel_setPositionRegPacket
 186 0100 0346     		mov	r3, r0
 187 0102 1846     		mov	r0, r3
 188 0104 FFF7FEFF 		bl	sendPacketToDynamixel
  76:.\main.c      ****             sendPacketToDynamixel(dynamixel_setPositionRegPacket(motorType[MOTOR_TYPE_LEFT], leftMo
 189              		.loc 1 76 0
 190 0108 8F4B     		ldr	r3, .L23+8
 191 010a 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 192 010c BB89     		ldrh	r3, [r7, #12]
 193 010e 1046     		mov	r0, r2
 194 0110 1946     		mov	r1, r3
 195 0112 FFF7FEFF 		bl	dynamixel_setPositionRegPacket
 196 0116 0346     		mov	r3, r0
 197 0118 1846     		mov	r0, r3
 198 011a FFF7FEFF 		bl	sendPacketToDynamixel
  77:.\main.c      ****             sendPacketToDynamixel(dynamixel_getActionPacket());
 199              		.loc 1 77 0
 200 011e FFF7FEFF 		bl	dynamixel_getActionPacket
 201 0122 0346     		mov	r3, r0
 202 0124 1846     		mov	r0, r3
 203 0126 FFF7FEFF 		bl	sendPacketToDynamixel
  78:.\main.c      ****             break;
 204              		.loc 1 78 0
 205 012a 03E1     		b	.L2
 206              	.L12:
  79:.\main.c      ****             
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 6


  80:.\main.c      ****         case CAN_INSTRUCTION_MOVE:
  81:.\main.c      ****             
  82:.\main.c      ****             // canPacket[1]:
  83:.\main.c      ****             //      ID of the motor
  84:.\main.c      ****             // canPacket[2] & canPacket[3]:
  85:.\main.c      ****             //      Position of the motor (between 0 and 0x3ff)
  86:.\main.c      ****             
  87:.\main.c      ****             sendPacketToDynamixel(dynamixel_setPositionPacket(canPacket[1], (uint16)((canPacket[3]<
 207              		.loc 1 87 0
 208 012c 7B68     		ldr	r3, [r7, #4]
 209 012e 0133     		adds	r3, r3, #1
 210 0130 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 211 0132 7B68     		ldr	r3, [r7, #4]
 212 0134 0333     		adds	r3, r3, #3
 213 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 214 0138 9BB2     		uxth	r3, r3
 215 013a 1B02     		lsls	r3, r3, #8
 216 013c 9AB2     		uxth	r2, r3
 217 013e 7B68     		ldr	r3, [r7, #4]
 218 0140 0233     		adds	r3, r3, #2
 219 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 220 0144 9BB2     		uxth	r3, r3
 221 0146 1344     		add	r3, r3, r2
 222 0148 9BB2     		uxth	r3, r3
 223 014a 0846     		mov	r0, r1
 224 014c 1946     		mov	r1, r3
 225 014e FFF7FEFF 		bl	dynamixel_setPositionPacket
 226 0152 0346     		mov	r3, r0
 227 0154 1846     		mov	r0, r3
 228 0156 FFF7FEFF 		bl	sendPacketToDynamixel
  88:.\main.c      ****             break;
 229              		.loc 1 88 0
 230 015a EBE0     		b	.L2
 231              	.L10:
  89:.\main.c      ****         
  90:.\main.c      ****         case CAN_INSTRUCTION_TILT:
  91:.\main.c      ****             
  92:.\main.c      ****             // canPacket[1] & canPacket[2]:
  93:.\main.c      ****             //      position of the motor
  94:.\main.c      **** 
  95:.\main.c      ****             sendPacketToDynamixel(dynamixel_setPositionPacket(motorType[MOTOR_TYPE_TILT], (uint16)(
 232              		.loc 1 95 0
 233 015c 7A4B     		ldr	r3, .L23+8
 234 015e 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 235 0160 7B68     		ldr	r3, [r7, #4]
 236 0162 0233     		adds	r3, r3, #2
 237 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 238 0166 9BB2     		uxth	r3, r3
 239 0168 1B02     		lsls	r3, r3, #8
 240 016a 9AB2     		uxth	r2, r3
 241 016c 7B68     		ldr	r3, [r7, #4]
 242 016e 0133     		adds	r3, r3, #1
 243 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244 0172 9BB2     		uxth	r3, r3
 245 0174 1344     		add	r3, r3, r2
 246 0176 9BB2     		uxth	r3, r3
 247 0178 0846     		mov	r0, r1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 7


 248 017a 1946     		mov	r1, r3
 249 017c FFF7FEFF 		bl	dynamixel_setPositionPacket
 250 0180 0346     		mov	r3, r0
 251 0182 1846     		mov	r0, r3
 252 0184 FFF7FEFF 		bl	sendPacketToDynamixel
  96:.\main.c      ****             break;
 253              		.loc 1 96 0
 254 0188 D4E0     		b	.L2
 255              	.L11:
  97:.\main.c      ****             
  98:.\main.c      ****         case CAN_INSTRUCTION_ROTATE:
  99:.\main.c      ****             
 100:.\main.c      ****             // canPacket[1] & canPacket[2]:
 101:.\main.c      ****             //      position of the motor
 102:.\main.c      ****             
 103:.\main.c      ****             sendPacketToDynamixel(dynamixel_setPositionPacket(motorType[MOTOR_TYPE_ROTATE], (uint16
 256              		.loc 1 103 0
 257 018a 6F4B     		ldr	r3, .L23+8
 258 018c 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 259 018e 7B68     		ldr	r3, [r7, #4]
 260 0190 0233     		adds	r3, r3, #2
 261 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262 0194 9BB2     		uxth	r3, r3
 263 0196 1B02     		lsls	r3, r3, #8
 264 0198 9AB2     		uxth	r2, r3
 265 019a 7B68     		ldr	r3, [r7, #4]
 266 019c 0133     		adds	r3, r3, #1
 267 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 268 01a0 9BB2     		uxth	r3, r3
 269 01a2 1344     		add	r3, r3, r2
 270 01a4 9BB2     		uxth	r3, r3
 271 01a6 0846     		mov	r0, r1
 272 01a8 1946     		mov	r1, r3
 273 01aa FFF7FEFF 		bl	dynamixel_setPositionPacket
 274 01ae 0346     		mov	r3, r0
 275 01b0 1846     		mov	r0, r3
 276 01b2 FFF7FEFF 		bl	sendPacketToDynamixel
 104:.\main.c      ****             break;
 277              		.loc 1 104 0
 278 01b6 BDE0     		b	.L2
 279              	.L7:
 105:.\main.c      ****         
 106:.\main.c      ****         case CAN_INSTRUCTION_SET_MOVING_SPEED:
 107:.\main.c      ****             
 108:.\main.c      ****             // canPacket[1]:
 109:.\main.c      ****             //      ID of the motor
 110:.\main.c      ****             // canPacket[2] & canPacket[3]:
 111:.\main.c      ****             //      Moving speed of the motor (between 0 and 0x3ff)
 112:.\main.c      ****             
 113:.\main.c      ****             sendPacketToDynamixel(dynamixel_setMovingSpeedPacket(canPacket[1], (uint16)((canPacket[
 280              		.loc 1 113 0
 281 01b8 7B68     		ldr	r3, [r7, #4]
 282 01ba 0133     		adds	r3, r3, #1
 283 01bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 284 01be 7B68     		ldr	r3, [r7, #4]
 285 01c0 0333     		adds	r3, r3, #3
 286 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 8


 287 01c4 9BB2     		uxth	r3, r3
 288 01c6 1B02     		lsls	r3, r3, #8
 289 01c8 9AB2     		uxth	r2, r3
 290 01ca 7B68     		ldr	r3, [r7, #4]
 291 01cc 0233     		adds	r3, r3, #2
 292 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 293 01d0 9BB2     		uxth	r3, r3
 294 01d2 1344     		add	r3, r3, r2
 295 01d4 9BB2     		uxth	r3, r3
 296 01d6 0846     		mov	r0, r1
 297 01d8 1946     		mov	r1, r3
 298 01da FFF7FEFF 		bl	dynamixel_setMovingSpeedPacket
 299 01de 0346     		mov	r3, r0
 300 01e0 1846     		mov	r0, r3
 301 01e2 FFF7FEFF 		bl	sendPacketToDynamixel
 114:.\main.c      ****             break;
 302              		.loc 1 114 0
 303 01e6 A5E0     		b	.L2
 304              	.L8:
 115:.\main.c      ****             
 116:.\main.c      ****         case CAN_INSTRUCTION_SET_TORQUE:
 117:.\main.c      ****             
 118:.\main.c      ****             // canPacket[1]:
 119:.\main.c      ****             //      ID of the motor
 120:.\main.c      ****             // canPacket[2] & canPacket[3]:
 121:.\main.c      ****             //      Torque of the motor (between 0 and 0x3ff)
 122:.\main.c      ****             
 123:.\main.c      ****             sendPacketToDynamixel(dynamixel_setTorquePacket(canPacket[1], (uint16)((canPacket[3]<<8
 305              		.loc 1 123 0
 306 01e8 7B68     		ldr	r3, [r7, #4]
 307 01ea 0133     		adds	r3, r3, #1
 308 01ec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 309 01ee 7B68     		ldr	r3, [r7, #4]
 310 01f0 0333     		adds	r3, r3, #3
 311 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 01f4 9BB2     		uxth	r3, r3
 313 01f6 1B02     		lsls	r3, r3, #8
 314 01f8 9AB2     		uxth	r2, r3
 315 01fa 7B68     		ldr	r3, [r7, #4]
 316 01fc 0233     		adds	r3, r3, #2
 317 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 0200 9BB2     		uxth	r3, r3
 319 0202 1344     		add	r3, r3, r2
 320 0204 9BB2     		uxth	r3, r3
 321 0206 0846     		mov	r0, r1
 322 0208 1946     		mov	r1, r3
 323 020a FFF7FEFF 		bl	dynamixel_setTorquePacket
 324 020e 0346     		mov	r3, r0
 325 0210 1846     		mov	r0, r3
 326 0212 FFF7FEFF 		bl	sendPacketToDynamixel
 124:.\main.c      ****             break;
 327              		.loc 1 124 0
 328 0216 8DE0     		b	.L2
 329              	.L9:
 125:.\main.c      ****             
 126:.\main.c      ****         case CAN_INSTRUCTION_SET_TORQUE_ENABLE:
 127:.\main.c      ****             
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 9


 128:.\main.c      ****             // canPacket[1]: 
 129:.\main.c      ****             //      ID of the motor
 130:.\main.c      ****             //
 131:.\main.c      ****             // canPacket[2]: 
 132:.\main.c      ****             //      0 means no torque
 133:.\main.c      ****             //      1 means apply torque
 134:.\main.c      ****             
 135:.\main.c      ****             sendPacketToDynamixel(dynamixel_setTorqueEnablePacket(canPacket[1], canPacket[2]));
 330              		.loc 1 135 0
 331 0218 7B68     		ldr	r3, [r7, #4]
 332 021a 0133     		adds	r3, r3, #1
 333 021c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 334 021e 7B68     		ldr	r3, [r7, #4]
 335 0220 0233     		adds	r3, r3, #2
 336 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 337 0224 1046     		mov	r0, r2
 338 0226 1946     		mov	r1, r3
 339 0228 FFF7FEFF 		bl	dynamixel_setTorqueEnablePacket
 340 022c 0346     		mov	r3, r0
 341 022e 1846     		mov	r0, r3
 342 0230 FFF7FEFF 		bl	sendPacketToDynamixel
 136:.\main.c      ****             break;
 343              		.loc 1 136 0
 344 0234 7EE0     		b	.L2
 345              	.L13:
 137:.\main.c      ****             
 138:.\main.c      ****         case CAN_INSTRUCTION_GET_DATA:
 139:.\main.c      **** 			
 140:.\main.c      **** 			// canPacket[1]:
 141:.\main.c      **** 			//		ID of the motor
 142:.\main.c      **** 		    // canPacket[2]: 
 143:.\main.c      **** 			//      address of the first data in the dynamixel table
 144:.\main.c      **** 			// canPacket[3]:
 145:.\main.c      **** 			//		number of byte to retreive (max of 4)
 146:.\main.c      **** 			
 147:.\main.c      **** 			treatingFunction = canPacket[2];
 346              		.loc 1 147 0
 347 0236 7B68     		ldr	r3, [r7, #4]
 348 0238 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 349 023a 444B     		ldr	r3, .L23+12
 350 023c 1A70     		strb	r2, [r3]
 148:.\main.c      **** 			sendPacketToDynamixel(dynamixel_getReadPacket(canPacket[1], canPacket[2], canPacket[3]));
 351              		.loc 1 148 0
 352 023e 7B68     		ldr	r3, [r7, #4]
 353 0240 0133     		adds	r3, r3, #1
 354 0242 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 355 0244 7B68     		ldr	r3, [r7, #4]
 356 0246 0233     		adds	r3, r3, #2
 357 0248 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 358 024a 7B68     		ldr	r3, [r7, #4]
 359 024c 0333     		adds	r3, r3, #3
 360 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 0250 0846     		mov	r0, r1
 362 0252 1146     		mov	r1, r2
 363 0254 1A46     		mov	r2, r3
 364 0256 FFF7FEFF 		bl	dynamixel_getReadPacket
 365 025a 0346     		mov	r3, r0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 10


 366 025c 1846     		mov	r0, r3
 367 025e FFF7FEFF 		bl	sendPacketToDynamixel
 149:.\main.c      **** 			break;
 368              		.loc 1 149 0
 369 0262 67E0     		b	.L2
 370              	.L14:
 150:.\main.c      ****         
 151:.\main.c      ****         case CAN_INSTRUCTION_SET_DATA:
 152:.\main.c      ****             
 153:.\main.c      **** 		    // canPacket[1]: 
 154:.\main.c      **** 			//      ID of the motor
 155:.\main.c      **** 			// canPacket[2]:
 156:.\main.c      **** 			//		address of the first data in the dynamixel table
 157:.\main.c      **** 			// canPacket[3]:
 158:.\main.c      **** 			//		number of byte to retreive (max of 2)
 159:.\main.c      ****             // canPacket[4] & canPacket[5]:
 160:.\main.c      ****             //      data to push to the motor
 161:.\main.c      ****             
 162:.\main.c      ****             switch(canPacket[3]) 
 371              		.loc 1 162 0
 372 0264 7B68     		ldr	r3, [r7, #4]
 373 0266 0333     		adds	r3, r3, #3
 374 0268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 375 026a 012B     		cmp	r3, #1
 376 026c 02D0     		beq	.L20
 377 026e 022B     		cmp	r3, #2
 378 0270 13D0     		beq	.L21
 163:.\main.c      ****             {
 164:.\main.c      ****                 case 1:
 165:.\main.c      ****                     sendPacketToDynamixel(dynamixel_setByte(canPacket[1], canPacket[2], canPacket[4
 166:.\main.c      ****                     break;
 167:.\main.c      ****                 case 2:
 168:.\main.c      ****                     updateAngleLimitData(canPacket);
 169:.\main.c      ****                     sendPacketToDynamixel(dynamixel_set2Bytes(canPacket[1], canPacket[2], (canPacke
 170:.\main.c      ****                     break;
 171:.\main.c      ****             }
 172:.\main.c      ****             
 173:.\main.c      ****             break;
 379              		.loc 1 173 0
 380 0272 5FE0     		b	.L2
 381              	.L20:
 165:.\main.c      ****                     break;
 382              		.loc 1 165 0
 383 0274 7B68     		ldr	r3, [r7, #4]
 384 0276 0133     		adds	r3, r3, #1
 385 0278 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 386 027a 7B68     		ldr	r3, [r7, #4]
 387 027c 0233     		adds	r3, r3, #2
 388 027e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 389 0280 7B68     		ldr	r3, [r7, #4]
 390 0282 0433     		adds	r3, r3, #4
 391 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 0286 0846     		mov	r0, r1
 393 0288 1146     		mov	r1, r2
 394 028a 1A46     		mov	r2, r3
 395 028c FFF7FEFF 		bl	dynamixel_setByte
 396 0290 0346     		mov	r3, r0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 11


 397 0292 1846     		mov	r0, r3
 398 0294 FFF7FEFF 		bl	sendPacketToDynamixel
 166:.\main.c      ****                 case 2:
 399              		.loc 1 166 0
 400 0298 1CE0     		b	.L19
 401              	.L21:
 168:.\main.c      ****                     sendPacketToDynamixel(dynamixel_set2Bytes(canPacket[1], canPacket[2], (canPacke
 402              		.loc 1 168 0
 403 029a 7868     		ldr	r0, [r7, #4]
 404 029c FFF7FEFF 		bl	updateAngleLimitData
 169:.\main.c      ****                     break;
 405              		.loc 1 169 0
 406 02a0 7B68     		ldr	r3, [r7, #4]
 407 02a2 0133     		adds	r3, r3, #1
 408 02a4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 409 02a6 7B68     		ldr	r3, [r7, #4]
 410 02a8 0233     		adds	r3, r3, #2
 411 02aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 412 02ac 7B68     		ldr	r3, [r7, #4]
 413 02ae 0533     		adds	r3, r3, #5
 414 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 415 02b2 9BB2     		uxth	r3, r3
 416 02b4 1B02     		lsls	r3, r3, #8
 417 02b6 9AB2     		uxth	r2, r3
 418 02b8 7B68     		ldr	r3, [r7, #4]
 419 02ba 0433     		adds	r3, r3, #4
 420 02bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 421 02be 9BB2     		uxth	r3, r3
 422 02c0 1344     		add	r3, r3, r2
 423 02c2 9BB2     		uxth	r3, r3
 424 02c4 1A46     		mov	r2, r3
 425 02c6 FFF7FEFF 		bl	dynamixel_set2Bytes
 426 02ca 0346     		mov	r3, r0
 427 02cc 1846     		mov	r0, r3
 428 02ce FFF7FEFF 		bl	sendPacketToDynamixel
 170:.\main.c      ****             }
 429              		.loc 1 170 0
 430 02d2 00BF     		nop
 431              	.L19:
 432              		.loc 1 173 0
 433 02d4 2EE0     		b	.L2
 434              	.L15:
 174:.\main.c      ****             
 175:.\main.c      ****         case CAN_INSTRUCTION_CLOCK_4M:
 176:.\main.c      ****             
 177:.\main.c      ****             SETCLOCK_4MHZ;
 435              		.loc 1 177 0
 436 02d6 FFF7FEFF 		bl	ControlReg_Read
 437 02da 0346     		mov	r3, r0
 438 02dc 43F00103 		orr	r3, r3, #1
 439 02e0 DBB2     		uxtb	r3, r3
 440 02e2 1846     		mov	r0, r3
 441 02e4 FFF7FEFF 		bl	ControlReg_Write
 178:.\main.c      ****             break;
 442              		.loc 1 178 0
 443 02e8 24E0     		b	.L2
 444              	.L16:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 12


 179:.\main.c      ****             
 180:.\main.c      ****         case CAN_INSTRUCTION_CLOCK_8M:
 181:.\main.c      ****             
 182:.\main.c      ****             SETCLOCK_8MHZ;
 445              		.loc 1 182 0
 446 02ea FFF7FEFF 		bl	ControlReg_Read
 447 02ee 0346     		mov	r3, r0
 448 02f0 23F00103 		bic	r3, r3, #1
 449 02f4 DBB2     		uxtb	r3, r3
 450 02f6 1846     		mov	r0, r3
 451 02f8 FFF7FEFF 		bl	ControlReg_Write
 183:.\main.c      ****             break;
 452              		.loc 1 183 0
 453 02fc 1AE0     		b	.L2
 454              	.L17:
 184:.\main.c      ****             
 185:.\main.c      ****         case CAN_INSTRUCTION_GET_MOTOR_TYPE:
 186:.\main.c      ****             
 187:.\main.c      **** 		    // canPacket[1]: 
 188:.\main.c      **** 			//      ID of the motor
 189:.\main.c      **** 			
 190:.\main.c      **** 			treatingFunction = CAN_INSTRUCTION_GET_MOTOR_TYPE;
 455              		.loc 1 190 0
 456 02fe 134B     		ldr	r3, .L23+12
 457 0300 0D22     		movs	r2, #13
 458 0302 1A70     		strb	r2, [r3]
 191:.\main.c      ****             sendMotorTypeToComputer(canPacket[1]);
 459              		.loc 1 191 0
 460 0304 7B68     		ldr	r3, [r7, #4]
 461 0306 0133     		adds	r3, r3, #1
 462 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 030a 1846     		mov	r0, r3
 464 030c FFF7FEFF 		bl	sendMotorTypeToComputer
 192:.\main.c      ****             break;
 465              		.loc 1 192 0
 466 0310 10E0     		b	.L2
 467              	.L18:
 193:.\main.c      ****             
 194:.\main.c      ****         case CAN_INSTRUCTION_SET_MOTOR_TYPE:
 195:.\main.c      ****             
 196:.\main.c      ****             // canPacket[1]: 
 197:.\main.c      **** 			//      ID of the motor
 198:.\main.c      ****             // canPacket[2]: 
 199:.\main.c      **** 			//      Motor type (0 to 4)
 200:.\main.c      ****             
 201:.\main.c      ****             eraseMotorType(canPacket[1]);
 468              		.loc 1 201 0
 469 0312 7B68     		ldr	r3, [r7, #4]
 470 0314 0133     		adds	r3, r3, #1
 471 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 472 0318 1846     		mov	r0, r3
 473 031a FFF7FEFF 		bl	eraseMotorType
 202:.\main.c      ****             saveMotorType(canPacket[1], canPacket[2]);
 474              		.loc 1 202 0
 475 031e 7B68     		ldr	r3, [r7, #4]
 476 0320 0133     		adds	r3, r3, #1
 477 0322 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 13


 478 0324 7B68     		ldr	r3, [r7, #4]
 479 0326 0233     		adds	r3, r3, #2
 480 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481 032a 1046     		mov	r0, r2
 482 032c 1946     		mov	r1, r3
 483 032e FFF7FEFF 		bl	saveMotorType
 203:.\main.c      ****             break;
 484              		.loc 1 203 0
 485 0332 00BF     		nop
 486              	.L2:
 204:.\main.c      ****             
 205:.\main.c      ****     }
 206:.\main.c      ****     return 0;
 487              		.loc 1 206 0
 488 0334 0023     		movs	r3, #0
 207:.\main.c      **** }
 489              		.loc 1 207 0
 490 0336 1846     		mov	r0, r3
 491 0338 1037     		adds	r7, r7, #16
 492              		.cfi_def_cfa_offset 8
 493 033a BD46     		mov	sp, r7
 494              		.cfi_def_cfa_register 13
 495              		@ sp needed
 496 033c 80BD     		pop	{r7, pc}
 497              	.L24:
 498 033e 00BF     		.align	2
 499              	.L23:
 500 0340 00000000 		.word	motorMargin
 501 0344 1F85EB51 		.word	1374389535
 502 0348 00000000 		.word	motorType
 503 034c 00000000 		.word	treatingFunction
 504              		.cfi_endproc
 505              	.LFE56:
 506              		.size	treatCanMessage, .-treatCanMessage
 507              		.section	.text.CounterCanInterruptHandler,"ax",%progbits
 508              		.align	2
 509              		.global	CounterCanInterruptHandler
 510              		.thumb
 511              		.thumb_func
 512              		.type	CounterCanInterruptHandler, %function
 513              	CounterCanInterruptHandler:
 514              	.LFB57:
 208:.\main.c      **** 
 209:.\main.c      **** /*******************************************************************************
 210:.\main.c      **** * COUNTER CAN READER INTERRUPT ROUTINE
 211:.\main.c      **** ********************************************************************************/
 212:.\main.c      **** CY_ISR(CounterCanInterruptHandler)
 213:.\main.c      **** {
 515              		.loc 1 213 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0000 80B4     		push	{r7}
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 14


 524              		.cfi_def_cfa_register 7
 214:.\main.c      **** 	/* Read Status register in order to clear the sticky Terminal Count (TC) bit 
 215:.\main.c      **** 	 * in the status register. 
 216:.\main.c      ****      */
 217:.\main.c      ****     Counter_CanReader_STATUS;
 525              		.loc 1 217 0
 526 0004 044B     		ldr	r3, .L26
 527 0006 1B78     		ldrb	r3, [r3]
 218:.\main.c      ****     //Pin_RedLed_Write(~Pin_RedLed_Read());
 219:.\main.c      ****     readCanMessage = 1;
 528              		.loc 1 219 0
 529 0008 044B     		ldr	r3, .L26+4
 530 000a 0122     		movs	r2, #1
 531 000c 1A70     		strb	r2, [r3]
 220:.\main.c      **** }
 532              		.loc 1 220 0
 533 000e BD46     		mov	sp, r7
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 0010 5DF8047B 		ldr	r7, [sp], #4
 537              		.cfi_restore 7
 538              		.cfi_def_cfa_offset 0
 539 0014 7047     		bx	lr
 540              	.L27:
 541 0016 00BF     		.align	2
 542              	.L26:
 543 0018 034F0040 		.word	1073762051
 544 001c 00000000 		.word	readCanMessage
 545              		.cfi_endproc
 546              	.LFE57:
 547              		.size	CounterCanInterruptHandler, .-CounterCanInterruptHandler
 548              		.section	.text.main,"ax",%progbits
 549              		.align	2
 550              		.global	main
 551              		.thumb
 552              		.thumb_func
 553              		.type	main, %function
 554              	main:
 555              	.LFB58:
 221:.\main.c      **** 
 222:.\main.c      **** 
 223:.\main.c      **** int main()
 224:.\main.c      **** {
 556              		.loc 1 224 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 16
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560 0000 80B5     		push	{r7, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 564 0002 84B0     		sub	sp, sp, #16
 565              		.cfi_def_cfa_offset 24
 566 0004 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 225:.\main.c      ****     init_eeprom();
 568              		.loc 1 225 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 15


 569 0006 FFF7FEFF 		bl	init_eeprom
 226:.\main.c      ****     readEeprom();
 570              		.loc 1 226 0
 571 000a FFF7FEFF 		bl	readEeprom
 227:.\main.c      ****     
 228:.\main.c      ****     init_uart_dynamixel();
 572              		.loc 1 228 0
 573 000e FFF7FEFF 		bl	init_uart_dynamixel
 229:.\main.c      ****     init_can_module();
 574              		.loc 1 229 0
 575 0012 FFF7FEFF 		bl	init_can_module
 230:.\main.c      ****     Z_Axis_Init();
 576              		.loc 1 230 0
 577 0016 FFF7FEFF 		bl	Z_Axis_Init
 231:.\main.c      ****     
 232:.\main.c      ****     SETCLOCK_4MHZ;
 578              		.loc 1 232 0
 579 001a FFF7FEFF 		bl	ControlReg_Read
 580 001e 0346     		mov	r3, r0
 581 0020 43F00103 		orr	r3, r3, #1
 582 0024 DBB2     		uxtb	r3, r3
 583 0026 1846     		mov	r0, r3
 584 0028 FFF7FEFF 		bl	ControlReg_Write
 233:.\main.c      ****     CyGlobalIntEnable; // Enable Global Interrupts
 585              		.loc 1 233 0
 586              	@ 233 ".\main.c" 1
 587 002c 62B6     		CPSIE   i
 588              	@ 0 "" 2
 589              		.thumb
 590              	.L30:
 234:.\main.c      **** 
 235:.\main.c      **** 	for(;;){
 236:.\main.c      ****         
 237:.\main.c      ****         
 238:.\main.c      ****         //Verify if a message needs to be treated in the message received buffer.       
 239:.\main.c      ****         if(readCanMessage == 1 && messageToBeTreatedCount > 0)
 591              		.loc 1 239 0
 592 002e 0A4B     		ldr	r3, .L31
 593 0030 1B78     		ldrb	r3, [r3]
 594 0032 DBB2     		uxtb	r3, r3
 595 0034 012B     		cmp	r3, #1
 596 0036 0ED1     		bne	.L29
 597              		.loc 1 239 0 is_stmt 0 discriminator 1
 598 0038 084B     		ldr	r3, .L31+4
 599 003a 1B68     		ldr	r3, [r3]
 600 003c 002B     		cmp	r3, #0
 601 003e 0ADD     		ble	.L29
 602              	.LBB2:
 240:.\main.c      ****         {
 241:.\main.c      ****             readCanMessage = 0;
 603              		.loc 1 241 0 is_stmt 1
 604 0040 054B     		ldr	r3, .L31
 605 0042 0022     		movs	r2, #0
 606 0044 1A70     		strb	r2, [r3]
 242:.\main.c      ****             // Treat the last message received and echo it back on the CAN bus as an acknowledgemen
 243:.\main.c      ****             CAN_MSG msgToTreat = can_getReceivedMessage(); 
 607              		.loc 1 243 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 16


 608 0046 3B46     		mov	r3, r7
 609 0048 1846     		mov	r0, r3
 610 004a FFF7FEFF 		bl	can_getReceivedMessage
 244:.\main.c      ****             treatCanMessage(msgToTreat.msgBytes.byte);
 611              		.loc 1 244 0
 612 004e 3B46     		mov	r3, r7
 613 0050 1846     		mov	r0, r3
 614 0052 FFF7FEFF 		bl	treatCanMessage
 615              	.L29:
 616              	.LBE2:
 245:.\main.c      ****         }//*/
 246:.\main.c      ****     
 247:.\main.c      ****     }
 617              		.loc 1 247 0 discriminator 1
 618 0056 EAE7     		b	.L30
 619              	.L32:
 620              		.align	2
 621              	.L31:
 622 0058 00000000 		.word	readCanMessage
 623 005c 00000000 		.word	messageToBeTreatedCount
 624              		.cfi_endproc
 625              	.LFE58:
 626              		.size	main, .-main
 627              		.section	.text.init_can_module,"ax",%progbits
 628              		.align	2
 629              		.global	init_can_module
 630              		.thumb
 631              		.thumb_func
 632              		.type	init_can_module, %function
 633              	init_can_module:
 634              	.LFB59:
 248:.\main.c      **** }
 249:.\main.c      **** 
 250:.\main.c      **** 
 251:.\main.c      **** /******************************************************************************
 252:.\main.c      **** * HELPER FUNCTIONS
 253:.\main.c      **** *******************************************************************************/
 254:.\main.c      **** 
 255:.\main.c      **** void init_can_module()
 256:.\main.c      **** {
 635              		.loc 1 256 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 80B5     		push	{r7, lr}
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 257:.\main.c      ****     // Initializing required components for CAN communication
 258:.\main.c      ****     CAN_1_Start();
 645              		.loc 1 258 0
 646 0004 FFF7FEFF 		bl	CAN_1_Start
 259:.\main.c      ****     CAN_1_GlobalIntEnable();
 647              		.loc 1 259 0
 648 0008 FFF7FEFF 		bl	CAN_1_GlobalIntEnable
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 17


 260:.\main.c      ****     CAN_Standby_Write(0);
 649              		.loc 1 260 0
 650 000c 0020     		movs	r0, #0
 651 000e FFF7FEFF 		bl	CAN_Standby_Write
 261:.\main.c      ****     
 262:.\main.c      ****     // CAN message are read every time the counter turns to zero
 263:.\main.c      ****     CanReaderISR_StartEx(CounterCanInterruptHandler);
 652              		.loc 1 263 0
 653 0012 0348     		ldr	r0, .L34
 654 0014 FFF7FEFF 		bl	CanReaderISR_StartEx
 264:.\main.c      ****     Counter_CanReader_Start();
 655              		.loc 1 264 0
 656 0018 FFF7FEFF 		bl	Counter_CanReader_Start
 265:.\main.c      **** }
 657              		.loc 1 265 0
 658 001c 80BD     		pop	{r7, pc}
 659              	.L35:
 660 001e 00BF     		.align	2
 661              	.L34:
 662 0020 00000000 		.word	CounterCanInterruptHandler
 663              		.cfi_endproc
 664              	.LFE59:
 665              		.size	init_can_module, .-init_can_module
 666              		.section	.text.sendMotorTypeToComputer,"ax",%progbits
 667              		.align	2
 668              		.global	sendMotorTypeToComputer
 669              		.thumb
 670              		.thumb_func
 671              		.type	sendMotorTypeToComputer, %function
 672              	sendMotorTypeToComputer:
 673              	.LFB60:
 266:.\main.c      **** 
 267:.\main.c      **** 
 268:.\main.c      **** 
 269:.\main.c      **** void sendMotorTypeToComputer(unsigned char id)
 270:.\main.c      **** {
 674              		.loc 1 270 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 24
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678 0000 80B5     		push	{r7, lr}
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 7, -8
 681              		.cfi_offset 14, -4
 682 0002 86B0     		sub	sp, sp, #24
 683              		.cfi_def_cfa_offset 32
 684 0004 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 686 0006 0346     		mov	r3, r0
 687 0008 FB71     		strb	r3, [r7, #7]
 271:.\main.c      ****     CAN_MSG canMsg;
 272:.\main.c      ****     
 273:.\main.c      ****     canMsg.msgBytes.byte[0] = 0;
 688              		.loc 1 273 0
 689 000a 0023     		movs	r3, #0
 690 000c 3B72     		strb	r3, [r7, #8]
 274:.\main.c      ****     canMsg.msgBytes.byte[1] = CAN_HARDWARE_FILTER_ID;
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 18


 691              		.loc 1 274 0
 692 000e 3023     		movs	r3, #48
 693 0010 7B72     		strb	r3, [r7, #9]
 275:.\main.c      ****     canMsg.msgBytes.byte[2] = CAN_INSTRUCTION_GET_MOTOR_TYPE;
 694              		.loc 1 275 0
 695 0012 0D23     		movs	r3, #13
 696 0014 BB72     		strb	r3, [r7, #10]
 276:.\main.c      ****     canMsg.msgBytes.byte[3] = id;
 697              		.loc 1 276 0
 698 0016 FB79     		ldrb	r3, [r7, #7]
 699 0018 FB72     		strb	r3, [r7, #11]
 277:.\main.c      ****     canMsg.msgBytes.byte[4] = getMotorType(id);
 700              		.loc 1 277 0
 701 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 702 001c 1846     		mov	r0, r3
 703 001e FFF7FEFF 		bl	getMotorType
 704 0022 0346     		mov	r3, r0
 705 0024 3B73     		strb	r3, [r7, #12]
 278:.\main.c      ****     
 279:.\main.c      ****     canMsg.DLC = 5;
 706              		.loc 1 279 0
 707 0026 0523     		movs	r3, #5
 708 0028 3B74     		strb	r3, [r7, #16]
 280:.\main.c      ****     can_sendMessage(&canMsg, CAN_COMPUTER_ID);
 709              		.loc 1 280 0
 710 002a 07F10803 		add	r3, r7, #8
 711 002e 1846     		mov	r0, r3
 712 0030 FF21     		movs	r1, #255
 713 0032 FFF7FEFF 		bl	can_sendMessage
 281:.\main.c      **** }
 714              		.loc 1 281 0
 715 0036 1837     		adds	r7, r7, #24
 716              		.cfi_def_cfa_offset 8
 717 0038 BD46     		mov	sp, r7
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 003a 80BD     		pop	{r7, pc}
 721              		.cfi_endproc
 722              	.LFE60:
 723              		.size	sendMotorTypeToComputer, .-sendMotorTypeToComputer
 724              		.text
 725              	.Letext0:
 726              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 727              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 728              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 729              		.file 5 "Generated_Source\\PSoC5/CAN_1.h"
 730              		.file 6 ".\\CAN_Communication.h"
 731              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 732              		.file 8 ".\\gripper_eeprom.h"
 733              		.section	.debug_info,"",%progbits
 734              	.Ldebug_info0:
 735 0000 F8020000 		.4byte	0x2f8
 736 0004 0400     		.2byte	0x4
 737 0006 00000000 		.4byte	.Ldebug_abbrev0
 738 000a 04       		.byte	0x4
 739 000b 01       		.uleb128 0x1
 740 000c 74000000 		.4byte	.LASF44
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 19


 741 0010 01       		.byte	0x1
 742 0011 21010000 		.4byte	.LASF45
 743 0015 00000000 		.4byte	.LASF46
 744 0019 00000000 		.4byte	.Ldebug_ranges0+0
 745 001d 00000000 		.4byte	0
 746 0021 00000000 		.4byte	.Ldebug_line0
 747 0025 02       		.uleb128 0x2
 748 0026 01       		.byte	0x1
 749 0027 06       		.byte	0x6
 750 0028 C9020000 		.4byte	.LASF0
 751 002c 02       		.uleb128 0x2
 752 002d 01       		.byte	0x1
 753 002e 08       		.byte	0x8
 754 002f 30010000 		.4byte	.LASF1
 755 0033 02       		.uleb128 0x2
 756 0034 02       		.byte	0x2
 757 0035 05       		.byte	0x5
 758 0036 BA010000 		.4byte	.LASF2
 759 003a 02       		.uleb128 0x2
 760 003b 02       		.byte	0x2
 761 003c 07       		.byte	0x7
 762 003d E4020000 		.4byte	.LASF3
 763 0041 03       		.uleb128 0x3
 764 0042 6A000000 		.4byte	.LASF9
 765 0046 02       		.byte	0x2
 766 0047 3F       		.byte	0x3f
 767 0048 4C000000 		.4byte	0x4c
 768 004c 02       		.uleb128 0x2
 769 004d 04       		.byte	0x4
 770 004e 05       		.byte	0x5
 771 004f C0020000 		.4byte	.LASF4
 772 0053 02       		.uleb128 0x2
 773 0054 04       		.byte	0x4
 774 0055 07       		.byte	0x7
 775 0056 63010000 		.4byte	.LASF5
 776 005a 02       		.uleb128 0x2
 777 005b 08       		.byte	0x8
 778 005c 05       		.byte	0x5
 779 005d 4D020000 		.4byte	.LASF6
 780 0061 02       		.uleb128 0x2
 781 0062 08       		.byte	0x8
 782 0063 07       		.byte	0x7
 783 0064 F9010000 		.4byte	.LASF7
 784 0068 04       		.uleb128 0x4
 785 0069 04       		.byte	0x4
 786 006a 05       		.byte	0x5
 787 006b 696E7400 		.ascii	"int\000"
 788 006f 02       		.uleb128 0x2
 789 0070 04       		.byte	0x4
 790 0071 07       		.byte	0x7
 791 0072 EC010000 		.4byte	.LASF8
 792 0076 03       		.uleb128 0x3
 793 0077 2B020000 		.4byte	.LASF10
 794 007b 03       		.byte	0x3
 795 007c 2C       		.byte	0x2c
 796 007d 41000000 		.4byte	0x41
 797 0081 03       		.uleb128 0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 20


 798 0082 A2020000 		.4byte	.LASF11
 799 0086 04       		.byte	0x4
 800 0087 A1       		.byte	0xa1
 801 0088 2C000000 		.4byte	0x2c
 802 008c 03       		.uleb128 0x3
 803 008d B3010000 		.4byte	.LASF12
 804 0091 04       		.byte	0x4
 805 0092 A2       		.byte	0xa2
 806 0093 3A000000 		.4byte	0x3a
 807 0097 03       		.uleb128 0x3
 808 0098 D9010000 		.4byte	.LASF13
 809 009c 04       		.byte	0x4
 810 009d A3       		.byte	0xa3
 811 009e 53000000 		.4byte	0x53
 812 00a2 03       		.uleb128 0x3
 813 00a3 D4010000 		.4byte	.LASF14
 814 00a7 04       		.byte	0x4
 815 00a8 A4       		.byte	0xa4
 816 00a9 25000000 		.4byte	0x25
 817 00ad 02       		.uleb128 0x2
 818 00ae 04       		.byte	0x4
 819 00af 04       		.byte	0x4
 820 00b0 2A010000 		.4byte	.LASF15
 821 00b4 02       		.uleb128 0x2
 822 00b5 08       		.byte	0x8
 823 00b6 04       		.byte	0x4
 824 00b7 AC010000 		.4byte	.LASF16
 825 00bb 02       		.uleb128 0x2
 826 00bc 01       		.byte	0x1
 827 00bd 08       		.byte	0x8
 828 00be 65020000 		.4byte	.LASF17
 829 00c2 05       		.uleb128 0x5
 830 00c3 5E010000 		.4byte	.LASF18
 831 00c7 04       		.byte	0x4
 832 00c8 4B01     		.2byte	0x14b
 833 00ca CE000000 		.4byte	0xce
 834 00ce 06       		.uleb128 0x6
 835 00cf 81000000 		.4byte	0x81
 836 00d3 02       		.uleb128 0x2
 837 00d4 04       		.byte	0x4
 838 00d5 07       		.byte	0x7
 839 00d6 33020000 		.4byte	.LASF19
 840 00da 07       		.uleb128 0x7
 841 00db 08       		.byte	0x8
 842 00dc 05       		.byte	0x5
 843 00dd 6F       		.byte	0x6f
 844 00de EF000000 		.4byte	0xef
 845 00e2 08       		.uleb128 0x8
 846 00e3 02010000 		.4byte	.LASF21
 847 00e7 05       		.byte	0x5
 848 00e8 71       		.byte	0x71
 849 00e9 EF000000 		.4byte	0xef
 850 00ed 00       		.byte	0
 851 00ee 00       		.byte	0
 852 00ef 09       		.uleb128 0x9
 853 00f0 81000000 		.4byte	0x81
 854 00f4 FF000000 		.4byte	0xff
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 21


 855 00f8 0A       		.uleb128 0xa
 856 00f9 D3000000 		.4byte	0xd3
 857 00fd 07       		.byte	0x7
 858 00fe 00       		.byte	0
 859 00ff 03       		.uleb128 0x3
 860 0100 6A020000 		.4byte	.LASF20
 861 0104 05       		.byte	0x5
 862 0105 72       		.byte	0x72
 863 0106 DA000000 		.4byte	0xda
 864 010a 07       		.uleb128 0x7
 865 010b 10       		.byte	0x10
 866 010c 06       		.byte	0x6
 867 010d 29       		.byte	0x29
 868 010e 37010000 		.4byte	0x137
 869 0112 08       		.uleb128 0x8
 870 0113 99020000 		.4byte	.LASF22
 871 0117 06       		.byte	0x6
 872 0118 2E       		.byte	0x2e
 873 0119 FF000000 		.4byte	0xff
 874 011d 00       		.byte	0
 875 011e 0B       		.uleb128 0xb
 876 011f 444C4300 		.ascii	"DLC\000"
 877 0123 06       		.byte	0x6
 878 0124 2F       		.byte	0x2f
 879 0125 81000000 		.4byte	0x81
 880 0129 08       		.byte	0x8
 881 012a 08       		.uleb128 0x8
 882 012b E5010000 		.4byte	.LASF23
 883 012f 06       		.byte	0x6
 884 0130 30       		.byte	0x30
 885 0131 97000000 		.4byte	0x97
 886 0135 0C       		.byte	0xc
 887 0136 00       		.byte	0
 888 0137 03       		.uleb128 0x3
 889 0138 47000000 		.4byte	.LASF24
 890 013c 06       		.byte	0x6
 891 013d 31       		.byte	0x31
 892 013e 0A010000 		.4byte	0x10a
 893 0142 0C       		.uleb128 0xc
 894 0143 C4010000 		.4byte	.LASF47
 895 0147 01       		.byte	0x1
 896 0148 2D       		.byte	0x2d
 897 0149 81000000 		.4byte	0x81
 898 014d 00000000 		.4byte	.LFB56
 899 0151 50030000 		.4byte	.LFE56-.LFB56
 900 0155 01       		.uleb128 0x1
 901 0156 9C       		.byte	0x9c
 902 0157 B0010000 		.4byte	0x1b0
 903 015b 0D       		.uleb128 0xd
 904 015c 7F020000 		.4byte	.LASF33
 905 0160 01       		.byte	0x1
 906 0161 2D       		.byte	0x2d
 907 0162 B0010000 		.4byte	0x1b0
 908 0166 02       		.uleb128 0x2
 909 0167 91       		.byte	0x91
 910 0168 6C       		.sleb128 -20
 911 0169 0E       		.uleb128 0xe
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 22


 912 016a 4B010000 		.4byte	.LASF25
 913 016e 01       		.byte	0x1
 914 016f 2F       		.byte	0x2f
 915 0170 8C000000 		.4byte	0x8c
 916 0174 02       		.uleb128 0x2
 917 0175 91       		.byte	0x91
 918 0176 76       		.sleb128 -10
 919 0177 0E       		.uleb128 0xe
 920 0178 8E010000 		.4byte	.LASF26
 921 017c 01       		.byte	0x1
 922 017d 30       		.byte	0x30
 923 017e 8C000000 		.4byte	0x8c
 924 0182 02       		.uleb128 0x2
 925 0183 91       		.byte	0x91
 926 0184 74       		.sleb128 -12
 927 0185 0E       		.uleb128 0xe
 928 0186 D5020000 		.4byte	.LASF27
 929 018a 01       		.byte	0x1
 930 018b 31       		.byte	0x31
 931 018c A2000000 		.4byte	0xa2
 932 0190 02       		.uleb128 0x2
 933 0191 91       		.byte	0x91
 934 0192 73       		.sleb128 -13
 935 0193 0E       		.uleb128 0xe
 936 0194 75010000 		.4byte	.LASF28
 937 0198 01       		.byte	0x1
 938 0199 34       		.byte	0x34
 939 019a 81000000 		.4byte	0x81
 940 019e 02       		.uleb128 0x2
 941 019f 91       		.byte	0x91
 942 01a0 72       		.sleb128 -14
 943 01a1 0E       		.uleb128 0xe
 944 01a2 7B010000 		.4byte	.LASF29
 945 01a6 01       		.byte	0x1
 946 01a7 35       		.byte	0x35
 947 01a8 81000000 		.4byte	0x81
 948 01ac 02       		.uleb128 0x2
 949 01ad 91       		.byte	0x91
 950 01ae 71       		.sleb128 -15
 951 01af 00       		.byte	0
 952 01b0 0F       		.uleb128 0xf
 953 01b1 04       		.byte	0x4
 954 01b2 81000000 		.4byte	0x81
 955 01b6 10       		.uleb128 0x10
 956 01b7 4F000000 		.4byte	.LASF48
 957 01bb 01       		.byte	0x1
 958 01bc D4       		.byte	0xd4
 959 01bd 00000000 		.4byte	.LFB57
 960 01c1 20000000 		.4byte	.LFE57-.LFB57
 961 01c5 01       		.uleb128 0x1
 962 01c6 9C       		.byte	0x9c
 963 01c7 11       		.uleb128 0x11
 964 01c8 E0010000 		.4byte	.LASF31
 965 01cc 01       		.byte	0x1
 966 01cd DF       		.byte	0xdf
 967 01ce 68000000 		.4byte	0x68
 968 01d2 00000000 		.4byte	.LFB58
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 23


 969 01d6 60000000 		.4byte	.LFE58-.LFB58
 970 01da 01       		.uleb128 0x1
 971 01db 9C       		.byte	0x9c
 972 01dc F9010000 		.4byte	0x1f9
 973 01e0 12       		.uleb128 0x12
 974 01e1 40000000 		.4byte	.LBB2
 975 01e5 16000000 		.4byte	.LBE2-.LBB2
 976 01e9 0E       		.uleb128 0xe
 977 01ea 16010000 		.4byte	.LASF30
 978 01ee 01       		.byte	0x1
 979 01ef F3       		.byte	0xf3
 980 01f0 37010000 		.4byte	0x137
 981 01f4 02       		.uleb128 0x2
 982 01f5 91       		.byte	0x91
 983 01f6 68       		.sleb128 -24
 984 01f7 00       		.byte	0
 985 01f8 00       		.byte	0
 986 01f9 13       		.uleb128 0x13
 987 01fa 89020000 		.4byte	.LASF49
 988 01fe 01       		.byte	0x1
 989 01ff FF       		.byte	0xff
 990 0200 00000000 		.4byte	.LFB59
 991 0204 24000000 		.4byte	.LFE59-.LFB59
 992 0208 01       		.uleb128 0x1
 993 0209 9C       		.byte	0x9c
 994 020a 14       		.uleb128 0x14
 995 020b F7020000 		.4byte	.LASF32
 996 020f 01       		.byte	0x1
 997 0210 0D01     		.2byte	0x10d
 998 0212 00000000 		.4byte	.LFB60
 999 0216 3C000000 		.4byte	.LFE60-.LFB60
 1000 021a 01       		.uleb128 0x1
 1001 021b 9C       		.byte	0x9c
 1002 021c 3E020000 		.4byte	0x23e
 1003 0220 15       		.uleb128 0x15
 1004 0221 696400   		.ascii	"id\000"
 1005 0224 01       		.byte	0x1
 1006 0225 0D01     		.2byte	0x10d
 1007 0227 2C000000 		.4byte	0x2c
 1008 022b 02       		.uleb128 0x2
 1009 022c 91       		.byte	0x91
 1010 022d 67       		.sleb128 -25
 1011 022e 16       		.uleb128 0x16
 1012 022f 24020000 		.4byte	.LASF34
 1013 0233 01       		.byte	0x1
 1014 0234 0F01     		.2byte	0x10f
 1015 0236 37010000 		.4byte	0x137
 1016 023a 02       		.uleb128 0x2
 1017 023b 91       		.byte	0x91
 1018 023c 68       		.sleb128 -24
 1019 023d 00       		.byte	0
 1020 023e 17       		.uleb128 0x17
 1021 023f 81010000 		.4byte	.LASF35
 1022 0243 07       		.byte	0x7
 1023 0244 1606     		.2byte	0x616
 1024 0246 4A020000 		.4byte	0x24a
 1025 024a 06       		.uleb128 0x6
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 24


 1026 024b 76000000 		.4byte	0x76
 1027 024f 18       		.uleb128 0x18
 1028 0250 10020000 		.4byte	.LASF36
 1029 0254 01       		.byte	0x1
 1030 0255 23       		.byte	0x23
 1031 0256 68000000 		.4byte	0x68
 1032 025a 05       		.uleb128 0x5
 1033 025b 03       		.byte	0x3
 1034 025c 00000000 		.4byte	msgToBeTreatedIndex
 1035 0260 18       		.uleb128 0x18
 1036 0261 0F030000 		.4byte	.LASF37
 1037 0265 01       		.byte	0x1
 1038 0266 24       		.byte	0x24
 1039 0267 68000000 		.4byte	0x68
 1040 026b 05       		.uleb128 0x5
 1041 026c 03       		.byte	0x3
 1042 026d 00000000 		.4byte	msgToBeStoredIndex
 1043 0271 18       		.uleb128 0x18
 1044 0272 A8020000 		.4byte	.LASF38
 1045 0276 01       		.byte	0x1
 1046 0277 22       		.byte	0x22
 1047 0278 68000000 		.4byte	0x68
 1048 027c 05       		.uleb128 0x5
 1049 027d 03       		.byte	0x3
 1050 027e 00000000 		.4byte	messageToBeTreatedCount
 1051 0282 09       		.uleb128 0x9
 1052 0283 37010000 		.4byte	0x137
 1053 0287 92020000 		.4byte	0x292
 1054 028b 0A       		.uleb128 0xa
 1055 028c D3000000 		.4byte	0xd3
 1056 0290 31       		.byte	0x31
 1057 0291 00       		.byte	0
 1058 0292 18       		.uleb128 0x18
 1059 0293 3E010000 		.4byte	.LASF39
 1060 0297 01       		.byte	0x1
 1061 0298 25       		.byte	0x25
 1062 0299 82020000 		.4byte	0x282
 1063 029d 05       		.uleb128 0x5
 1064 029e 03       		.byte	0x3
 1065 029f 00000000 		.4byte	receivedMsgs
 1066 02a3 09       		.uleb128 0x9
 1067 02a4 8C000000 		.4byte	0x8c
 1068 02a8 B3020000 		.4byte	0x2b3
 1069 02ac 0A       		.uleb128 0xa
 1070 02ad D3000000 		.4byte	0xd3
 1071 02b1 03       		.byte	0x3
 1072 02b2 00       		.byte	0
 1073 02b3 19       		.uleb128 0x19
 1074 02b4 A0010000 		.4byte	.LASF40
 1075 02b8 08       		.byte	0x8
 1076 02b9 27       		.byte	0x27
 1077 02ba A3020000 		.4byte	0x2a3
 1078 02be 09       		.uleb128 0x9
 1079 02bf 81000000 		.4byte	0x81
 1080 02c3 CE020000 		.4byte	0x2ce
 1081 02c7 0A       		.uleb128 0xa
 1082 02c8 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 25


 1083 02cc 04       		.byte	0x4
 1084 02cd 00       		.byte	0
 1085 02ce 19       		.uleb128 0x19
 1086 02cf 5B020000 		.4byte	.LASF41
 1087 02d3 08       		.byte	0x8
 1088 02d4 31       		.byte	0x31
 1089 02d5 BE020000 		.4byte	0x2be
 1090 02d9 18       		.uleb128 0x18
 1091 02da 07010000 		.4byte	.LASF42
 1092 02de 01       		.byte	0x1
 1093 02df 28       		.byte	0x28
 1094 02e0 CE000000 		.4byte	0xce
 1095 02e4 05       		.uleb128 0x5
 1096 02e5 03       		.byte	0x3
 1097 02e6 00000000 		.4byte	readCanMessage
 1098 02ea 18       		.uleb128 0x18
 1099 02eb 3C020000 		.4byte	.LASF43
 1100 02ef 01       		.byte	0x1
 1101 02f0 29       		.byte	0x29
 1102 02f1 81000000 		.4byte	0x81
 1103 02f5 05       		.uleb128 0x5
 1104 02f6 03       		.byte	0x3
 1105 02f7 00000000 		.4byte	treatingFunction
 1106 02fb 00       		.byte	0
 1107              		.section	.debug_abbrev,"",%progbits
 1108              	.Ldebug_abbrev0:
 1109 0000 01       		.uleb128 0x1
 1110 0001 11       		.uleb128 0x11
 1111 0002 01       		.byte	0x1
 1112 0003 25       		.uleb128 0x25
 1113 0004 0E       		.uleb128 0xe
 1114 0005 13       		.uleb128 0x13
 1115 0006 0B       		.uleb128 0xb
 1116 0007 03       		.uleb128 0x3
 1117 0008 0E       		.uleb128 0xe
 1118 0009 1B       		.uleb128 0x1b
 1119 000a 0E       		.uleb128 0xe
 1120 000b 55       		.uleb128 0x55
 1121 000c 17       		.uleb128 0x17
 1122 000d 11       		.uleb128 0x11
 1123 000e 01       		.uleb128 0x1
 1124 000f 10       		.uleb128 0x10
 1125 0010 17       		.uleb128 0x17
 1126 0011 00       		.byte	0
 1127 0012 00       		.byte	0
 1128 0013 02       		.uleb128 0x2
 1129 0014 24       		.uleb128 0x24
 1130 0015 00       		.byte	0
 1131 0016 0B       		.uleb128 0xb
 1132 0017 0B       		.uleb128 0xb
 1133 0018 3E       		.uleb128 0x3e
 1134 0019 0B       		.uleb128 0xb
 1135 001a 03       		.uleb128 0x3
 1136 001b 0E       		.uleb128 0xe
 1137 001c 00       		.byte	0
 1138 001d 00       		.byte	0
 1139 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 26


 1140 001f 16       		.uleb128 0x16
 1141 0020 00       		.byte	0
 1142 0021 03       		.uleb128 0x3
 1143 0022 0E       		.uleb128 0xe
 1144 0023 3A       		.uleb128 0x3a
 1145 0024 0B       		.uleb128 0xb
 1146 0025 3B       		.uleb128 0x3b
 1147 0026 0B       		.uleb128 0xb
 1148 0027 49       		.uleb128 0x49
 1149 0028 13       		.uleb128 0x13
 1150 0029 00       		.byte	0
 1151 002a 00       		.byte	0
 1152 002b 04       		.uleb128 0x4
 1153 002c 24       		.uleb128 0x24
 1154 002d 00       		.byte	0
 1155 002e 0B       		.uleb128 0xb
 1156 002f 0B       		.uleb128 0xb
 1157 0030 3E       		.uleb128 0x3e
 1158 0031 0B       		.uleb128 0xb
 1159 0032 03       		.uleb128 0x3
 1160 0033 08       		.uleb128 0x8
 1161 0034 00       		.byte	0
 1162 0035 00       		.byte	0
 1163 0036 05       		.uleb128 0x5
 1164 0037 16       		.uleb128 0x16
 1165 0038 00       		.byte	0
 1166 0039 03       		.uleb128 0x3
 1167 003a 0E       		.uleb128 0xe
 1168 003b 3A       		.uleb128 0x3a
 1169 003c 0B       		.uleb128 0xb
 1170 003d 3B       		.uleb128 0x3b
 1171 003e 05       		.uleb128 0x5
 1172 003f 49       		.uleb128 0x49
 1173 0040 13       		.uleb128 0x13
 1174 0041 00       		.byte	0
 1175 0042 00       		.byte	0
 1176 0043 06       		.uleb128 0x6
 1177 0044 35       		.uleb128 0x35
 1178 0045 00       		.byte	0
 1179 0046 49       		.uleb128 0x49
 1180 0047 13       		.uleb128 0x13
 1181 0048 00       		.byte	0
 1182 0049 00       		.byte	0
 1183 004a 07       		.uleb128 0x7
 1184 004b 13       		.uleb128 0x13
 1185 004c 01       		.byte	0x1
 1186 004d 0B       		.uleb128 0xb
 1187 004e 0B       		.uleb128 0xb
 1188 004f 3A       		.uleb128 0x3a
 1189 0050 0B       		.uleb128 0xb
 1190 0051 3B       		.uleb128 0x3b
 1191 0052 0B       		.uleb128 0xb
 1192 0053 01       		.uleb128 0x1
 1193 0054 13       		.uleb128 0x13
 1194 0055 00       		.byte	0
 1195 0056 00       		.byte	0
 1196 0057 08       		.uleb128 0x8
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 27


 1197 0058 0D       		.uleb128 0xd
 1198 0059 00       		.byte	0
 1199 005a 03       		.uleb128 0x3
 1200 005b 0E       		.uleb128 0xe
 1201 005c 3A       		.uleb128 0x3a
 1202 005d 0B       		.uleb128 0xb
 1203 005e 3B       		.uleb128 0x3b
 1204 005f 0B       		.uleb128 0xb
 1205 0060 49       		.uleb128 0x49
 1206 0061 13       		.uleb128 0x13
 1207 0062 38       		.uleb128 0x38
 1208 0063 0B       		.uleb128 0xb
 1209 0064 00       		.byte	0
 1210 0065 00       		.byte	0
 1211 0066 09       		.uleb128 0x9
 1212 0067 01       		.uleb128 0x1
 1213 0068 01       		.byte	0x1
 1214 0069 49       		.uleb128 0x49
 1215 006a 13       		.uleb128 0x13
 1216 006b 01       		.uleb128 0x1
 1217 006c 13       		.uleb128 0x13
 1218 006d 00       		.byte	0
 1219 006e 00       		.byte	0
 1220 006f 0A       		.uleb128 0xa
 1221 0070 21       		.uleb128 0x21
 1222 0071 00       		.byte	0
 1223 0072 49       		.uleb128 0x49
 1224 0073 13       		.uleb128 0x13
 1225 0074 2F       		.uleb128 0x2f
 1226 0075 0B       		.uleb128 0xb
 1227 0076 00       		.byte	0
 1228 0077 00       		.byte	0
 1229 0078 0B       		.uleb128 0xb
 1230 0079 0D       		.uleb128 0xd
 1231 007a 00       		.byte	0
 1232 007b 03       		.uleb128 0x3
 1233 007c 08       		.uleb128 0x8
 1234 007d 3A       		.uleb128 0x3a
 1235 007e 0B       		.uleb128 0xb
 1236 007f 3B       		.uleb128 0x3b
 1237 0080 0B       		.uleb128 0xb
 1238 0081 49       		.uleb128 0x49
 1239 0082 13       		.uleb128 0x13
 1240 0083 38       		.uleb128 0x38
 1241 0084 0B       		.uleb128 0xb
 1242 0085 00       		.byte	0
 1243 0086 00       		.byte	0
 1244 0087 0C       		.uleb128 0xc
 1245 0088 2E       		.uleb128 0x2e
 1246 0089 01       		.byte	0x1
 1247 008a 3F       		.uleb128 0x3f
 1248 008b 19       		.uleb128 0x19
 1249 008c 03       		.uleb128 0x3
 1250 008d 0E       		.uleb128 0xe
 1251 008e 3A       		.uleb128 0x3a
 1252 008f 0B       		.uleb128 0xb
 1253 0090 3B       		.uleb128 0x3b
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 28


 1254 0091 0B       		.uleb128 0xb
 1255 0092 27       		.uleb128 0x27
 1256 0093 19       		.uleb128 0x19
 1257 0094 49       		.uleb128 0x49
 1258 0095 13       		.uleb128 0x13
 1259 0096 11       		.uleb128 0x11
 1260 0097 01       		.uleb128 0x1
 1261 0098 12       		.uleb128 0x12
 1262 0099 06       		.uleb128 0x6
 1263 009a 40       		.uleb128 0x40
 1264 009b 18       		.uleb128 0x18
 1265 009c 9642     		.uleb128 0x2116
 1266 009e 19       		.uleb128 0x19
 1267 009f 01       		.uleb128 0x1
 1268 00a0 13       		.uleb128 0x13
 1269 00a1 00       		.byte	0
 1270 00a2 00       		.byte	0
 1271 00a3 0D       		.uleb128 0xd
 1272 00a4 05       		.uleb128 0x5
 1273 00a5 00       		.byte	0
 1274 00a6 03       		.uleb128 0x3
 1275 00a7 0E       		.uleb128 0xe
 1276 00a8 3A       		.uleb128 0x3a
 1277 00a9 0B       		.uleb128 0xb
 1278 00aa 3B       		.uleb128 0x3b
 1279 00ab 0B       		.uleb128 0xb
 1280 00ac 49       		.uleb128 0x49
 1281 00ad 13       		.uleb128 0x13
 1282 00ae 02       		.uleb128 0x2
 1283 00af 18       		.uleb128 0x18
 1284 00b0 00       		.byte	0
 1285 00b1 00       		.byte	0
 1286 00b2 0E       		.uleb128 0xe
 1287 00b3 34       		.uleb128 0x34
 1288 00b4 00       		.byte	0
 1289 00b5 03       		.uleb128 0x3
 1290 00b6 0E       		.uleb128 0xe
 1291 00b7 3A       		.uleb128 0x3a
 1292 00b8 0B       		.uleb128 0xb
 1293 00b9 3B       		.uleb128 0x3b
 1294 00ba 0B       		.uleb128 0xb
 1295 00bb 49       		.uleb128 0x49
 1296 00bc 13       		.uleb128 0x13
 1297 00bd 02       		.uleb128 0x2
 1298 00be 18       		.uleb128 0x18
 1299 00bf 00       		.byte	0
 1300 00c0 00       		.byte	0
 1301 00c1 0F       		.uleb128 0xf
 1302 00c2 0F       		.uleb128 0xf
 1303 00c3 00       		.byte	0
 1304 00c4 0B       		.uleb128 0xb
 1305 00c5 0B       		.uleb128 0xb
 1306 00c6 49       		.uleb128 0x49
 1307 00c7 13       		.uleb128 0x13
 1308 00c8 00       		.byte	0
 1309 00c9 00       		.byte	0
 1310 00ca 10       		.uleb128 0x10
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 29


 1311 00cb 2E       		.uleb128 0x2e
 1312 00cc 00       		.byte	0
 1313 00cd 3F       		.uleb128 0x3f
 1314 00ce 19       		.uleb128 0x19
 1315 00cf 03       		.uleb128 0x3
 1316 00d0 0E       		.uleb128 0xe
 1317 00d1 3A       		.uleb128 0x3a
 1318 00d2 0B       		.uleb128 0xb
 1319 00d3 3B       		.uleb128 0x3b
 1320 00d4 0B       		.uleb128 0xb
 1321 00d5 27       		.uleb128 0x27
 1322 00d6 19       		.uleb128 0x19
 1323 00d7 11       		.uleb128 0x11
 1324 00d8 01       		.uleb128 0x1
 1325 00d9 12       		.uleb128 0x12
 1326 00da 06       		.uleb128 0x6
 1327 00db 40       		.uleb128 0x40
 1328 00dc 18       		.uleb128 0x18
 1329 00dd 9742     		.uleb128 0x2117
 1330 00df 19       		.uleb128 0x19
 1331 00e0 00       		.byte	0
 1332 00e1 00       		.byte	0
 1333 00e2 11       		.uleb128 0x11
 1334 00e3 2E       		.uleb128 0x2e
 1335 00e4 01       		.byte	0x1
 1336 00e5 3F       		.uleb128 0x3f
 1337 00e6 19       		.uleb128 0x19
 1338 00e7 03       		.uleb128 0x3
 1339 00e8 0E       		.uleb128 0xe
 1340 00e9 3A       		.uleb128 0x3a
 1341 00ea 0B       		.uleb128 0xb
 1342 00eb 3B       		.uleb128 0x3b
 1343 00ec 0B       		.uleb128 0xb
 1344 00ed 49       		.uleb128 0x49
 1345 00ee 13       		.uleb128 0x13
 1346 00ef 11       		.uleb128 0x11
 1347 00f0 01       		.uleb128 0x1
 1348 00f1 12       		.uleb128 0x12
 1349 00f2 06       		.uleb128 0x6
 1350 00f3 40       		.uleb128 0x40
 1351 00f4 18       		.uleb128 0x18
 1352 00f5 9642     		.uleb128 0x2116
 1353 00f7 19       		.uleb128 0x19
 1354 00f8 01       		.uleb128 0x1
 1355 00f9 13       		.uleb128 0x13
 1356 00fa 00       		.byte	0
 1357 00fb 00       		.byte	0
 1358 00fc 12       		.uleb128 0x12
 1359 00fd 0B       		.uleb128 0xb
 1360 00fe 01       		.byte	0x1
 1361 00ff 11       		.uleb128 0x11
 1362 0100 01       		.uleb128 0x1
 1363 0101 12       		.uleb128 0x12
 1364 0102 06       		.uleb128 0x6
 1365 0103 00       		.byte	0
 1366 0104 00       		.byte	0
 1367 0105 13       		.uleb128 0x13
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 30


 1368 0106 2E       		.uleb128 0x2e
 1369 0107 00       		.byte	0
 1370 0108 3F       		.uleb128 0x3f
 1371 0109 19       		.uleb128 0x19
 1372 010a 03       		.uleb128 0x3
 1373 010b 0E       		.uleb128 0xe
 1374 010c 3A       		.uleb128 0x3a
 1375 010d 0B       		.uleb128 0xb
 1376 010e 3B       		.uleb128 0x3b
 1377 010f 0B       		.uleb128 0xb
 1378 0110 11       		.uleb128 0x11
 1379 0111 01       		.uleb128 0x1
 1380 0112 12       		.uleb128 0x12
 1381 0113 06       		.uleb128 0x6
 1382 0114 40       		.uleb128 0x40
 1383 0115 18       		.uleb128 0x18
 1384 0116 9642     		.uleb128 0x2116
 1385 0118 19       		.uleb128 0x19
 1386 0119 00       		.byte	0
 1387 011a 00       		.byte	0
 1388 011b 14       		.uleb128 0x14
 1389 011c 2E       		.uleb128 0x2e
 1390 011d 01       		.byte	0x1
 1391 011e 3F       		.uleb128 0x3f
 1392 011f 19       		.uleb128 0x19
 1393 0120 03       		.uleb128 0x3
 1394 0121 0E       		.uleb128 0xe
 1395 0122 3A       		.uleb128 0x3a
 1396 0123 0B       		.uleb128 0xb
 1397 0124 3B       		.uleb128 0x3b
 1398 0125 05       		.uleb128 0x5
 1399 0126 27       		.uleb128 0x27
 1400 0127 19       		.uleb128 0x19
 1401 0128 11       		.uleb128 0x11
 1402 0129 01       		.uleb128 0x1
 1403 012a 12       		.uleb128 0x12
 1404 012b 06       		.uleb128 0x6
 1405 012c 40       		.uleb128 0x40
 1406 012d 18       		.uleb128 0x18
 1407 012e 9642     		.uleb128 0x2116
 1408 0130 19       		.uleb128 0x19
 1409 0131 01       		.uleb128 0x1
 1410 0132 13       		.uleb128 0x13
 1411 0133 00       		.byte	0
 1412 0134 00       		.byte	0
 1413 0135 15       		.uleb128 0x15
 1414 0136 05       		.uleb128 0x5
 1415 0137 00       		.byte	0
 1416 0138 03       		.uleb128 0x3
 1417 0139 08       		.uleb128 0x8
 1418 013a 3A       		.uleb128 0x3a
 1419 013b 0B       		.uleb128 0xb
 1420 013c 3B       		.uleb128 0x3b
 1421 013d 05       		.uleb128 0x5
 1422 013e 49       		.uleb128 0x49
 1423 013f 13       		.uleb128 0x13
 1424 0140 02       		.uleb128 0x2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 31


 1425 0141 18       		.uleb128 0x18
 1426 0142 00       		.byte	0
 1427 0143 00       		.byte	0
 1428 0144 16       		.uleb128 0x16
 1429 0145 34       		.uleb128 0x34
 1430 0146 00       		.byte	0
 1431 0147 03       		.uleb128 0x3
 1432 0148 0E       		.uleb128 0xe
 1433 0149 3A       		.uleb128 0x3a
 1434 014a 0B       		.uleb128 0xb
 1435 014b 3B       		.uleb128 0x3b
 1436 014c 05       		.uleb128 0x5
 1437 014d 49       		.uleb128 0x49
 1438 014e 13       		.uleb128 0x13
 1439 014f 02       		.uleb128 0x2
 1440 0150 18       		.uleb128 0x18
 1441 0151 00       		.byte	0
 1442 0152 00       		.byte	0
 1443 0153 17       		.uleb128 0x17
 1444 0154 34       		.uleb128 0x34
 1445 0155 00       		.byte	0
 1446 0156 03       		.uleb128 0x3
 1447 0157 0E       		.uleb128 0xe
 1448 0158 3A       		.uleb128 0x3a
 1449 0159 0B       		.uleb128 0xb
 1450 015a 3B       		.uleb128 0x3b
 1451 015b 05       		.uleb128 0x5
 1452 015c 49       		.uleb128 0x49
 1453 015d 13       		.uleb128 0x13
 1454 015e 3F       		.uleb128 0x3f
 1455 015f 19       		.uleb128 0x19
 1456 0160 3C       		.uleb128 0x3c
 1457 0161 19       		.uleb128 0x19
 1458 0162 00       		.byte	0
 1459 0163 00       		.byte	0
 1460 0164 18       		.uleb128 0x18
 1461 0165 34       		.uleb128 0x34
 1462 0166 00       		.byte	0
 1463 0167 03       		.uleb128 0x3
 1464 0168 0E       		.uleb128 0xe
 1465 0169 3A       		.uleb128 0x3a
 1466 016a 0B       		.uleb128 0xb
 1467 016b 3B       		.uleb128 0x3b
 1468 016c 0B       		.uleb128 0xb
 1469 016d 49       		.uleb128 0x49
 1470 016e 13       		.uleb128 0x13
 1471 016f 3F       		.uleb128 0x3f
 1472 0170 19       		.uleb128 0x19
 1473 0171 02       		.uleb128 0x2
 1474 0172 18       		.uleb128 0x18
 1475 0173 00       		.byte	0
 1476 0174 00       		.byte	0
 1477 0175 19       		.uleb128 0x19
 1478 0176 34       		.uleb128 0x34
 1479 0177 00       		.byte	0
 1480 0178 03       		.uleb128 0x3
 1481 0179 0E       		.uleb128 0xe
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 32


 1482 017a 3A       		.uleb128 0x3a
 1483 017b 0B       		.uleb128 0xb
 1484 017c 3B       		.uleb128 0x3b
 1485 017d 0B       		.uleb128 0xb
 1486 017e 49       		.uleb128 0x49
 1487 017f 13       		.uleb128 0x13
 1488 0180 3F       		.uleb128 0x3f
 1489 0181 19       		.uleb128 0x19
 1490 0182 3C       		.uleb128 0x3c
 1491 0183 19       		.uleb128 0x19
 1492 0184 00       		.byte	0
 1493 0185 00       		.byte	0
 1494 0186 00       		.byte	0
 1495              		.section	.debug_aranges,"",%progbits
 1496 0000 3C000000 		.4byte	0x3c
 1497 0004 0200     		.2byte	0x2
 1498 0006 00000000 		.4byte	.Ldebug_info0
 1499 000a 04       		.byte	0x4
 1500 000b 00       		.byte	0
 1501 000c 0000     		.2byte	0
 1502 000e 0000     		.2byte	0
 1503 0010 00000000 		.4byte	.LFB56
 1504 0014 50030000 		.4byte	.LFE56-.LFB56
 1505 0018 00000000 		.4byte	.LFB57
 1506 001c 20000000 		.4byte	.LFE57-.LFB57
 1507 0020 00000000 		.4byte	.LFB58
 1508 0024 60000000 		.4byte	.LFE58-.LFB58
 1509 0028 00000000 		.4byte	.LFB59
 1510 002c 24000000 		.4byte	.LFE59-.LFB59
 1511 0030 00000000 		.4byte	.LFB60
 1512 0034 3C000000 		.4byte	.LFE60-.LFB60
 1513 0038 00000000 		.4byte	0
 1514 003c 00000000 		.4byte	0
 1515              		.section	.debug_ranges,"",%progbits
 1516              	.Ldebug_ranges0:
 1517 0000 00000000 		.4byte	.LFB56
 1518 0004 50030000 		.4byte	.LFE56
 1519 0008 00000000 		.4byte	.LFB57
 1520 000c 20000000 		.4byte	.LFE57
 1521 0010 00000000 		.4byte	.LFB58
 1522 0014 60000000 		.4byte	.LFE58
 1523 0018 00000000 		.4byte	.LFB59
 1524 001c 24000000 		.4byte	.LFE59
 1525 0020 00000000 		.4byte	.LFB60
 1526 0024 3C000000 		.4byte	.LFE60
 1527 0028 00000000 		.4byte	0
 1528 002c 00000000 		.4byte	0
 1529              		.section	.debug_line,"",%progbits
 1530              	.Ldebug_line0:
 1531 0000 51020000 		.section	.debug_str,"MS",%progbits,1
 1531      02008301 
 1531      00000201 
 1531      FB0E0D00 
 1531      01010101 
 1532              	.LASF46:
 1533 0000 433A5C55 		.ascii	"C:\\Users\\plod1602\\Desktop\\GripperPSoC5_CAN\\Gri"
 1533      73657273 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 33


 1533      5C706C6F 
 1533      64313630 
 1533      325C4465 
 1534 002e 70706572 		.ascii	"pperDynamixelPSoC5.cydsn\000"
 1534      44796E61 
 1534      6D697865 
 1534      6C50536F 
 1534      43352E63 
 1535              	.LASF24:
 1536 0047 43414E5F 		.ascii	"CAN_MSG\000"
 1536      4D534700 
 1537              	.LASF48:
 1538 004f 436F756E 		.ascii	"CounterCanInterruptHandler\000"
 1538      74657243 
 1538      616E496E 
 1538      74657272 
 1538      75707448 
 1539              	.LASF9:
 1540 006a 5F5F696E 		.ascii	"__int32_t\000"
 1540      7433325F 
 1540      7400
 1541              	.LASF44:
 1542 0074 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1542      4320342E 
 1542      392E3320 
 1542      32303135 
 1542      30333033 
 1543 00a7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1543      20726576 
 1543      6973696F 
 1543      6E203232 
 1543      31323230 
 1544 00da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1544      66756E63 
 1544      74696F6E 
 1544      2D736563 
 1544      74696F6E 
 1545              	.LASF21:
 1546 0102 62797465 		.ascii	"byte\000"
 1546      00
 1547              	.LASF42:
 1548 0107 72656164 		.ascii	"readCanMessage\000"
 1548      43616E4D 
 1548      65737361 
 1548      676500
 1549              	.LASF30:
 1550 0116 6D736754 		.ascii	"msgToTreat\000"
 1550      6F547265 
 1550      617400
 1551              	.LASF45:
 1552 0121 2E5C6D61 		.ascii	".\\main.c\000"
 1552      696E2E63 
 1552      00
 1553              	.LASF15:
 1554 012a 666C6F61 		.ascii	"float\000"
 1554      7400
 1555              	.LASF1:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 34


 1556 0130 756E7369 		.ascii	"unsigned char\000"
 1556      676E6564 
 1556      20636861 
 1556      7200
 1557              	.LASF39:
 1558 013e 72656365 		.ascii	"receivedMsgs\000"
 1558      69766564 
 1558      4D736773 
 1558      00
 1559              	.LASF25:
 1560 014b 72696768 		.ascii	"rightMotorPosition\000"
 1560      744D6F74 
 1560      6F72506F 
 1560      73697469 
 1560      6F6E00
 1561              	.LASF18:
 1562 015e 72656738 		.ascii	"reg8\000"
 1562      00
 1563              	.LASF5:
 1564 0163 6C6F6E67 		.ascii	"long unsigned int\000"
 1564      20756E73 
 1564      69676E65 
 1564      6420696E 
 1564      7400
 1565              	.LASF28:
 1566 0175 62797465 		.ascii	"byte1\000"
 1566      3100
 1567              	.LASF29:
 1568 017b 62797465 		.ascii	"byte2\000"
 1568      3200
 1569              	.LASF35:
 1570 0181 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1570      52784275 
 1570      66666572 
 1570      00
 1571              	.LASF26:
 1572 018e 6C656674 		.ascii	"leftMotorPosition\000"
 1572      4D6F746F 
 1572      72506F73 
 1572      6974696F 
 1572      6E00
 1573              	.LASF40:
 1574 01a0 6D6F746F 		.ascii	"motorMargin\000"
 1574      724D6172 
 1574      67696E00 
 1575              	.LASF16:
 1576 01ac 646F7562 		.ascii	"double\000"
 1576      6C6500
 1577              	.LASF12:
 1578 01b3 75696E74 		.ascii	"uint16\000"
 1578      313600
 1579              	.LASF2:
 1580 01ba 73686F72 		.ascii	"short int\000"
 1580      7420696E 
 1580      7400
 1581              	.LASF47:
 1582 01c4 74726561 		.ascii	"treatCanMessage\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 35


 1582      7443616E 
 1582      4D657373 
 1582      61676500 
 1583              	.LASF14:
 1584 01d4 696E7438 		.ascii	"int8\000"
 1584      00
 1585              	.LASF13:
 1586 01d9 75696E74 		.ascii	"uint32\000"
 1586      333200
 1587              	.LASF31:
 1588 01e0 6D61696E 		.ascii	"main\000"
 1588      00
 1589              	.LASF23:
 1590 01e5 43414E5F 		.ascii	"CAN_ID\000"
 1590      494400
 1591              	.LASF8:
 1592 01ec 756E7369 		.ascii	"unsigned int\000"
 1592      676E6564 
 1592      20696E74 
 1592      00
 1593              	.LASF7:
 1594 01f9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1594      206C6F6E 
 1594      6720756E 
 1594      7369676E 
 1594      65642069 
 1595              	.LASF36:
 1596 0210 6D736754 		.ascii	"msgToBeTreatedIndex\000"
 1596      6F426554 
 1596      72656174 
 1596      6564496E 
 1596      64657800 
 1597              	.LASF34:
 1598 0224 63616E4D 		.ascii	"canMsg\000"
 1598      736700
 1599              	.LASF10:
 1600 022b 696E7433 		.ascii	"int32_t\000"
 1600      325F7400 
 1601              	.LASF19:
 1602 0233 73697A65 		.ascii	"sizetype\000"
 1602      74797065 
 1602      00
 1603              	.LASF43:
 1604 023c 74726561 		.ascii	"treatingFunction\000"
 1604      74696E67 
 1604      46756E63 
 1604      74696F6E 
 1604      00
 1605              	.LASF6:
 1606 024d 6C6F6E67 		.ascii	"long long int\000"
 1606      206C6F6E 
 1606      6720696E 
 1606      7400
 1607              	.LASF41:
 1608 025b 6D6F746F 		.ascii	"motorType\000"
 1608      72547970 
 1608      6500
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 36


 1609              	.LASF17:
 1610 0265 63686172 		.ascii	"char\000"
 1610      00
 1611              	.LASF20:
 1612 026a 43414E5F 		.ascii	"CAN_1_DATA_BYTES_MSG\000"
 1612      315F4441 
 1612      54415F42 
 1612      59544553 
 1612      5F4D5347 
 1613              	.LASF33:
 1614 027f 63616E50 		.ascii	"canPacket\000"
 1614      61636B65 
 1614      7400
 1615              	.LASF49:
 1616 0289 696E6974 		.ascii	"init_can_module\000"
 1616      5F63616E 
 1616      5F6D6F64 
 1616      756C6500 
 1617              	.LASF22:
 1618 0299 6D736742 		.ascii	"msgBytes\000"
 1618      79746573 
 1618      00
 1619              	.LASF11:
 1620 02a2 75696E74 		.ascii	"uint8\000"
 1620      3800
 1621              	.LASF38:
 1622 02a8 6D657373 		.ascii	"messageToBeTreatedCount\000"
 1622      61676554 
 1622      6F426554 
 1622      72656174 
 1622      6564436F 
 1623              	.LASF4:
 1624 02c0 6C6F6E67 		.ascii	"long int\000"
 1624      20696E74 
 1624      00
 1625              	.LASF0:
 1626 02c9 7369676E 		.ascii	"signed char\000"
 1626      65642063 
 1626      68617200 
 1627              	.LASF27:
 1628 02d5 63616E49 		.ascii	"canInstruction\000"
 1628      6E737472 
 1628      75637469 
 1628      6F6E00
 1629              	.LASF3:
 1630 02e4 73686F72 		.ascii	"short unsigned int\000"
 1630      7420756E 
 1630      7369676E 
 1630      65642069 
 1630      6E7400
 1631              	.LASF32:
 1632 02f7 73656E64 		.ascii	"sendMotorTypeToComputer\000"
 1632      4D6F746F 
 1632      72547970 
 1632      65546F43 
 1632      6F6D7075 
 1633              	.LASF37:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\cc3VOlMg.s 			page 37


 1634 030f 6D736754 		.ascii	"msgToBeStoredIndex\000"
 1634      6F426553 
 1634      746F7265 
 1634      64496E64 
 1634      657800
 1635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
